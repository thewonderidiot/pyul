* 1800A JOB 55-238-00  YUL SYSTEM
*       YUL
Y  YUL  ADD NEW COMPUTER BLK2
Y  YUL  ASSEMBLY PASS 1 FOR BLK2 IS AVAILABLE
Y  YUL  ASSEMBLY PASS 2 FOR BLK2 IS AVAILABLE
Y  YUL  ASSEMBLY PASS 3 FOR BLK2 IS AVAILABLE
Y  YUL  MANUFACTURING FOR BLK2 IS AVAILABLE
Y  YUL  ASSEMBLE NEW BLK2 PROGRAM AURORA BY DAP GROUP
S       UPGRADE TO REVISION 11
L      2ASSEMBLY AND OPERATION INFORMATION
R0001  4VERB DEFINITIONS
R0002    REGULAR VERBS
R0003   01  DISPLAY OCTAL COMP 1 (R1)
R0004   02  DISPLAY OCTAL COMP 2 (R1)
R0005   03  DISPLAY OCTAL COMP 3 (R1)
R0006   04  DISPLAY OCTAL COMP 1,2 (R1,R2)
R0007   05  DISPLAY OCTAL COMP 1,2,3 (R1,R2,R3)
R0008   06  DECIMAL DISPLAY
R0009   07  DP DECIMAL DISPLAY (R1,R2)
R0010   10  SPARE
R0011   11  MONITOR OCT COMP 1 (R1)
R0012   12  MONITOR OCT COMP 2 (R1)
R0013   13  MONITOR OCT COMP 3 (R1)
R0014   14  MONITOR OCT COMP 1,2 (R1)
R0015   15  MONITOR OCT COMP 1,2,3 (R1,R2,R3)
R0016   16  MONITOR DECIMAL
R0017   17  MONITOR DP DECIMAL (R1,R2)
R0018   20  SPARE
R0019   21  LOAD COMP 1 (R1)
R0020   22  LOAD COMP 2 (R2)
R0021   23  LOAD COMP 3 (R3)
R0022   24  LOAD COMP 1,2 (R1,R2)
R0023   25  LOAD COMP 1,2,3 (R1,R2,R3)
R0024   26  SPARE
R0025   27  FIXED MEMORY DISPLAY
R0026   30  REQUEST EXECUTIVE
R0027   31  REQUEST WAITLIST
R0028   32  C(R2) INTO R3, C(R1) INTO R2
R0029   33  PROCEED WITHOUT DATA
R0030   34  TERMINATE CURRENT TEST OR LOAD REQUEST
R0031   35  TEST LIGHTS
R0032   36  FRESH START
R0033   37  CHANGE MAJOR MODE
R0034  4END OF REGULAR VERBS
R0035   EXTENDED VERBS
R0036   40  ZERO (USED WITH NOUNS 20, 40, AND 70)
R0037   41  COARSE ALIGN (USED WITH NOUNS 20, 40, AND 70)
R0038   42  FINE ALIGN IMU
R0039   43  LOAD IMU ATTITUDE ERROR METERS
R0040   44  ILLEGAL VERB
R0041   45  COMMAND LR TO POSITION 2
R0042   46  SAMPLE RADAR ONCE PER SECOND
R0043   47  PERFORM LEM FCS TEST
R0044   50  PLEASE PERFORM
R0045   51  PLEASE MARK
R0046   52  PLEASE MARK Y
R0047   53  PLEASE MARK X OR Y
R0048   54  PULSE TORQUE GYROS
R0049   55  ALIGN TIME
R0050   56  PERFORM BANKSUM
R0051   57  PERFORM SYSTEM TEST
R0052   60  ILLEGAL VERB
R0053   61  ILLEGAL VERB
R0054   62  SCAN LEM INBITS
R0055   63  INITIALIZE AGS
R0056   64  ILLEGAL VERB
R0057   65  ILLEGAL VERB
R0058   66  ILLEGAL VERB
R0059   67  ILLEGAL VERB
R0060   70  ILLEGAL VERB
R0061   71  ILLEGAL VERB
R0062   72  ILLEGAL VERB
R0063   73       RHC USED FOR MINIMUM IMPULSE
R0064   74       RHC USED FOR RATE COMMAND
R0065   75       DIGITAL AUTOPILOT WIDE DEADBAND
R0066   76       DIGITAL AUTOPILOT NARROW DEADBAND
R0067   77  ILLEGAL VERB
P0068   NORMAL NOUNS                                       SCALE AND DECIMAL POI
 0069  9NT
R0070   00  NOT IN USE
R0071   01  SPECIFY MACHINE ADDRESS (FRACTIONAL)           (.XXXXX)
R0072   02  SPECIFY MACHINE ADDRESS (WHOLE)                (XXXXX.)
R0073   03  SPECIFY MACHINE ADDRESS (DEGREES)              (XXX.XXDEGREES)
R0074   04  SPECIFY MACHINE ADDRESS (HOURS)                (XXX.XXHOURS)
R0075   05  SPECIFY MACHINE ADDRESS (SECONDS)              (XXX.XXSECONDS)
R0076   06  SPECIFY MACHINE ADDRESS (GYRO DEGREES)         (XX.XXXDEGREES)
R0077   07  SPARE
R0078   10  CHANNEL TO BE SPECIFIED
R0079   11  SPARE
R0080   12  SPARE
R0081   13  SPARE
R0082   14  SPARE
R0083   15  INCREMENT MACHINE ADDRESS                      (OCTAL ONLY)
R0084   16  TIME SECONDS                                   (XXX.XXSECONDS)
R0085   17  TIME HOURS                                     (XXX.XXHOURS)
R0086   20  ICDU                                           (XXX.XXDEGREES)
R0087   21  PIPAS                                          (XXXXX.PULSES)
R0088   22  NEW ANGLES I                                   (XXX.XXDEGREES)
R0089   23  DELTA ANGLES I                                 (XXX.XXDEGREES)
R0090   24  DELTA TIME (SECONDS)                           (XXX.XXSECONDS)
R0091   25  CHECKLIST                                      (XXXXX.)
R0092   26  PRIO/DELAY, ADRES, BBCON                       (OCTAL ONLY)
R0093   27  SELF TEST ON/OFF SWITCH                        (XXXXX.)
R0094   30  STAR NUMBERS                                   (XXXXX.)
R0095   31  FAILREG, SFAIL, ERCOUNT                        (OCTAL ONLY)
R0096   32  DECISION TIME (MIDCOURSE)                      (XXX.XXHOURS (INTERNA
 0097  9L UNITS = WEEKS))
R0098   33  EPHEMERIS TIME (MIDCOURSE)                     (XXX.XXHOURS (INTERNA
 0099  9L UNITS = WEEKS))
R0100   34  MEASURED QUANTITY (MIDCOURSE)                  (XXXX.XKILOMETERS)
R0101   35  INBIT MESSAGE                                  (OCTAL ONLY)
R0102   36  LANDMARK DATA 1                                (OCTAL ONLY)
R0103   37  LANDMARK DATA 2                                (OCTAL ONLY)
R0104   40  RENDEZVOUS RADAR ANGLES (TRUNION,SHAFT)        (XXX.XXDEGREES)
R0105   41  NEW RENDEZVOUS RADAR ANGLES (TRUNION,SHAFT)    (XXX.XXDEGREES)
R0106   42  AOT ROTATION ANGLES                            (XXX.XXDEGREES)
R0107   43  AOT DETENT CODE                                (XXXXX.)
R0108   44  FORWARD VELOCITY, LATERAL VELOCITY             (XXXXX.FEET/SEC)
R0109   45  ROTATIONAL HAND CONTROLLER ANGLE RATES         (XXXXX.DEG/SEC)
R0110   46  SPARE
R0111   47  SPARE
R0112   50  SPARE
R0113   51  SPARE
R0114   52  GYRO BIAS DRIFT                                (.BBXXXXXMILLIRAD/SEC
 0115  9)
R0116   53  GYRO INPUT AXIS ACCELERATION DRIFT             (.BBXXXXX(MILLIRAD/SE
 0117  9C)/(CM/SEC SEC))
R0118   54  GYRO SPIN AXIS ACCELERATION DRIFT              (.BBXXXXX(MILLIRAD/SE
 0119  9C)/(CM/SEC SEC))
R0120  4END OF NORMAL NOUNS
R0121   MIXED NOUNS                                        SCALE AND DECIMAL POI
 0122  9NT
R0123   55  LANDING RADAR ALTITUDE, TIME (SECONDS)         (XXXXX.FEET, XXX.XXSE
 0124  9C)
R0125   56  LANDING RADAR VELX, TIME (SECONDS)             (XXXXX.FEET/SEC, XXX.
 0126  9XXSEC)
R0127   57  LANDING RADAR VELY, TIME (SECONDS)             (XXXXX.FEET/SEC, XXX.
 0128  9XXSEC)
R0129   60  LANDING RADAR VELZ, TIME (SECONDS)             (XXXXX.FEET/SEC, XXX.
 0130  9XXSEC)
R0131   61  TARGET AZIMUTH AND ELEVATION                   (XXX.XXDEG, XX.XXXDEG
 0132  9)
R0133   62  RENDEZVOUS RADAR RANGE, TRUNION, SHAFT         (XXXXXB.FEET, XXX.XXD
 0134  9EG, XXX.XXDEG)
R0135   63  RENDEZVOUS RADAR RANGE RATE, TRUNION, SHAFT    (XXXXX.FEET/SEC, XXX.
 0136  9XXDEG, XXX.XXDEG)
R0137   64  INITIAL ALTITUDE, FINAL ALTITUDE, ALT. RATE    (XXXXX.FEET, XXXXX.FE
 0138  9ET, XXXXX.FEET/SEC)
R0139   65  SAMPLED TIME (HOURS AND SECONDS)               (XXX.XXHOURS, XXX.XXS
 0140  9EC)
R0141           (FETCHED IN INTERRUPT)
R0142   66  SYSTEM TEST RESULTS                            (XXXXX., .XXXXX, XXXX
 0143  9X.)
R0144   67  DELTA GYRO ANGLES                              (XX.XXXDEG  FOR EACH)
R0145   70  OPTICAL TRACKER ANGLES (AZIMUTH, ELEVATION)    (XXX.XXDEG, XXX.XXDEG
 0146  9)
R0147   71  DESIRED OPTICAL TRACKER ANGLES (AZ, ELEV)      (XXX.XXDEG, XXX.XXDEG
 0148  9)
R0149   72  DELTA POSITION                                 (XXXX.XKILOMETERS  FO
 0150  9R EACH)
R0151   73  DELTA VELOCITY                                 (XXXX.XMETERS/SEC  FO
 0152  9R EACH)
R0153   74  MEASUREMENT DATA (MIDCOURSE)                   (XXX.XXHOURS (INTERNA
 0154  9L UNITS=WEEKS), XXXX.XKILOMETERS, XXXXX.
R0155   75  MEASUREMENT DEVIATIONS (MIDCOURSE)             (XXXX.XKILOMETERS, XX
 0156  9XX.XMETERS/SEC, XXXX.XKILOMETERS)
R0157   76  POSITION VECTOR                                (XXXX.XKILOMETERS  FO
 0158  9R EACH)
R0159   77  VELOCITY VECTOR                                (XXXX.XMETERS/SEC  FO
 0160  9R EACH)
P0161  4TABLE OF ERROR CODES
R0162  2OPTICS SUB-SYSTEM
R0163   00105    MARK BUTTONS NOT AVAILABLE
R0164   00111    MARK IS MISSING AFTER ENTER
R0165   00112    MARK NOT BEING ACCEPTED
R0166   00113    NO INBITS
R0167   00114    MARK MADE BUT NOT DESIRED
R0168  200115    X MARK NOT MADE
R0169  2IMU SUB-SYSTEM
R0170   00207    ISS TURN-ON REQUEST NOT PRESENT FOR 90 SEC.
R0171   00210    IMU NOT OPERATING
R0172   00211    COARSE ALIGN ERROR
R0173   00212    PIPA FAIL BUT PIPA IS NOT BEING USED
R0174   00213    IMU NOT OPERATING WITH TURN-ON REQUEST
R0175  200214    PROGRAM USING IMU WHEN TURNED OFF
R0193  2PROCEDURAL DIFFICULTY
R0194   00401    DESIRED GIMBAL ANGLES YIELD GIMBAL LOCK
R0195   00402    STAR OUT OF FIELD OF VIEW
R0196  200403    STAR OUT OF FIELD OF VIEW
R0197  2RADAR ERRORS
R0198   00501    RADAR ANTENNA OUT OF LIMITS
R0199   00502    BAD RADAR GIMBAL ANGLE INPUTS
R0200   00503    RADAR ANTENNA DESIGNATE FAIL
R0201   00510    RADAR AUTO DESCRETE NOT PRESENT
R0202   00514    RADAR GOES OUT OF AUTO MODE WHILE BEING USED
R0203   00520    NO RADAR RUPT EXPECTED
R0204   00521    RADAR DATA COULD NOT BE READ
R0205   00522    WRONG LR POSITION
R0206   00523    LR ANTENNA DID NOT MAKE IT
R0207  200524    BAD RADAR TARGET
R0208  2COMPUTER HARDWARE MALFUNCTIONS
R0209   01102    AGC SELF TEST ERROR
R0210   01103    UNUSED CCS BRANCH EXECUTED . ABORT
R0211   01105    DOWNLINK TOO FAST
R0212  201106    UPLINK TOO FAST
R0213  2LIST OVERFLOWS ( ALL ABORTS )
R0214   01201    EXECUTIVE OVERFLOW-NO VAC AREAS
R0215   01202    EXECUTIVE OVERFLOW-NO CORE SETS
R0216   01203    WAITLIST OVERFLOW-TOO MANY TASKS
R0217   01206    KEYBOARD AND DISPLAY WAITING LINE OVERFLOW
R0218   01207    NO VAC AREA FOR MARKS
R0219  201210    TWO PROGRAMS USING DEVICE AT SAME TIME
R0220  2INTERPRETER ERRORS
R0221   01301    ARCSIN-ARCCOS INPUT ANGLE TOO LARGE. ABORT
R0222  201302    SQRT CALLED WITH NEGATIVE ARGUMENT . ABORT
R0223  2DISPLAY ALARMS
R0224   01400    PITCH AND/OR ROLL TRIM FAIL IS ON (SHOWN WITH V50N25).
R0225   01410    TEMPORARY JET FAIL
R0226  201411    CDU DOES NOT AGREE WITH COMMAND TO 1 DEGREE
R0227  2KEYBOARD AND DISPLAY PROGRAM
R0228   01501    KEYBOARD AND DISPLAY ALARM DURING INTERNAL USE(NVSUB).ABORT
R0229  2SYSTEM TEST ALARMS
R0230   01600    DRIFT TEST OVERFLOW ALARM
R0231   01601    SOME ERROR IN GYRO TORQUING DURING DRIFT TEST OR COMPASSS
L      2ERASABLE ASSIGNMENTS
 0001   A        EQUALS 0
 0002   L        EQUALS 1               L AND Q ARE BOTH CHANNELS AND REGISTERS.
 0003   Q        EQUALS 2
 0004   EBANK    EQUALS 3
 0005   FBANK    EQUALS 4
 0006   Z        EQUALS 5               ADJACENT TO FBANK AND BBANK FOR DXCH Z
 0007   BBANK    EQUALS 6               (DTCB) AND DXCH FBANK (DTCF).
A0008  2                                REGISTER 7 IS A ZERO-SOURCE, USED BY ZL.
 0009   ARUPT    EQUALS 10              INTERRUPT STORAGE.
 0010   LRUPT    EQUALS 11
 0011   QRUPT    EQUALS 12
 0012   SAMPTIME EQUALS 13              SAMPLED TIME 1 & 2.
 0013   ZRUPT    EQUALS 15              (13 AND 14 ARE SPARES.)
 0014   BANKRUPT EQUALS 16              USUALLY HOLDS FBANK OR BBANK.
 0015  2BRUPT    EQUALS 17              RESUME ADDRESS AS WELL.
 0016   CYR      EQUALS 20
 0017   SR       EQUALS 21
 0018   CYL      EQUALS 22
 0019  4EDOP     EQUALS 23              EDITS INTERPRETIVE OPERATION CODE PAIRS.
 0020   TIME2    EQUALS 24
 0021   TIME1    EQUALS 25
 0022   TIME3    EQUALS 26
 0023   TIME4    EQUALS 27
 0024   TIME5    EQUALS 30
 0025   TIME6    EQUALS 31
 0026   CDUX     EQUALS 32
 0027   CDUY     EQUALS 33
 0028   CDUZ     EQUALS 34
 0029   OPTY     EQUALS 35
 0030   OPTX     EQUALS 36
 0031   PIPAX    EQUALS 37
 0032   PIPAY    EQUALS 40
 0033   PIPAZ    EQUALS 41
 0034   BMAGX    EQUALS 42
 0035   RHCP     EQUALS 42
 0036   BMAGY    EQUALS 43
 0037   RHCY     EQUALS 43
 0038   BMAGZ    EQUALS 44
 0039   RHCR     EQUALS 44
 0040   INLINK   EQUALS 45
 0041   RNRAD    EQUALS 46
 0042   GYROCTR  EQUALS 47
 0043   GYROCMD  EQUALS 47
 0044   CDUXCMD  EQUALS 50
 0045   CDUYCMD  EQUALS 51
 0046   CDUZCMD  EQUALS 52
 0047   OPTYCMD  EQUALS 53
 0048   OPTXCMD  EQUALS 54
 0049   EMSD     EQUALS 55
 0050   THRUST   EQUALS 55
 0051   LEMONM   EQUALS 56
 0052   OUTLINK  EQUALS 57
 0053  2ALTM     EQUALS 60
 0054            SETLOC 67              DECODED REGISTER FOR NIGHT-WATCHMAN ALM.
 0055  2NEWJOB   ERASE
 0056   LVSQUARE EQUALS 34D             SQUARE OF VECTOR INPUT TO ABVAL AND UNIT
 0057   LV       EQUALS 36D             LENGTH OF VECTOR INPUT TO UNIT.
 0058   X1       EQUALS 38D             INTERPRETIVE SPECIAL REGISTERS RELATIVE
 0059   X2       EQUALS 39D             TO THE WORK AREA.
 0060   S1       EQUALS 40D
 0061   S2       EQUALS 41D
 0062   QPRET    EQUALS 42D
P0063  2GENERAL ERASABLE ASSIGNMENTS.
 0064  2         SETLOC 61
R0065  2         INTERPRETIVE SWITCH RESERVATIONS.
 0066  2STATE    ERASE  +3              60 SWITCHES PRESENTLY.
R0067  2         INTERPRETIVE SWITCH BIT ASSIGNMENTS:
 0068   WMATFLAG EQUALS 0
 0069   JSWITCH  EQUALS 1
 0070   MIDFLAG  EQUALS 2
 0071   MOONFLAG EQUALS 3
 0072   NBSMBIT  EQUALS 4
 0073   COAROFIN EQUALS 5
 0074   BODYFLAG EQUALS 6
 0075   IMUSE    EQUALS 7
 0076   RRUSE    EQUALS 8D
 0077   RRNBSW   EQUALS 9D
 0078   LOKONSW  EQUALS 10D
R0079  4END OF SWITCH ASSIGNMENTS
R0080  2         THE FOLLOWING SET COMPRISES THE INTERRUPT TEMPORARY STORAGE POO
R0081            ANY OF THESE MAY BE USED AS TEMPORARIES DURING INTERRUPT OR WIT
 0082  9H INTERRUPT INHIBITED. THE ITEMP SERIES
R0083  2IS USED DURING CALLS TO THE EXECUTIVE AND WAITLIST - THE RUPTREGS ARE NO
 0084  9T.
 0085   ITEMP1   ERASE
 0086   WAITEXIT EQUALS ITEMP1
 0087  2EXECTEM1 EQUALS ITEMP1
 0088   ITEMP2   ERASE
 0089   WAITBANK EQUALS ITEMP2
 0090  2EXECTEM2 EQUALS ITEMP2
 0091  2         SETLOC 70
 0092   ITEMP3   ERASE
 0093   RUPTSTOR EQUALS ITEMP3
 0094   WAITADR  EQUALS ITEMP3
 0095  2NEWPRIO  EQUALS ITEMP3
 0096   ITEMP4   ERASE
 0097   LOCCTR   EQUALS ITEMP4
 0098  2WAITTEMP EQUALS ITEMP4
 0099   ITEMP5   ERASE
 0100  2NEWLOC   EQUALS ITEMP5
 0101   ITEMP6   ERASE
A0102  2NEWLOC+1 EQUALS ITEMP6          DP ADDRESS.
 0103   RUPTREG1 ERASE
 0104   RUPTREG2 ERASE
 0105   RUPTREG3 ERASE
 0106   RUPTREG4 ERASE
 0107   KEYTEMP1 EQUALS RUPTREG4
 0108  2DSRUPTEM EQUALS RUPTREG4
R0109  2         THE FOLLOWING ARE EXECUTIVE TEMPORARIES WHICH MAY BE USED BETWE
 0110  9EN CCS NEWJOB INQUIRIES.
 0111   INTB15+  ERASE                  REFLECTS 15TH BIT OF INDEXABLE ADDRESSES
 0112   DSEXIT   =      INTB15+         RETURN FOR DSPIN
 0113   EXITEM   =      INTB15+         RETURN FOR SCALE FACTOR ROUTINE SELECT
 0114  2BLANKRET =      INTB15+         RETURN FOR 2BLANK
 0115   INTBIT15 ERASE                  SIMILAR TO ABOVE.
 0116   WRDRET   =      INTBIT15        RETURN FOR 5BLANK
 0117   WDRET    =      INTBIT15        RETURN FOR DSPWD
 0118   DECRET   =      INTBIT15        RETURN FOR PUTCOM(DEC LOAD)
 0119  221/22REG =      INTBIT15        TEMP FOR CHARIN
R0120  2         THE REGISTERS BETWEEN ADDRWD AND PRIORITY MUST STAY IN THE FOLL
 0121  9OWING ORDER FOR INTERPRETIVE TRACE.
 0122   ADDRWD   ERASE                  12 BIT INTERPRETIVE OPERAND SUB-ADDRESS.
 0123   POLISH   ERASE                  HOLDS CADR MADE FROM POLISH ADDRESS.
 0124   UPDATRET =      POLISH          RETURN FOR UPDATNN, UPDATVB
 0125   CHAR     =      POLISH          TEMP FOR CHARIN
 0126   ERCNT    =      POLISH          COUNTER FOR ERROR LIGHT RESET
 0127  2DECOUNT  =      POLISH          COUNTER FOR SCALING AND DISPLAY (DEC)
 0128  2FIXLOC   ERASE                  WORK AREA ADDRESS.
 0129  2OVFIND   ERASE                  SET NON-ZERO ON OVERFLOW.
 0130   VBUF     ERASE  +5              TEMPORARY STORAGE USED FOR VECTORS.
 0131   SGNON    =      VBUF            TEMP FOR +,- ON
 0132   NOUNTEM  =      VBUF            COUNTER FOR MIXNOUN FETCH
 0133   DISTEM   =      VBUF            COUNTER FOR OCTAL DISPLAY VERBS
 0134  2DECTEM   =      VBUF            COUNTER FOR FETCH (DEC DISPLAY VERBS)
 0135   SGNOFF   =      VBUF    +1      TEMP FOR +,- ON
 0136   NVTEMP   =      VBUF    +1      TEMP FOR NVSUB
 0137  2SFTEMP1  =      VBUF    +1      STORAGE FOR SF CONST HI PART(=SFTEMP2-1)
 0138   CODE     =      VBUF    +2      FOR DSPIN
 0139  2SFTEMP2  =      VBUF    +2      STORAGE FOR SF CONST LO PART(=SFTEMP1+1)
 0140   MIXTEMP  =      VBUF    +3      FOR MIXNOUN DATA
 0141  2SIGNRET  =      VBUF    +3      RETURN FOR +,- ON
R0142  2ALSO MIXTEMP+1 = VBUF+4, MIXTEMP+2 = VBUF+5.
 0143   BUF      ERASE  +2              TEMPORARY SCALAR STORAGE.
 0144   BUF2     ERASE  +1
 0145   INDEXLOC EQUALS BUF             CONTAINS ADDRESS OF SPECIFIED INDEX.
 0146   SWWORD   EQUALS BUF             ADDRESS OF SWITCH WORD.
 0147   SWBIT    EQUALS BUF +1          SWITCH BIT WITHIN SWITCH WORD.
 0148   MPTEMP   ERASE                  TEMPORARY USED IN MULTIPLY AND SHIFT.
 0149   DOTINC   ERASE                  COMPONENT INCREMENT FOR DOT SUBROUTINE.
 0150   DVSIGN   EQUALS DOTINC          DETERMINES SIGN OF DDV RESULT.
 0151   ESCAPE   EQUALS DOTINC          USED IN ARCSIN/ARCCOS.
 0152  2ENTRET   =      DOTINC          EXIT FROM ENTER
 0153   DOTRET   ERASE                  RETURN FROM DOT SUBROUTINE.
 0154   DVNORMCT EQUALS DOTRET          DIVIDEND NORMALIZATION COUNT IN DDV.
 0155   ESCAPE2  EQUALS DOTRET          ALTERNATE ARCSIN/ARCCOS SWITCH.
 0156   WDCNT    =      DOTRET          CHAR COUNTER FOR DSPWD
 0157  2INREL    =      DOTRET          INPUT BUFFER SELECTOR ( X,Y,Z, REG )
 0158   MATINC   ERASE                  VECTOR INCREMENT IN MXV AND VXM.
 0159   MAXDVSW  EQUALS MATINC          +0 IF DP QUOTIENT IS NEAR ONE - ELSE -1.
 0160   POLYCNT  EQUALS MATINC          POLYNOMIAL LOOP COUNTER
 0161   DSPMMTEM =      MATINC          DSPCOUNT SAVE FOR DSPMM
 0162  2MIXBR    =      MATINC          INDICATOR FOR MIXED OR NORMAL NOUN
 0163   TEM1     ERASE                  EXEC TEMP
 0164   POLYRET  =      TEM1
 0165  2DSREL    =      TEM1            REL ADDRESS FOR DSPIN
 0166   TEM2     ERASE                  EXEC TEMP
 0167   DSMAG    =      TEM2            MAGNITUDE STORE FOR DSPIN
 0168  2IDADDTEM =      TEM2            MIXNOUN INDIRECT ADDRESS STORAGE
 0169   TEM3     ERASE                  EXEC TEMP
 0170  2COUNT    =      TEM3            FOR DSPIN
 0171   TEM4     ERASE                  EXEC TEMP
 0172   LSTPTR   =      TEM4            LIST POINTER FOR GRABUSY
 0173   RELRET   =      TEM4            RETURN FOR RELDSP
 0174  2FREERET  =      TEM4            RETURN FOR FREEDSP
 0175   TEM5     ERASE                  EXEC TEMP
 0176  2NOUNADD  =      TEM5            TEMP STORAGE FOR NOUN ADDRESS
 0177   NNADTEM  ERASE                  TEMP FOR NOUN ADDRESS TABLE ENTRY
 0178   NNTYPTEM ERASE                  TEMP FOR NOUN TYPE TABLE ENTRY
 0179   IDAD1TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
A0180                                   MUST = IDAD2TEM-1, = IDAD3TEM-2.
 0181   IDAD2TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
A0182                                   MUST = IDAD1TEM+1, = IDAD3TEM-1.
 0183   IDAD3TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
A0184                                   MUST = IDAD1TEM+2, = IDAD2TEM+1.
 0185  2RUTMXTEM ERASE                  TEMP FOR SF ROUT TABLE ENTRY(MIXNN ONLY)
R0186  2         STORAGE USED BY THE EXECUTIVE.
 0187   MPAC     ERASE  +6              MULTI-PURPOSE ACCUMULATOR.
 0188   MODE     ERASE                  +1 FOR TP, +0 FOR DP, OR -1 FOR VECTOR.
 0189   LOC      ERASE                  LOCATION ASSOCIATED WITH JOB.
 0190   BANKSET  ERASE                  USUALLY CONTAINS BBANK SETTING.
 0191   PUSHLOC  ERASE                  WORD OF PACKED INTERPRETIVE PARAMETERS.
 0192  2PRIORITY ERASE                  PRIORITY OF PRESENT JOB AND WORK AREA.
 0193  2         ERASE  +71D            SEVEN SETS OF 12 REGISTERS EACH.
P0194  4THE FOLLOWING REGISTERS ARE RESERVED FOR PINBALL
R0195  2RESERVED FOR PINBALL EXECUTIVE ACTION
 0196   DSPCOUNT ERASE                  DISPLAY POSITION INDICATOR
 0197   DECBRNCH ERASE                  +DEC, - DEC, OCT INDICATOR
 0198   VERBREG  ERASE                  VERB CODE
 0199   NOUNREG  ERASE                  NOUN CODE
 0200   XREG     ERASE                  R1 INPUT BUFFER
 0201   YREG     ERASE                  R2 INPUT BUFFER
 0202   ZREG     ERASE                  R3 INPUT BUFFER
 0203   XREGLP   ERASE                  LO PART OF XREG (FOR DEC CONV ONLY)
 0204   YREGLP   ERASE                  LO PART OF YREG (FOR DEC CONV ONLY)
 0205   ZREGLP   ERASE                  LO PART OF ZREG (FOR DEC CONV ONLY)
 0206   MODREG   ERASE                  MODE CODE
 0207   DSPLOCK  ERASE                  KEYBOARD/SUBROUTINE CALL INTERLOCK
 0208   REQRET   ERASE                  RETURN REGISTER FOR LOAD
 0209   LOADSTAT ERASE                  STATUS INDICATOR FOR LOADTST
 0210   CLPASS   ERASE                  PASS INDICATOR CLEAR
 0211   NOUT     ERASE                  ACTIVITY COUNTER FOR DSPTAB
 0212   NOUNCADR ERASE                  MACHINE CADR FOR NOUN
 0213   MONSAVE  ERASE                  N/V CODE FOR MONITOR. (= MONSAVE1-1)
 0214   MONSAVE1 ERASE                  NOUNCADR FOR MONITOR(MATBS) =MONSAVE +1
 0215   DSPTAB   ERASE  +11D            0-10D, DISPLAY PANEL BUFF. 11D, C/S LTS.
 0216   CADRSTOR ERASE                  ENDIDLE STORAGE
 0217   GRABLOCK ERASE                  INTERNAL INTERLOCK FOR DISPLAY SYSTEM
 0218   NVQTEM   ERASE                  NVSUB STORAGE FOR CALLING ADDRESS
A0219                                   MUST = NVBNKTEM-1
 0220   NVBNKTEM ERASE                  NVSUB STORAGE FOR CALLING BANK
A0221                                   MUST = NVQTEM+1
 0222   DSPLIST  ERASE          +2      WAITING LIST FOR DSP SYST INTERNAL USE
 0223   EXTVBACT ERASE                  EXTENDED VERB ACTIVITY INTERLOCK
 0224   DSPTEM1  ERASE          +2      BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
 0225   DSPTEM2  ERASE          +2      BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
R0226  4END OF ERASABLES RESERVED FOR PINBALL EXECUTIVE ACTION
R0227  2RESERVED FOR PINBALL INTERRUPT ACTION
 0228   DSPCNT   ERASE                  COUNTER FOR DSPOUT
 0229   UPLOCK   ERASE                  BIT1 = UPLINK INTERLOCK (ACTIVATED BY
A0230                                   RECEPTION OF A BAD MESSAGE IN UPLINK)
R0231  4END OF ERASABLES RESERVED FOR PINBALL INTERRUPT ACTION
R0232  2         DAP STORAGE IN NON-SWITCHED ERASABLE.
 0233   T6LOC    ERASE  +1
 0234   T6ADR    EQUALS T6LOC
 0235   T5LOC    ERASE  +1
 0236   T5ADR    EQUALS T5LOC
P0237  2ASSIGNMENTS FOR T4RUPT PROGRAM
 0238   T4LOC    ERASE
 0239   DSRUPTSW ERASE
 0240   DIDFLG   ERASE
 0241   ALT      ERASE  +1
 0242   ALTRATE  ERASE
 0243   FINALT   ERASE  +1              (MAY NOT BE REQUIRED FOR FLIGHTS).
 0244   LGYRO    ERASE
 0245   FORVEL   ERASE
 0246   LATVEL   ERASE
 0247   LASTYCMD ERASE
 0248  2LASTXCMD ERASE
 0249   ALTSAVE  ERASE  +1
 0250  2LMPCMD   ERASE
R0251  4END OF T4RUPT ASSIGNMENTS
 0252   IMODES30 ERASE
 0253   IMODES33 ERASE
 0254   MODECADR ERASE  +2
 0255   IMUCADR  EQUALS MODECADR
 0256   AOTCADR  EQUALS MODECADR +1
 0257   OPTCADR  EQUALS AOTCADR
 0258  2RADCADR  EQUALS MODECADR +2
 0259   MARKSTAT ERASE
 0260   XYMARK   ERASE
 0261            SETLOC 400
P0262  2TEMPORARY PHONY ASSIGNMENTS TO KEEP PINBALL FROM HAVING BAD ASSEMBLIES
 0263   THETAD   ERASE  +2
 0264   DELVX    ERASE  +5
R0265  4END OF PHONY ASSIGNMENTS
R0266            DOWNLINK LIST ADDRESS.
 0267  2DNLSTADR ERASE
R0268   AGS DUMMY ID WORD
 0269   AGSWORD  ERASE
R0270  2RADAR ERASABLE
 0271   RADMODES ERASE
 0272   SAMPLIM  ERASE
 0273   SAMPLSUM ERASE  +1
 0274   SAMPSUM  EQUALS SAMPLSUM
 0275   OPTYHOLD ERASE  +1
 0276   TIMEHOLD ERASE  +1
 0277   RRTARGET EQUALS SAMPLSUM        HALF UNIT VECTOR IN SM OR NB AXES.
 0278   TANG     ERASE  +1              DESIRED TRUNNION AND SHAFT ANGLES.
 0279   MODEA    EQUALS TANG
 0280   MODEB    ERASE  +1              DODES CLOBBERS TANG +2.
 0281   NSAMP    EQUALS MODEB
 0282   DESRET   ERASE
 0283   OLDATAGD EQUALS DESRET          USED IN DATA READING ROUTINES.
 0284   DESCOUNT ERASE
R0285  2END OF RADAR ERASABLE ASSIGNMENTS
 0286   VAC1USE  ERASE
 0287   VAC1     ERASE  +42D
 0288   VAC2USE  ERASE
 0289   VAC2     ERASE  +42D
 0290   VAC3USE  ERASE
 0291   VAC3     ERASE  +42D
 0292   VAC4USE  ERASE
 0293   VAC4     ERASE  +42D
 0294   VAC5USE  ERASE
 0295  2VAC5     ERASE  +42D
R02951 2UNSWITCHED ERASABLE STORAGE ASSIGNMENTS FOR THE DAP
 02952  DAPBOOLS ERASE
 02953  T6NEXT   ERASE  +1
 02954 2T6NEXTJT ERASE  +2
 02955  DELAYCTR ERASE
R02956  THESE ARE WRITTEN INTO FROM SEVERAL PROGRAMS
 02957  CDUXD    ERASE
 02958  CDUYD    ERASE
 02959  CDUZD    ERASE
 0296  2         SETLOC 1000
R0297  2ERASABLE STORAGE FOR AVERAGE G INTEGRATOR
 0298   RN       ERASE  +5
 0299   VN       ERASE  +5
 0300   NSHIFT   ERASE
 0301   XSHIFT   ERASE
 0302   UNITR    ERASE  +5
 0303   UNITW    ERASE  +5
 0304   RMAG     ERASE  +1
 0305   RMAGSQ   ERASE  +1
 0306   GRAVITY  ERASE  +5
 0307   DELV     ERASE  +5
 0308   DELTAT   ERASE  +1
 0309   RN1      ERASE  +5
 0310   VN1      ERASE  +5
R0312  2         WAITLIST REPEAT FLAG:
 0313   RUPTAGN  ERASE
 0314  2KEYTEMP2 =      RUPTAGN         TEMP FOR KEYRUPT, UPRUPT
R0315  2         PHASE TABLE AND RESTART COUNTER.
 0316   -PHASE0  ERASE
 0317   PHASE0   ERASE
 0318   -PHASE1  ERASE
 0319   PHASE1   ERASE
 0320   -PHASE2  ERASE
 0321   PHASE2   ERASE
 0322   -PHASE3  ERASE
 0323   PHASE3   ERASE
 0324   -PHASE4  ERASE
 0325   PHASE4   ERASE
 0326   -PHASE5  ERASE
 0327  2PHASE5   ERASE
R0328  2ERASABLE FOR SINGLE PRECISION SUBROUTINES.
 0329   HALFY    ERASE
 0330   ROOTRET  ERASE
 0331   SQRARG   ERASE
 0332   TEMK     EQUALS HALFY
 0333  2SQ       EQUALS ROOTRET
 0334   1/PIPADT ERASE                  IMU COMPENSATION PACKAGE
 0335  2OLDBT1   =      1/PIPADT
R0366   ASSIGNMENTS RESERVED EXCLUSIVELY FOR SELF-CHECK
 0367  2SELFERAS ERASE  1360 - 1377
 0368   SELFRET  =      1360
 0369   SMODE    =      1361
 0370   REDOCTR  =      1362            KEEPS TRACK OF RESTARTS
 0371   FAILREG  =      1363
 0372   SFAIL    =      1364
 0373   ERCOUNT  =      1365
 0374   SCOUNT   =      1366
 0375   SKEEP1   =      1371
 0376   SKEEP2   =      1372
 0377   SKEEP3   =      1373
 0378   SKEEP4   =      1374
 0379   SKEEP5   =      1375
 0380   SKEEP6   =      1376
 0381  2SKEEP7   =      1377
R0382  2WAITLIST TASK LISTS
 0383  2         SETLOC 1400
 0384   LST1     ERASE  +7              DELTA T'S.
 0385  2LST2     ERASE  +17D            2CADR TASK ADDRESSES.
R0386  2IMU COMPENSATION PARAMETERS:
 0387   PBIASX   ERASE                  PIPA BIAS AND PIPA SCALE FACTOR TERMS
 03875  PIPABIAS =      PBIASX              INTERMIXED.
 0388   PIPASCFX ERASE
 03885  PIPASCF  =      PIPASCFX
 0389   PBIASY   ERASE
 0390   PIPASCFY ERASE
 0391   PBIASZ   ERASE
 0392  2PIPASCFZ ERASE
 0393   NBDX     ERASE                  GYRO BIAS DRIFTS
 03931  GBIASX   =      NBDX
 03932  NBDY     ERASE
 03934 2NBDZ     ERASE
 0394   ADIAX    ERASE                  ACCELERATION SENSITIVE DRIFT ALONG THE
 03942  ADIAY    ERASE                      INPUT AXIS
 03944 2ADIAZ    ERASE
 0395   ADSRAX   ERASE                  ACCELERATION SENSITIVE DRIFT ALONG THE
 03952  ADSRAY   ERASE                      SPIN REFERENCE AXIS
 03954 2ADSRAZ   ERASE
 0396   GCOMP    ERASE  +5              CONTAINS COMPENSATING TORQUES
 03965  GCOMPSW  ERASE
 0397   COMMAND  EQUALS GCOMP
 0398  2CDUIND   EQUALS GCOMP +3
R0399  2         STORAGE FOR RR TASKS.
 0400   RRRET    ERASE
 0401   RDES     ERASE
 0402  2RRINDEX  ERASE
R0403   AOT CALIBRATIONS IN AZIMUTH AND ELEVATION AT DETENTS
 0404   AOTAZ    ERASE  +2
 0405   AOTEL    ERASE  +2
R0406            ASSIGNMENTS FOR PRESENTLY UNUSED NOUNS.
 04061  AZANG    EQUALS                 DELETE WHEN OPTICAL TRACKER NOUNS GONE.
 04062  ELANG    EQUALS
 04063  DESLOTSY EQUALS
 04064 2DESLOTSX EQUALS
 0407   ROLL     ERASE  +2
 0408  2LANDMARK ERASE  +5
R04081 2THE FOLLOWING REGS ARE USED BY THE STANDBY VERBS
 04082  TIMESAV  ERASE  +1
 04083  SCALSAV  ERASE  +1
 04084  TIMAR    ERASE  +1
 04085 2TIMEDIFF ERASE  +1
 0409  2         SETLOC 2000
 0410   AMEMORY  ERASE  +150D
R0411  2         THE FOLLOWING A MEMORY LOCATIONS ARE USED BY MID-COURSE NAVIGAT
 0412  9ION:
 0413   RRECT    EQUALS AMEMORY +000D
 0414   RIGNTION EQUALS AMEMORY +000D
 0415   VRECT    EQUALS AMEMORY +006D
 0416   VIGNTION EQUALS AMEMORY +006D
 0417   TDELTAV  EQUALS AMEMORY +012D
 0418   NEWDLTAV EQUALS AMEMORY +012D
 0419   TNUV     EQUALS AMEMORY +018D
 0420   NEWNUV   EQUALS AMEMORY +018D
 0421   RCV      EQUALS AMEMORY +024D
 0422   FOUNDR   EQUALS AMEMORY +024D
 0423   VCV      EQUALS AMEMORY +030D
 0424   FOUNDV   EQUALS AMEMORY +030D
 0425   TC       EQUALS AMEMORY +036D
 0426   TET      EQUALS AMEMORY +038D
 0427   XKEP     EQUALS AMEMORY +040D
 0428   ALPHAV   EQUALS AMEMORY +042D
 0429   DELR     EQUALS AMEMORY +042D
 0430   BETAV    EQUALS AMEMORY +048D
 0431   DELVEL   EQUALS AMEMORY +048D
 0432   PHIV     EQUALS AMEMORY +054D
 0433   BVECTOR  EQUALS AMEMORY +054D
 0434   PSIV     EQUALS AMEMORY +060D
 0435  2FV       EQUALS AMEMORY +066D
 0436  2VECTAB   EQUALS AMEMORY +072D
 0437   TAVEGON  EQUALS AMEMORY +072D
 0438   TRESUME  EQUALS AMEMORY +074D
 0439   RAVEGON  EQUALS AMEMORY +076D
 0440   VAVEGON  EQUALS AMEMORY +082D
 0441   RIG-4SEC EQUALS AMEMORY +088D
 0442   ALPHAM   EQUALS AMEMORY +108D
 0443   BETAM    EQUALS AMEMORY +110D
 0444   TAU      EQUALS AMEMORY +112D
 0445   GIVENT   EQUALS AMEMORY +112D
 0446   DT/2     EQUALS AMEMORY +114D
 0447   H        EQUALS AMEMORY +116D
 0448   TDEC     EQUALS AMEMORY +118D
 0449   FBRANCH  EQUALS AMEMORY +120D
 0450   HBRANCH  EQUALS AMEMORY +121D
 0451   GMODE    EQUALS AMEMORY +122D
 0452   QREADY   EQUALS AMEMORY +123D
 0453   MEASQ    EQUALS AMEMORY +124D
 0454  2DELTAQ   EQUALS AMEMORY +126D
 0455   MEASMODE EQUALS AMEMORY +128D
 0456   NVCODE   EQUALS AMEMORY +129D
 0457   MIDEXIT  EQUALS AMEMORY +130D
 0458   DSPRTRN  EQUALS AMEMORY +130D
 0459   INCORPEX EQUALS AMEMORY +131D
 0460   STEPEXIT EQUALS AMEMORY +132D
 0461   DIFEQCNT EQUALS AMEMORY +133D
 0462   NORMGAM  EQUALS AMEMORY +133D
 0463   SCALEA   EQUALS AMEMORY +134D
 0464   SCALEB   EQUALS AMEMORY +135D
 0465   SCALDT   EQUALS AMEMORY +136D
 0466   SCALDELT EQUALS AMEMORY +137D
 0467  2SCALER   EQUALS AMEMORY +138D
 0468   YV       EQUALS AMEMORY +139D
 0469  2ZV       EQUALS AMEMORY +145D
 0470   PBODY    ERASE
 0471  4W        ERASE  +071D
R0472  2 THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE  ENTRY AND INITIALIZAT
 0473  9ION JOB OF THE FCS TEST FOR LEM.
 0474  2FCSCNTR  EQUALS AMEMORY +000D
R0475  2  THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE JETSET TASK.
R04751 2(OPTIMUM PRELAUNCH A C USES JETSTEP-JETSTEP +77D FOR RESTART PROOF)
 0476   XJBUF    EQUALS AMEMORY +001D
 0477   YZJBUF   EQUALS AMEMORY +002D
 0478   JFBUF    EQUALS AMEMORY +003D
 0479   FCNTR    EQUALS AMEMORY +004D
 0480   THBUF    EQUALS AMEMORY +005D
 0481   OFFTMBUF EQUALS AMEMORY +006D
 0482   JETSTEP  EQUALS AMEMORY +007D
 0483   NTIMES   EQUALS AMEMORY +008D
 0484   NEXTTIME EQUALS AMEMORY +016D
 0485   JETONTM  EQUALS AMEMORY +024D
 0486   XJETS    EQUALS AMEMORY +032D
 0487   YZJETS   EQUALS AMEMORY +040D
 0488  2JETOFFTM EQUALS AMEMORY +048D
R0489  2   THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE ENGINE ON-OFF TASK.
 0490   ENGSTEP  EQUALS AMEMORY +056D
 0491   CYLTIMES EQUALS AMEMORY +057D
 0492   NEXTCYLT EQUALS AMEMORY +060D
 0493   ONTIME   EQUALS AMEMORY +063D
 0494   OFFTIME  EQUALS AMEMORY +066D
 0495  2OFFTIMER EQUALS AMEMORY +069D
R0496  2  THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE TRIM TASK.
 0497   TRIMSTEP EQUALS AMEMORY +072D
 0498   NUMTIMES EQUALS AMEMORY +073D
 0499   STEPDLYT EQUALS AMEMORY +085D
 0500   TRIMONT  EQUALS AMEMORY +097D
 0501   TRIMOFFT EQUALS AMEMORY +109D
 0502  2TRIMIND  EQUALS AMEMORY +121D
R0503  2  THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE THROTTLE TASK.
 0504   THRTSTEP EQUALS AMEMORY +133D
 0505   DOTIMES  EQUALS AMEMORY +134D
 0506   DELAY    EQUALS AMEMORY +140D
 0507   THR1TIME EQUALS AMEMORY +146D
 0508   THCOMM1  EQUALS AMEMORY +152D
 0509  2THCOMM2  EQUALS AMEMORY +158D
R0510  2 THE FOLLOWING ERASABLE REGISTERS ARE USED BY THE INTERFACE LOOK TASK.
 0511   30BUF1   EQUALS AMEMORY +164D
 0512   30BUF0   EQUALS AMEMORY +168D
 0513   QUITLOOK EQUALS AMEMORY +172D
 0514  2CHCNTR   EQUALS AMEMORY +173D
 0515            SETLOC 2400
R0516  2THE FOLLOWING ERASABLE LOCATIONS ARE UTILIZED BY THE IN-FLIGHT ALIGNMENT
 0517  9 ROUTINES
 0518   XSM      ERASE  +17D
 0519   YSM      =      XSM +6
 0520   ZSM      =      XSM +12D
 0521   XDC      ERASE  +17D
 0522   YDC      =      XDC +6
 0523   ZDC      =      XDC +12D
 0524   XNB      =      XDC
 0525   YNB      =      XDC +6
 0526   ZNB      =      XDC +12D
 0527   STARAD   ERASE  +17D
 0528   STAR     ERASE  +5
 0529   SAC      ERASE  +1
 0530   PAC      ERASE  +1
 0531   OGC      ERASE  +1
 0532   IGC      ERASE  +1
 0533   MGC      ERASE  +1
 0534   ZPRIME   =      22D
 0535   PDA      =      22D
 0536   COSTH    =      16D
 0537   SINTH    =      18D
 0538   THETA    =      20D
 0539  4STARM    =      32D
R0540  2THE FOLLOWING ERASABLE LOCATIONS ARE UTILIZED BY THE SYSTEM TESTS
 0541   AZIMUTH  ERASE  +1
 0542  2LATITUDE ERASE  +1
 0543   EROPTN   ERASE
 0544   ERVECTOR ERASE  +5
 0545   GYROD    ERASE  +5
 0546   LENGTHOT ERASE
 0547   LOSVEC   ERASE  +5
 0548   NBPOS    ERASE
 0549   NDXCTR   ERASE
 0550   PIPANO   ERASE
 0551   PIPINDEX ERASE
 0552   PIPNDX   ERASE  +1
 0553   POSITON  ERASE
 0554   QPLAC    ERASE
 0555   QPLACE   ERASE
 0556   QPLACES  ERASE
 0557   RUN      ERASE
 0558   STOREPL  ERASE
 0559   SOUTHDR  ERASE
 0560   TAZEL1   ERASE  +5
 0561   TEMPTIME ERASE  +1
 0562   TESTNO   ERASE
 0563   TMARK    ERASE  +1
 0564   SHAFTA   ERASE
 0565   TRUNA    ERASE
 0566   ZERONDX  =      ERCOMP +5
 0567  2GENPL    ERASE  +111D
 0568   CDUTIMEI =      GENPL
 0569   CDUTIMEF =      GENPL +2
 0570   CDUDANG  =      GENPL +4
 0571   CDUREADF =      GENPL +5
 0572   CDUREADI =      GENPL +6
 0573  2CDULIMIT =      GENPL +7
 0574   TEMPADD  =      GENPL +4
 0575   TEMP     =      GENPL +5
 0576   NOBITS   =      GENPL +6
 0577  2CHAN     =      GENPL +7
 0578   LOS1     =      GENPL +8D
 0579  2LOS2     =      GENPL +14D
 0580   CALCDIR  EQUALS GENPL +20D
 0581   CDUFLAG  EQUALS GENPL +21D
 0582   GYTOBETQ EQUALS GENPL +22D
 0583   OPTNREG  EQUALS GENPL +23D
 0584   SAVE     EQUALS GENPL +24D      THREE CONSEC LOC
 0585   SFCONST1 EQUALS GENPL +27D
 0586  2TIMER    EQUALS GENPL +28D
 0587   DATAPL   EQUALS GENPL +30D
 0588   RDSP     EQUALS GENPL           FIX LATER   POSSIBLY KEEP1
 0589   MASKREG  EQUALS GENPL +64D
 0590   CDUNDX   EQUALS GENPL +66D
 0591   RESULTCT EQUALS GENPL +67D
 0592  2COUNTPL  EQUALS GENPL +70D
 0593   CDUANG   EQUALS GENPL +71D
 0594  2AINLA    =      GENPL           110 DEC OR 156 OCT LOCATIONS
 0595   WANGO    EQUALS AINLA           VERT ERATE
 0596   WANGI    EQUALS AINLA +2D       HO
 0597   WANGT    EQUALS AINLA +4D       T
 0598   TORQNDX  =      WANGT
 0599   DRIFTT   EQUALS AINLA +6D       EAST AX
 0600   ALX1S    EQUALS AINLA +8D       IN
 0601   CMPX1    EQUALS AINLA +9D       IND
 0602   ALK      EQUALS AINLA +10D      GAINS
 0603   VLAUNS   EQUALS AINLA +22D
 06031  THETAX   =      VLAUNS
 0604   WPLATO   EQUALS AINLA +24D
 0605   INTY     EQUALS AINLA +28D      SOUTH PIP INTE
 0606   ANGZ     EQUALS AINLA +30D      EAST AXIS
 0607   INTZ     EQUALS AINLA +32D      EAST PIP I
 0608   ANGY     EQUALS AINLA +34D      SOUTH
 06081  THETAN   =      INTY
 0609   ANGX     EQUALS AINLA +36D      VE
 0610   DRIFTO   EQUALS AINLA +38D      VERT
 0611   DRIFTI   EQUALS AINLA +40D      SOU
 0612   VLAUN    EQUALS AINLA +44D      LAUNCH
 06121  FILDELV  =      VLAUN
 0613   ACCWD    EQUALS AINLA +46D      LAUN
 06131  INTVEC   =      ACCWD
 0614   POSNV    EQUALS AINLA +52D      LAUNC
 0615   DPIPAY   EQUALS AINLA +54D      SOUTH
 0616   DPIPAZ   EQUALS AINLA +58D      NORTH PIP INCREMENT
 0617   ALTIM    EQUALS AINLA +60D      LENG
 0618   ALTIMS   EQUALS AINLA +61D       INDEX
 0619   ALDK     EQUALS AINLA +62D       TIME CONSTAN
 0620   DELM     EQUALS AINLA +76D
 0621   WPLATI   EQUALS AINLA +84D
 0622   GEOSAVED EQUALS AINLA +86D
 0623   PREMTRXC EQUALS AINLA +87D
 0624   PRELMTRX EQUALS AINLA +88D
 0625   TRANSM1  =      PRELMTRX
 0626   GEOCOMPS EQUALS AINLA +106D
 0627   GTSOPNDZ EQUALS AINLA +107D
 0628   1SECXT   EQUALS AINLA +108D
 0629   GTSWTLST EQUALS AINLA +109D
 0630   ERECTIME EQUALS AINLA +110D
 0631   GEOMTRX  EQUALS AINLA +111D
 0632  8ERCOMP   EQUALS AINLA +129D
 0647   BMEMORY  EQUALS GENPL
 0668   DELVY    EQUALS DELVX +2
 0669   DELVZ    EQUALS DELVX +4
 0832  2         SETLOC 3400
R0833  2         DOWNLINK STORAGE.
 0834   LDATALST ERASE
 0835   DNTMGOTO ERASE
 0836   TMINDEX  ERASE
 0837  2DNTMBUFF ERASE  +21D            SNAPSHOT BUFFER.
R0838  2         RADAR TEST STORAGE.
 0839   RTSTDEX  ERASE
 0840   RTSTMAX  ERASE                  66 FOR HI SPEED, 6 FOR LOW SPEED RR,
A0841                                   AND 18 FOR LOW SPEED LR.
 0842   RTSTBASE ERASE                  USED FOR CYCLIC SAMPLING.
 0843   RTSTLOC  ERASE                  GOES 0(6)RTSTMAX
 0844   RSTKLOC  EQUALS RTSTLOC
 0845   RSAMPDT  ERASE                  PNZ FOR CYCLIC SAMPLING, -1 FOR HI SPEED
A0846                                   INSERT +0 HERE MANUALLY TO TERMINATE TST
 0847   RFAILCNT ERASE
 0848  2RSTACK   ERASE  +71D            BUFFERS FOR RADAR TESTING.
R0849   AGS INITIALIZATION
 0850   AGSBUFF  ERASE  +27D
R0851  2         STORAGE FOR INBIT SCANNER.
 0852   LAST30   ERASE  +2              LAST SAMPLED INBITS.
 0853   MSGCNT   ERASE
L      2INPUT/OUTPUT CHANNELS
 0001   HISCALAR EQUALS 3
 0002   LOSCALAR EQUALS 4
 0003   OUT0     EQUALS 10
 0004   DSALMOUT EQUALS 11
 0005   CHAN12   EQUALS 12
 0006   CHAN13   EQUALS 13
 0007   CHAN14   EQUALS 14
 0008   MNKEYIN  EQUALS 15
 0009   NAVKEYIN EQUALS 16
 0010   CHAN33   EQUALS 33
 0011   DNTM1    EQUALS 34
 0012   DNTM2    EQUALS 35
R0013   END OF CHANNEL ASSIGNMENTS
L      2INTERRUPT LEAD INS
 0001  2         SETLOC 4000
 0002            INHINT                 GO
 0003            CAF    GOBB
 0004            XCH    BBANK
 0005  2         TCF    GOPROG
 0006            DXCH   ARUPT           HERE ON A T6 RUPT
 0007            EXTEND
 0008            QXCH   QRUPT
 0009  2         TCF    DOT6RUPT        DOT6RUPT IS IN FIX-FIXED.(INTR-BANK COM)
 0010            DXCH   ARUPT           T5RUPT
 0011            EXTEND
 0012            DCA    T5LOC           T5LOC EQUALS T5ADR
 0013  2         DTCB
 0014            DXCH   ARUPT           T3RUPT
 0015            CAF    T3RPTBB
 0016            XCH    BBANK
 0017  2         TCF    T3RUPT
 0018            DXCH   ARUPT           T4RUPT
 0019            CAF    ZERO
 0020            TCF    T4RUPT
 0021            EBANK= M11
 0022  2T4RPTBB  BBCON  T4RUPTA
 0023            DXCH   ARUPT           KEYRUPT1
 0024            CAF    KEYRPTBB
 0025            XCH    BBANK
 0026  2         TCF    KEYRUPT1
 0027            DXCH   ARUPT           KEYRUPT2
 0028            CAF    MKRUPTBB
 0029            XCH    BBANK
 0030  2         TCF    MARKRUPT
 0031            DXCH   ARUPT           UPRUPT
 0032            CAF    UPRPTBB
 0033            XCH    BBANK
 0034  2         TCF    UPRUPT
 0035            DXCH   ARUPT           DOWNRUPT
 0036            CAF    DWNRPTBB
 0037            XCH    BBANK
 0038  2         TCF    DODOWNTM
 0039            DXCH   ARUPT           RADAR RUPT
 0040            CAF    RDRPTBB
 0041            XCH    BBANK
 0042  2         TCF    RADAREAD
R00421  TRAPS 31B AND 32 SHOULD NEVER BE SET. THEREFORE-
R00422  RUPT 10 WILL ALWAYS REFER TO THE HAND CONTROLLER LPD OR MINIMUM IMPULSE
R00423 2USE. SEE GEORGE CHERRY FOR RATIONALE REGARDING THE AFORESAID.
 0043            DXCH   ARUPT           RUPT 10 USED FOR RHC MINIMP MODE ONLY.
 0044            CAF    TWO
 0045            TS     DELAYCTR
 0046  2         TCF    NOQRSM
 0047            EBANK= LST1            RESTART USES E0, E3
 0048  2GOBB     BBCON  GOPROG
 0049            EBANK= TIME1
 0050  2T6RPTBB  BBCON  RESUME          ***FIX LATER***
 0051            EBANK= LST1
 0052  2T3RPTBB  BBCON  T3RUPT
 0053            EBANK= KEYTEMP1
 0054  2KEYRPTBB BBCON  KEYRUPT1
 0055            EBANK= AOTAZ
 0056  2MKRUPTBB BBCON  MARKRUPT
 0057  2UPRPTBB  =      KEYRPTBB
 0058            EBANK= DNTMBUFF
 0059  2DWNRPTBB BBCON  DODOWNTM
 0060            EBANK= RADMODES
 0061  2RDRPTBB  BBCON  RADAREAD
 0062   ENDINTFF EQUALS
L      2INTER-BANK COMMUNICATION
R0001            THE FOLLOWING ROUTINE CAN BE USED TO CALL A SUBROUTINE IN ANOTH
 0002  9ER BANK. IN THE BANKCALL VERSION, THE
R0003  2CADR OF THE SUBROUTINE IMMEDIATELY FOLLOWS THE  TC BANKCALL  INSTRUCTION
 0004  9, WITH C(A) AND C(L) PRESERVED.
 0005  2         SETLOC ENDINTFF
 0006   BANKCALL DXCH   BUF2            SAVE INCOMING A,L.
 0007            INDEX  Q               PICK UP CADR.
 0008            CA     0
 0009  2         INCR   Q               SO WE RETURN TO THE LOC. AFTER THE CADR.
R0010  2         SWCALL IS IDENTICAL TO BANKCALL, EXCEPT THAT THE CADR ARRIVES I
 0011  9N A.
 0012   SWCALL   TS     L
 0013            LXCH   FBANK           SWITCH BANKS, SAVING RETURN.
 0014            MASK   LOW10           GET SUB-ADDRESS OF CADR.
 0015            XCH    Q               A,L NOW CONTAINS DP RETURN.
 0016            DXCH   BUF2            RESTORING INPUTS IF THIS IS A BANKCALL.
 0017            INDEX  Q
 0018  2         TC     10000           SETTING Q TO SWRETURN.
 0019   SWRETURN XCH    BUF2 +1         COMES HERE TO RETURN TO CALLER. C(A,L)
 0020            XCH    FBANK           ARE PRESERVED FOR RETURN.
 0021            XCH    BUF2 +1
 0022  4         TC     BUF2
R0023            THE FOLLOWING ROUTINE CAN BE USED AS A UNILATERAL JUMP WITH C(A
 0024  9,L) PRESERVED AND THE CADR IMMEDIATELY
R0025  2FOLLOWING THE TC POSTJUMP INSTRUCTION.
 0026   POSTJUMP XCH    Q               SAVE INCOMING C(A).
 0027            INDEX  A               GET CADR.
 0028  2         CA     0
R0029  2         BANKJUMP IS THE SAME AS POSTJUMP, EXCEPT THAT THE CADR ARRIVES
 0030  9IN A.
 0031   BANKJUMP TS     FBANK
 0032            MASK   LOW10
 0033            XCH    Q               RESTORING INPUT C(A) IF THIS WAS A
 0034            INDEX  Q               POSTJUMP.
 0035            TCF    10000
P0036  2         THE FOLLOWING ROUTINE GETS THE RETURN CADR SAVED BY SWCALL OR B
 0037  9ANKCALL AND LEAVES IT IN A.
 0038   MAKECADR CAF    LOW10
 0039            MASK   BUF2
 0040            AD     BUF2 +1
 0041  4         TC     Q
R0042            THE FOLLOWING ROUTINE OBTAINS THE TWO WORDS BEGINNING AT THE AD
 0043  9DRESS ARRIVING IN A, AND LEAVES THEM IN
R0044  2A,L.
 0045   DATACALL TS     L
 0046            LXCH   FBANK
 0047            LXCH   MPTEMP          SAVE FORMER BANK.
 0048            MASK   LOW10
 0049            EXTEND
 0050            INDEX  A
 0051  2         DCA    10000
 0052            XCH    MPTEMP
 0053            TS     FBANK           RESTORE FBANK.
 0054            CA     MPTEMP
 0055  2         TC     Q
P0056            THE FOLLOWING SUBROUTINES PROVIDE TO THE BASIC PROGRAMMER ENTRY
 0057  9 INTO AND RETURN FROM ANY INTERPRETIVE
R0058  2CODING WHICH DOES NOT USE THE ENTERING CONTENTS OF Q AND WHICH RETURNS V
 0059  9IA DANZIG. C(A) AND C(L) ARE SAVED.
R0060   USER'S RESPONSIBILITY TO FILL IN ADVANCE THE APPROPRIATE OPERAND AND ADD
 0061  9RESS REGISTERS USED BY THE
R0062   INTERPRETIVE CODING SUCH AS MPAC, BUF, ADDRWD, ETC.; AND TO CONFIRM THAT
 0063  9 THE INTERPRETIVE CODING MEETS THE
R0064  2ABOVE RESTRICTIONS WITH RESPECT TO Q AND DANZIG.
R0065  2USEPRET AND USPRCADR MUST NOT BE USED IN INTERRUPT.
R0066   1. USEPRET ACCESSES INTERPRETIVE CODING WHICH CAN BE ENTERED WITHOUT CHA
 0067  9NGING FBANK.
R0068  2   THE CALLING SEQUENCE IS AS FOLLOWS:
A0069   L        TC     USEPRET
A0070   L+1      TC,TCF INTPRETX        TC,TCF MEANS TC OR TCF
A0071                                   INTPRETX IS THE INTERPRETIVE CODING
A0072  2                                RETURN IS TO L+2
R0073  22. USPRCADR ACCESSES INTERPRETIVE CODING IN OTHER THAN THE USER'S FBANK.
 0074  9 THE CALLING SEQUENCE IS AS FOLLOWS:
A0075   L        TC     USPRCADR
A0076   L+1      CADR   INTPRETX        INTPRETX IS THE INTERPRETIVE CODING
A0077  2                                RETURN IS TO L+2
 0078   USEPRET  XCH    Q               FETCH Q, SAVING A
 0079            TS     LOC             L+1 TO LOC
 0080            CA     FBANK
 0081            TS     BANKSET         USERS BANK TO BANKSET
 0082            CA     BIT8
 0083            TS     EDOP            EXIT INSTRUCTION TO EDOP
 0084            CA     Q               RETRIEVE ORIGINAL A
 0085  2         TC     LOC
 0086   USPRCADR TS     LOC             SAVE A
 0087            CA     BIT8
 0088            TS     EDOP            EXIT INSTRUCTION TO EDOP
 0089            CA     FBANK
 0090            TS     BANKSET         USERS BANK TO BANKSET
 0091            INDEX  Q
 0092            CA     0
 0093            TS     FBANK           INTERPRETIVE BANK TO FBANK
 0094            MASK   LOW10           YIELDS INTERPRETIVE RELATIVE ADDRESS
 0095            XCH    Q               INTERPRETIVE ADDRESS TO Q, FETCHING L+1
 0096            XCH    LOC             L+1 TO LOC, RETRIEVING ORIGINAL A
 0097            INDEX  Q
 0098            TCF    10000
P0099  2         THE FOLLOWING ROUTINES ARE IDENTICAL TO BANKCALL AND SWCALL EXC
 0100  9EPT THAT THEY ARE USED IN INTERRUPT.
 0101   IBNKCALL DXCH   RUPTREG3        USES RUPTREG3,4 FOR DP RETURN ADDRESS.
 0102            INDEX  Q
 0103            CAF    0
 0104  2         INCR   Q
 0105   ISWCALL  TS     L
 0106            LXCH   FBANK
 0107            MASK   LOW10
 0108            XCH    Q
 0109            DXCH   RUPTREG3
 0110            INDEX  Q
 0111  2         TC     10000
 0112   ISWRETRN XCH    RUPTREG4
 0113            XCH    FBANK
 0114            XCH    RUPTREG4
 0115            TC     RUPTREG3
P0116  4T6-RUPT PROGRAMS.
R0117  2ENTER HERE AFTER A T6-RUPT.DETERMINE IF IT IS A GENUINE RUPT.
 0118   DOT6RUPT TC     T6JOBCHK
 0119  2         TCF    RESUME
R0120   T6JOBCHK DETERMINES IF T6 = -0 ( A T6 RUPT HAS OCCURRED ) OR IF T6
R0121      EQUALS +0 ( T6 NOT COUNTING DOWN ) OR =SOME POS.OR NEG. NUMBER ( T6
R0122  2   BEING DECREMENTED AND NO RUPT IS NEEDED ).
 0123   T6JOBCHK CCS    TIME6
 0124            TC     Q
 0125            TC     Q
 0126            TC     Q
R0127   T6JOB EXECUTES A JET STATE CHANGE AND SETS UP ANY ADDITIONAL T6 RUPTS
R0128  2   WHICH MIGHT BE NECESSARY.
 0129   T6JOB    CA     ZERO
 0130            XCH    T6NEXT +1
 0131            XCH    T6NEXT
 0132            TS     TIME6
 0133            EXTEND
 0134            BZF    T6ZERO
 0135            CA     BIT15
 0136            EXTEND
 0137            WOR    13
 0138            CA     ZERO
 0139            XCH    T6NEXTJT +2
 0140            XCH    T6NEXTJT +1
 0141            XCH    T6NEXTJT
 0142   WRITEJTS EXTEND
 0143            BZMF   WRITEQR
 0144            EXTEND
 0145            WRITE  6
 0146            TC     Q
 0147   WRITEQR  EXTEND
 0148            WRITE  5
 0149            TC     Q
 0150   T6ZERO   CA     T6NEXTJT
 0151            TCF    WRITEJTS
 0152   ENDIBNKF EQUALS
L      2LIST-PROCESSING INTERPRETER
R0001  2SECTION 1  DISPATCHER
R0002            ENTRY TO THE INTERPRETER. INTPRET SETS LOC TO THE FIRST  INSTRU
 0003  9CTION, BANKSET TO THE FBANK OF THE
R0004   OBJECT INTERPRETIVE PROGRAM, AND INTBIT15 TO THE BIT15 CONTENTS OF FBANK
 0005  9. INTERPRETIVE PROGRAMS MAY BE IN
R0006   VIRTUALLY ALL BANKS PRESENT UNDER ANY SUPER-BANK SETTING, WITH THE RESTR
 0007  9ICTION THAT PROGRAMS IN HIGH BANKS
R0008   (BIT15 OF FBANK = 1) DO NOT REFER TO LOWBANKS, AND VICE-VERSA. THE INTER
 0009  9PRETER DOES NOT SWITCH SUPER-BANK,
R0010  4NOR DOES IT SWITCH EBANKS. MOST EBANK SWITCHING IS DONE BY THE EXECUTIVE
 0011  9 PROGRAM.
 0012  2         SETLOC 6000
 0013   INTPRET  EXTEND                 SET LOC TO THE WORD FOLLOWING THE TC.
 0014  2         QXCH   LOC
 0015    +2      CA     FBANK           INTERPRETIVE BRANCHES FINISH HERE.
 0016            TS     BANKSET
 0017            MASK   BIT15           GET 15TH BIT FOR INDEXABLE ADDRESSES.
 0018            TS     INTBIT15
 0019            AD     LOW10           THIS VERSION IS USED IN PROCESSING
 0020  2         TS     INTB15+         INDEXABLE FIXED-BANK ADDRESSES.
 0021  4         TCF    NEWOPS          PICK UP OP CODE PAIR AND BEGIN.
 0022   INTRSM   LXCH   BBANK           RESUME SUSPENDED INTERPRETIVE JOB
 0023            TCF    INTPRET +3      (ACTUALLY PART OF THE EXECUTIVE).
P0024  2         AT THE END OF MOST INSTRUCTIONS, CONTROL IS GIVEN TO DANZIG TO
 0025  9DISPATCH THE NEXT OPERATION.
 0026  2NEWMODE  TS     MODE            PROLOGUE FOR MODE-CHANGING INSTRUCTIONS.
 0027   DANZIG   CA     BANKSET         SET FBANK BEFORE TESTING NEWJOB SO THAT
 0028  2         TS     FBANK           BBANK MAY BE SAVED DIRECTLY BY CHANJOB.
 0029   NOIBNKSW CCS    EDOP            SEE IF AN ORDER CODE IS LEFT OVER FROM
 0030            TCF    OPJUMP          THE LAST PAIR RETRIEVED. IF SO, EXECUTE.
A0031  2                                EDOP IS SET TO ZERO ON ITS RE-EDITING.
 0032            CCS    NEWJOB          SEE IF A JOB OF HIGHER PRIORITY IS
 0033  2         TCF    CHANG2          PRESENT, AND IF SO, CHANGE JOBS.
 0034            INCR   LOC             ADVANCE THE LOCATION COUNTER.
 0035   NEWOPS   INDEX  LOC             ENTRY TO BEGIN BY PICKING OP CODE PAIR.
 0036            CA     0               MAY BE AN OPCODE PAIR OR A STORE CODE.
 0037            CCS    A               TEST SIGN AND GET DABS(A).
 0038  2         TCF    DOSTORE         PROCESS STORE CODE.
 0039  2LOW7     OCT    177
 0040            TS     EDOP            OP CODE PAIR. LEAVE THE OTHER IN EDOP
 0041  2         MASK   LOW7            WHERE  CCS EDOP  WILL HONOR IT NEXT.
 0042   OPJUMP   TS     CYR             LOWWD ENTERS HERE IF A RIGHT-HAND OP
 0043            CCS    CYR             CODE IS TO BE PROCESSED. TEST PREFICES.
 0044  2         TCF    OPJUMP2         TEST SECOND PREFIX BIT.
 0045            TCF    EXIT            +0 OP CODE IS EXIT.
P0046  2         PROCESS ADDRESSES WHICH MAY BE DIRECT, INDEXED, OR REFERENCE TH
 0047  9E PUSHDOWN LIST.
 0048   ADDRESS  MASK   BIT1            SEE IF ADDRESS IS INDEXED. CYR CONTAINED
 0049            CCS    A               400XX, SO BIT 1 IS NOW AS IT WAS IN CYR.
 0050  2         TCF    INDEX           FORM INDEXED ADDRESS.
 0051   DIRADRES INDEX  LOC             LOOK AHEAD TO NEXT WORD TO SEE IF
 0052   OCT40001 CS     1               ADDRESS IS GIVEN.
 0053            CCS    A
 0054  2         TCF    PUSHUP          IF NOT.
 0055  2NEG4     DEC    -4
 0056            INCR   LOC             IF SO, TO SHOW WE PICKED UP A WORD.
 0057            TS     ADDRWD
P0058            FINAL DIGESTION OF DIRECT ADDRESSES OF OP CODES WITH 01 PREFIX
 0059  9IS DONE HERE. IN EACH CASE, THE
R0060   REQUIRED 12 BIT SUB-ADDRESS IS LEFT IN ADDRWD, WITH ANY REQUIRED BANK SW
 0061  9ITCHING DONE (F ONLY). ADDRESSES LESS
R0062  4THAN 45D ARE TAKEN TO BE RELATIVE TO THE WORK AREA. THE OP CODE IS NOW I
 0063  9N BITS 1-5 OF CYR WITH BIT 14 = 1.
 0064            AD     -ENDVAC         SEE IF ADDRESS RELATIVE TO WORK AREA.
 0065            CCS    A
 0066            AD     -ENDERAS        IF NOT, SEE IF IN GENERAL ERASABLE.
 0067  2         TCF    IERASTST
 0068   NETZERO  CA     FIXLOC          IF SO, LEAVE THE MODIFIED ADDRESS IN
 0069            ADS    ADDRWD          ADDRWD AND DISPATCH.
 0070    +2      INDEX  CYR             THIS INDEX MAKES THE NEXT INSTRUCTION
 0071  2         7      INDJUMP -1      TCF INDJUMP + OP, EDITING CYR.
 0072   IERASTST EXTEND
 0073  2         BZMF   NETZERO +2      GENERAL ERASABLE - DISPATCH IMMEDIATELY.
 0074   FIXEDADR AD     INTB15+         FIXED BANK ADDRESS. RESTORE AND ADD B15.
 0075    +1      TS     FBANK           SWITCH BANKS AND LEAVE SUB-ADDRESS IN
 0076            MASK   LOW10           ADDRWD FOR OPERAND RETRIEVAL.
 0077            AD     2K
 0078            TS     ADDRWD
 0079            INDEX  CYR
 0080            7      INDJUMP -1
P0081            THE FOLLOWING ROUTINE PROCESSES INTERPRETIVE INDEXED ADDRESSES.
 0082  9 AN INTERPRETER INDEX REGISTER MAY
R0083   CONTAIN THE ADDRESS OF ANY ERASABLE REGISTER (0-42 BEING RELATIVE TO THE
 0084  9 VAC AREA) OR ANY INTERPRETIVE PROGRAM
R0085  2BANK, OR ANY INTEGER IN THAT RANGE.
 0086   DODLOAD* CAF    DLOAD*          STODL* COMES HERE TO PROCESS LOAD ADR.
 0087  2         TS     CYR             (STOVL* ENTERS HERE).
 0088   INDEX    CA     FIXLOC          SET UP INDEX LOCATION.
 0089            TS     INDEXLOC
 0090            INCR   LOC             (ADDRESS ALWAYS GIVEN).
 0091            INDEX  LOC
 0092            CS     0
 0093            CCS    A               INDEX 2 IF ADDRESS STORED COMPLEMENTED.
 0094            INCR   INDEXLOC
 0095  2         NOOP
 0096            TS     ADDRWD          14 BIT ADDRESS TO ADDRWD.
 0097            MASK   BANKMASK        IF ADDRESS GREATER THAN 1K, ADD INTBIT15
 0098            EXTEND
 0099            BZF    INDEX2
 0100            CA     INTBIT15
 0101  2         ADS    ADDRWD
 0102   INDEX2   INDEX  INDEXLOC
 0103            CS     X1
 0104  2         ADS    ADDRWD          DO AUGMENT, IGNORING AND CORRECTING OVF.
 0105            MASK   HIGH9           SEE IF ADDRESS IS IN WORK AREA.
 0106            EXTEND
 0107            BZF    INDWORK
 0108            MASK   BANKMASK        SEE IF IN FIXED BANK.
 0109            EXTEND
 0110  2         BZF    INDERASE
 0111            CA     ADDRWD          IN FIXED - SWITCH BANKS AND CREATE
 0112            TS     FBANK           SUB-ADDRESS.
 0113            MASK   LOW10
 0114            AD     2K
 0115            TS     ADDRWD
 0116            INDEX  CYR
 0117  2         3      INDJUMP -1
 0118   INDWORK  CA     FIXLOC          MAKE ADDRWD RELATIVE TO WORK AREA.
 0119  2         ADS    ADDRWD
 0120   INDERASE INDEX  CYR
 0121            3      INDJUMP -1
P0122            PUSH-UP ROUTINES. WHEN NO OPERAND ADDRESS IS GIVEN, THE APPROPR
 0123  9IATE OPERAND IS TAKEN FROM THE PUSH-DOWN
R0124   LIST. IN MOST CASES THE MODE OF THE RESULT (VECTOR OR SCALAR) OF THE LAS
 0125  9T ARITHMETIC OPERATION PERFORMED
R0126   IS THE SAME AS THE TYPE OF OPERAND DESIRED (ALL ADD/SUBTRACT ETC.). EXCE
 0127  9PTIONS TO THIS GENERAL RULE ARE LISTED
R0128  2BELOW (NOTE THAT IN EVERY CASE THE MODE REGISTER IS LEFT INTACT):
R0129            1.  VXSC AND V/SC WANT THE OPPOSITE TYPE OF OPERAND, E.G., IF T
 0130  9HE LAST OPERATION YIELDED A VECTOR
R0131  2RESULT, VXSC WANTS A SCALAR.
R0132            2.  THE LOAD CODES SHOULD LOAD THE ACCUMULATOR INDEPENDENT OF T
 0133  9HE RESULT OF THE LAST OPERATION. THIS
R0134  2INCLUDES VLOAD, DLOAD, TLOAD, PDDL, AND PDVL (NO PUSHUP WITH SLOAD).
R0135            3.  SOME ARITHMETIC OPERATIONS REQUIRE A STANDARD TYPE OF OPERA
 0136  9ND REGARDLESS OF THE PREVIOUS OPERATION.
R0137  2THIS INCLUDES SIGN WANTING DP AND TAD REQUIRING TP.
 0138   PUSHUP   CAF    OCT23           IF THE LOW 5 BITS OF CYR ARE LESS THAN
 0139            MASK   CYR             20, THIS OP REQUIRES SPECIAL ATTENTION.
 0140            AD     -OCT10          (NO -0).
 0141            CCS    A
 0142  2         TCF    REGUP           FOR ALL CODES GREATER THAN OCT 7.
 0143  2-OCT10   OCT    -10
 0144            AD     NEG4            WE NOW HAVE 7 - OP CODE(MOD4). SEE IF
 0145            CCS    A               THE OP CODE (MOD4) IS THREE (REVERSE).
 0146            INDEX  A               NO - THE MODE IS DEFINITE. PICK UP THE
 0147            CS     NO.WDS
 0148  2         TCF    REGUP +2
 0149            INDEX  MODE            FOR VXSC AND V/SC WE WANT THE REQUIRED
 0150            CS     REVCNT          PUSHLOC DECREMENT WITHOUT CHANGING THE
 0151  2         TCF    REGUP +2        MODE AT THIS TIME.
 0152   REGUP    INDEX  MODE            MOST ALL OP CODES PUSHUP HERE.
 0153            CS     NO.WDS
 0154    +2      ADS    PUSHLOC
 0155            TS     ADDRWD
 0156            INDEX  CYR
 0157  2         7      INDJUMP -1      (THE INDEX MAKES THIS A TCF.)
 0158            OCT    2               REVERSE PUSHUP DECREMENT. VECTOR TAKES 2
 0159   REVCNT   OCT    6               WORDS, SCALAR TAKES 6.
 0160            OCT    6
 0161   NO.WDS   OCT    2               CONVENTIONAL DECREMENT IS 6 WORDS VECTOR
 0162            OCT    3               2 IN DP, AND 3 IN TP.
 0163            OCT    6
P0164  2         TEST THE SECOND PREFIX BIT TO SEE IF THIS IS A MISCELLANEOUS OR
 0165  9 A UNARY/SHORT SHIFT OPERATION.
 0166   OPJUMP2  CCS    CYR             TEST SECOND PREFIX BIT.
 0167  2         TCF    OPJUMP3         TEST THIRD BIT TO SEE IF UNARY OR SHIFT.
 0168  2-ENDVAC  DEC    -45
R0169            THE FOLLOWING ROUTINE PROCESSES ADDRESSES OF SUFFIX CLASS 10. T
 0170  9HEY ARE BASICALLY WORK AREA ADDRESSES
R0171   IN THE RANGE 0 - 52, ERASABLE ADRES CONSTANTS FROM 100 - 1777, AND FCADR
 0172  9S ABOVE THAT. ALL 15 BITS ARE AVAILABLE
R0173  2IN CONTRAST TO SUFFIX 1, IN WHICH ONLY THE LOW ORDER 14 ARE AVAILABLE.
 0174   15BITADR INCR   LOC             (ENTRY HERE FROM STCALL).
 0175            INDEX  LOC             PICK UP ADDRESS WORD.
 0176            CA     0
 0177            TS     POLISH          THE ABSOLUTE ADDRESS WILL BE LEFT IN
 0178            TS     ADDRWD          POLISH WITH AN ERASABLE SUBADDRESS IN
A0179                                   ADDRWD.
 0180            MASK   HIGH9           SEE IF RELATIVE TO THE WORK AREA.
 0181            CCS    A
 0182            TCF    +2
 0183  2         TCF    RELWORK         ONLY IF ZERO.
 0184            CAF    LOW7+2K         THESE INSTRUCTIONS ARE IN BANK 1.
 0185            TS     FBANK
 0186            MASK   CYR
 0187            INDEX  A
 0188  2         TCF    MISCJUMP
 0189   RELWORK  CA     FIXLOC          MAKE ADDRWD RELATIVE TO FIXLOC, LEAVING
 0190            ADS    ADDRWD          POLISH ABSOLUTE IN CASE THIS WAS AN
 0191            CAF    LOW7+2K         AXT, ETC.
 0192            TS     FBANK
 0193            MASK   CYR
 0194            INDEX  A
 0195            TCF    MISCJUMP
P0196  2         COMPLETE THE DISPATCHING OF UNARY AND SHORT SHIFT OPERATIONS.
 0197   OPJUMP3  TS     FBANK           CALL IN BANK 0 (BITS 11-15 OF A ARE 0.)
 0198            CCS    CYR             TEST THIRD PREFIX BIT.
 0199            INDEX  A               THE DECREMENTED UNARY CODE IS IN BITS
 0200  2         TCF    UNAJUMP         1-4 OF A (ZERO, EXIT, HAS BEEN DETECTED)
 0201            CCS    MODE            ITS A SHORT SHIFT CODE. SEE IF PRESENT
 0202            TCF    SHORTT          SCALAR OR VECTOR.
 0203            TCF    SHORTT
 0204  4         TCF    SHORTV          CALLS THE APPROPRIATE ROUTINE.
 0205   OCT23    OCT    23              MASK USED BY PUSH-UP ROUTINE.
 0206   LOW7+2K  OCT    2177            OP CODE MASK + BANK 1 FBANK SETTING.
 0207   HIGH9    OCT    77700
 0208   BANKMASK OCT    76000           FBANK MASK.
 0209   FBANKMSK EQUALS BANKMASK
 0210   B11T14   OCT    36000           USED IN PROCESSING STORE CODES.
 0211   -ENDERAS DEC    -977
P0212  2         THE FOLLOWING IS THE JUMP TABLE FOR OP CODES WHICH MAY HAVE IND
 0213  9EXABLE ADDRESSES OR MAY PUSH UP.
 0214   INDJUMP  TCF    VLOAD           00 - LOAD MPAC WITH A VECTOR.
 0215            TCF    TAD             01 - TRIPLE PRECISION ADD TO MPAC.
 0216            TCF    SIGN            02 - COMPLEMENT MPAC (V OR SC) IF X NEG.
 0217            TCF    VXSC            03 - VECTOR TIMES SCALAR.
 0218            TCF    CGOTO           04 - COMPUTED GO TO.
 0219            TCF    TLOAD           05 - LOAD MPAC WITH TRIPLE PRECISION.
 0220            TCF    DLOAD           06 - LOAD MPAC WITH A DP SCALAR.
 0221  2         TCF    V/SC            07 - VECTOR DIVIDED BY SCALAR.
 0222            TCF    SLOAD           10 - LOAD MPAC IN SINGLE PRECISION.
 0223            TCF    SSP             11 - SET SINGLE PRECISION INTO X.
 0224            TCF    PDDL            12 - PUSH DOWN MPAC AND RE-LOAD IN DP.
 0225            TCF    MXV             13 - MATRIX POST-MULTIPLIED BY VECTOR.
 0226            TCF    PDVL            14 - PUSH DOWN AND VECTOR LOAD.
 0227            TCF    CCALL           15 - COMPUTED CALL.
 0228            TCF    VXM             16 - MATRIX PRE-MULTIPLIED BY VECTOR.
 0229  2         TCF    TSLC            17 - NORMALIZE MPAC (SCALAR ONLY).
 0230            TCF    DMPR            20 - DP MULTIPLY AND ROUND.
 0231            TCF    DDV             21 - DP DIVIDE BY.
 0232            TCF    BDDV            22 - DP DIVIDE INTO.
 0233            TCF    GSHIFT          23 - GENERAL SHIFT INSTRUCTION.
 0234            TCF    VAD             24 - VECTOR ADD.
 0235            TCF    VSU             25 - VECTOR SUBTRACT.
 0236            TCF    BVSU            26 - VECTOR SUBTRACT FROM.
 0237  2         TCF    DOT             27 - VECTOR DOT PRODUCT.
 0238            TCF    VXV             30 - VECTOR CROSS PRODUCT.
 0239            TCF    VPROJ           31 - VECTOR PROJECTION.
 0240            TCF    DSU             32 - DP SUBTRACT.
 0241            TCF    BDSU            33 - DP SUBTRACT FROM.
 0242            TCF    DAD             34 - DP ADD.
 0243            TCF                    35 - AVAILABLE
 0244            TCF    DMP1            36 - DP MULTIPLY.
 0245  2         TCF    SETPD           37 - SET PUSH DOWN POINTER (DIRECT ONLY)
R0246   CODES 10 AND 14 MUST NOT PUSH UP. CODE 04 MAY BE USED FOR VECTOR DECLARE
 0247  9 BEFORE PUSHUP IF DESIRED.
P0248  2         THE FOLLOWING JUMP TABLE APPLIES TO INDEX, BRANCH, AND MISCELLA
 0249  9NEOUS INSTRUCTIONS.
 0250   MISCJUMP TCF    AXT             00 - ADDRESS TO INDEX TRUE.
 0251            TCF    AXC             01 - ADDRESS TO INDEX COMPLEMENTED.
 0252            TCF    LXA             02 - LOAD INDEX FROM ERASABLE.
 0253            TCF    LXC             03 - LOAD INDEX FROM COMPLEMENT OF ERAS.
 0254            TCF    SXA             04 - STORE INDEX IN ERASABLE.
 0255            TCF    XCHX            05 - EXCHANGE INDEX WITH ERASABLE.
 0256            TCF    INCR            06 - INCREMENT INDEX REGISTER.
 0257  2         TCF    TIX             07 - TRANSFER ON INDEX.
 0258            TCF    XAD             10 - INDEX REGISTER ADD FROM ERASABLE.
 0259            TCF    XSU             11 - INDEX SUBTRACT FROM ERASABLE.
 0260            TCF    BZE/GOTO        12 - BRANCH ZERO AND GOTO.
 0261            TCF    BPL/BMN         13 - BRANCH PLUS AND BRANCH MINUS.
 0262            TCF    CALL/ITA        14 - CALL AND STORE QPRET.
 0263            TCF    RTB/BHIZ        15 - RETURN TO BASIC AND BRANCH HI ZERO.
 0264            TCF    SW/             16 - SWITCH INSTRUCTIONS AND AVAILABLE.
 0265            TCF    BOV(B)          17 - BRANCH ON OVERFLOW TO BASIC OR INT.
P0266  2         THE FOLLOWING JUMP TABLE APPIES TO UNARY INSTRUCTIONS.
A0267                                   00 - EXIT - DETECTED EARLIER.
 0268   UNAJUMP  TCF    SQRT            01 - SQUARE ROOT.
 0269            TCF    SINE            02 - SIN.
 0270            TCF    COSINE          03 - COS.
 0271            TCF    ARCSIN          04 - ARC SIN.
 0272            TCF    ARCCOS          05 - ARC COS.
 0273            TCF    DSQ             06 - DP SQUARE.
 0274  2         TCF    ROUND           07 - ROUND TO DP.
 0275            TCF    COMP            10 - COMPLEMENT VECTOR OR SCALAR.
 0276            TCF    VDEF            11 - VECTOR DEFINE.
 0277            TCF    UNIT            12 - UNIT VECTOR.
 0278            TCF    ABVALABS        13 - LENGTH OF VECTOR OR MAG OF SCALAR.
 0279            TCF    VSQ             14 - SQUARE OF LENGTH OF VECTOR.
 0280            TCF    STADR           15 - PUSH UP ON STORE CODE.
 0281            TCF    RVQ             16 - RETURN VIA QPRET.
 0282            TCF    PUSH            17 - PUSH MPAC DOWN.
P0283  2SECTION 2  LOAD AND STORE PACKAGE.
R0284            A SET OF SIXTEEN STORE CODES ARE PROVIDED AS THE PRIMARY METHOD
 0285  9 OF STORING THE MULTI-PURPOSE
R0286   ACCUMULATOR (MPAC). IF IN THE DANZIG SECTION LOC REFERS TO AN ALGEBRAICA
 0287  9LLY POSITIVE WORD, IT IS TAKEN AS A
R0288   STORE CODE WITH A CORRESPONDING ERASABLE ADDRESS. MOST OF THESE CODES AR
 0289  9E TWO ADDRESS, SPECIFYING THAT THE WORD
R0290  2FOLLOWING THE STORE CODE IS TO BE USED AS AN ADDRESS FROM WHICH TO RE-LO
 0291  9AD MPAC. FOUR OPTIONS ARE AVAILABLE:
R0292            1. STORE               STORE MPAC. THE E ADDRESS MAY BE INDEXED
 0293  9.
R0294            2. STODL               STORE MPAC AND RE-LOAD IT IN DP WITH THE
 0295  9 NEXT ADDRESS (EITHER MAY BE INDEXED).
R0296            3. STOVL               STORE MPAC AND RE-LOAD A VECTOR (AS ABOV
 0297  9E).
R0298  2         4. STCALL              STORE AND DO A CALL (BOTH ADDRESSES MUST
 0299  9 BE DIRECT HERE).
R0300  4         STODL AND STOVL WILL TAKE FROM THE PUSH-DOWN LIST IF NO LOAD AD
 0301  9DRESS IS GIVEN.
 0302   STADR    CA     BANKSET         THE STADR CODE (PUSHUP UP ON STORE
 0303            TS     FBANK           ADDRESS) ENTERS HERE.
 0304            INCR   LOC
 0305            INDEX  LOC             THE STORE CODE WAS STORE COMPLEMENTED TO
 0306            CS     0               MAKE IT LOOK LIKE AN OPCODE PAIR.
 0307            AD     NEGONE          (YUL CANT REMOVE 1 BECAUSE OF EARLY CCS)
 0308   DOSTORE  TS     ADDRWD
 0309            MASK   LOW10           ENTRY FROM DISPATCHER. SAVE THE ERASABLE
 0310            XCH    ADDRWD          ADDRESS AND JUMP ON THE STORE CODE NO.
 0311            MASK   B11T14
 0312            EXTEND
 0313            MP     BIT6            EACH TRANSFER VECTOR ENTRY IS TWO WORDS.
 0314            INDEX  A
 0315            TCF    STORJUMP
P0316            STORE CODE JUMP TABLE. CALLS THE APPROPRIATE STORING ROUTINE AN
 0317  9D EXITS TO DANZIG OR TO ADDRESS WITH
R0318  2A SUPPLIED OPERATION CODE.
 0319   STORJUMP TC     STORE           STORE.
 0320            TCF    NEWOPS -1       PICK UP NEW OP CODE(S).
 0321            TC     STORE,1
 0322            TCF    NEWOPS -1
 0323            TC     STORE,2
 0324  2         TCF    NEWOPS -1
 0325            TC     STORE           STODL.
 0326            TCF    DODLOAD
 0327            TC     STORE,1
 0328            TCF    DODLOAD
 0329            TC     STORE,2
 0330  2         TCF    DODLOAD
 0331            TC     STORE           STODL WITH INDEXED LOAD ADDRESS.
 0332            TCF    DODLOAD*
 0333            TC     STORE,1
 0334            TCF    DODLOAD*
 0335            TC     STORE,2
 0336  2         TCF    DODLOAD*
 0337            TC     STORE           STOVL.
 0338            TCF    DOVLOAD
 0339            TC     STORE,1
 0340            TCF    DOVLOAD
 0341            TC     STORE,2
 0342  2         TCF    DOVLOAD
 0343            TC     STORE           STOVL WITH INDEXED LOAD ADDRESS.
 0344            TCF    DOVLOAD*
 0345            TC     STORE,1
 0346            TCF    DOVLOAD*
 0347            TC     STORE,2
 0348  2         TCF    DOVLOAD*
 0349            TC     STORE           STOTC.
 0350            CAF    CALLCODE
 0351            TS     CYR
 0352            TCF    15BITADR        GET A 15 BIT ADDRESS.
P0353  2         STORE CODE ADDRESS PROCESSOR.
 0354   STORE,1  INDEX  FIXLOC
 0355            CS     X1
 0356  2         TCF    PRESTORE
 0357   STORE,2  INDEX  FIXLOC
 0358            CS     X2
 0359  2PRESTORE ADS    ADDRWD          RESULTANT ADDRESS IS IN ERASABLE.
 0360   STORE    CA     ADDRWD          SEE IF ADDRESS RELATIVE TO WORK AREA.
 0361            AD     -ENDVAC
 0362            CCS    A
 0363  2         TCF    STARTSTO        ADDRESS OK AS IS.
 0364  2LOW10    OCT    1777
 0365            CA     FIXLOC          GIVEN ADDRESS IS RELATIVE TO WORK AREA.
 0366            ADS    ADDRWD
P0367  2         STORING ROUTINES. STORE DP, TP, OR VECTOR AS INDICATED BY MODE.
 0368   STARTSTO EXTEND                 MPAC,+1 MUST BE STORED IN ANY EVENT.
 0369            DCA    MPAC
 0370            INDEX  ADDRWD
 0371  2         DXCH   0
 0372            CCS    MODE
 0373            TCF    TSTORE
 0374  2         TC     Q
 0375   VSTORE   EXTEND
 0376            DCA    MPAC +3
 0377            INDEX  ADDRWD
 0378  2         DXCH   2
 0379            EXTEND
 0380            DCA    MPAC +5
 0381            INDEX  ADDRWD
 0382            DXCH   4
 0383  2         TC     Q
 0384   TSTORE   CA     MPAC +2
 0385            INDEX  ADDRWD
 0386            TS     2
 0387            TC     Q
P0388            ROUTINES TO BEGIN PROCESSING OF THE SECOND ADDRESS ASSOCIATED W
 0389  9ITH ALL STORE-TYPE CODES EXCEPT STORE
R0390  2ITSELF.
 0391   DODLOAD  CAF    DLOADCOD
 0392            TS     CYR
 0393  2         TCF    DIRADRES        GO GET A DIRECT ADDRESS.
 0394   DOVLOAD  CAF    VLOADCOD
 0395            TS     CYR
 0396  2         TCF    DIRADRES
 0397   DOVLOAD* CAF    VLOAD*
 0398            TCF    DODLOAD* +1     PROLOGUE TO INDEX ROUTINE.
P0399  2         THE FOLLOWING LOAD INSTRUCTIONS ARE PROVIDED FOR LOADING THE MU
 0400  9LTI-PURPOSE ACCUMULATOR MPAC.
 0401   DLOAD    EXTEND
 0402            INDEX  ADDRWD
 0403            DCA    0               PICK UP DP ARGUMENT AND LEAVE IT IN
 0404   SLOAD2   DXCH   MPAC            MPAC,+1, SETTING MPAC +2 TO ZERO. THE
 0405            CAF    ZERO            CONTENTS OF THE OTHER FOUR REGISTERS OF
 0406            TS     MPAC +2         MPAC ARE IRRELEVANT.
 0407  2         TCF    NEWMODE         DECLARE DOUBLE PRECISION MODE.
 0408   TLOAD    INDEX  ADDRWD
 0409            CA     2               LOAD A TRIPLE PRECISION ARGUMENT INTO
 0410            TS     MPAC +2         THE FIRST THREE MPAC REGISTERS, WITH THE
 0411            EXTEND                 CONTENTS OF THE OTHER FOUR IRRELEVANT.
 0412            INDEX  ADDRWD
 0413            DCA    0
 0414            DXCH   MPAC
 0415            CAF    ONE
 0416  2         TCF    NEWMODE         DECLARE TRIPLE PRECISION MODE.
 0417   SLOAD    ZL                     LOAD A SINGLE PRECISION NUMBER INTO
 0418            INDEX  ADDRWD          MPAC, SETTING MPAC+1,2 TO ZERO. THE
 0419            CA     0               CONTENTS OF THE REMAINING MPAC REGISTERS
 0420  2         TCF    SLOAD2          ARE IRRELEVANT.
 0421   VLOAD    EXTEND                 LOAD A DOUBLE PRECISION VECTOR INTO
 0422            INDEX  ADDRWD          MPAC,+1, MPAC+3,4, AND MPAC+5,6. THE
 0423            DCA    0               CONTENTS OF MPAC +2 ARE IRRELEVANT.
 0424  2         DXCH   MPAC
 0425   ENDVLOAD EXTEND                 PDVL COMES HERE TO FINISH UP FOR DP, TP.
 0426            INDEX  ADDRWD
 0427            DCA    2
 0428  2         DXCH   MPAC +3
 0429    +4      EXTEND                 TPDVL FINISHES HERE.
 0430            INDEX  ADDRWD
 0431            DCA    4
 0432  2         DXCH   MPAC +5
 0433            CS     ONE             DECLARE VECTOR MODE.
 0434            TCF    NEWMODE
P0435  2         THE FOLLOWING INSTRUCTIONS ARE PROVIDED FOR STORING OPERANDS IN
 0436  9 THE PUSHDOWN LIST:
R0437            1.  PUSH               PUSHDOWN AND NO LOAD.
R0438            2.  PDDL               PUSHDOWN AND DOUBLE PRECISION LOAD.
R0439  2         3.  PDVL               PUSHDOWN AND VECTOR LOAD.
 0440   PDDL     EXTEND
 0441            INDEX  ADDRWD          LOAD MPAC,+1, PUSHING THE FORMER
 0442            DCA    0               CONTENTS DOWN.
 0443            DXCH   MPAC
 0444            INDEX  PUSHLOC
 0445  2         DXCH   0
 0446            INDEX  MODE            ADVANCE THE PUSHDOWN POINTER APPRO-
 0447            CAF    NO.WDS          PRIATELY.
 0448  2         ADS    PUSHLOC
 0449            CCS    MODE
 0450            TCF    ENDTPUSH
 0451  2         TCF    ENDDPUSH
 0452            TS     MODE            NOW DP.
 0453   ENDVPUSH TS     MPAC +2
 0454            DXCH   MPAC +3         PUSH DOWN THE REST OF THE VECTOR HERE.
 0455            INDEX  PUSHLOC
 0456  2         DXCH   0 -4
 0457            DXCH   MPAC +5
 0458            INDEX  PUSHLOC
 0459  2         DXCH   0 -2
 0460  2         TCF    DANZIG
 0461   ENDDPUSH TS     MPAC +2         SET MPAC +2 TO ZERO AND EXIT ON DP.
 0462  2         TCF    DANZIG
 0463   ENDTPUSH TS     MODE
 0464            XCH    MPAC +2         ON TRIPLE, SET MPAC +2 TO ZERO, PUSHING
 0465    +2      INDEX  PUSHLOC         DOWN THE OLD CONTENTS
 0466            TS     0 -1
 0467            TCF    DANZIG
P0468  2         PDVL - PUSHDOWN AND VECTOR LOAD.
 0469   PDVL     EXTEND                 RELOAD MPAC AND PUSH DOWN ITS CONTENTS.
 0470            INDEX  ADDRWD
 0471            DCA    0
 0472            DXCH   MPAC
 0473            INDEX  PUSHLOC
 0474  2         DXCH   0
 0475            INDEX  MODE            ADVANCE THE PUSHDOWN POINTER.
 0476            CAF    NO.WDS
 0477  2         ADS    PUSHLOC
 0478            CCS    MODE            TEST PAST MODE.
 0479            TCF    TPDVL
 0480  2         TCF    ENDVLOAD        JUST LOAD LAST FOUR REGISTERS ON DP.
 0481   VPDVL    EXTEND                 PUSHDOWN AND RE-LOAD LAST TWO COMPONENTS
 0482            INDEX  ADDRWD
 0483            DCA    2
 0484            DXCH   MPAC +3
 0485            INDEX  PUSHLOC
 0486  2         DXCH   0 -4
 0487            EXTEND
 0488            INDEX  ADDRWD
 0489            DCA    4
 0490            DXCH   MPAC +5
 0491            INDEX  PUSHLOC
 0492  2         DXCH   0 -2
 0493  2         TCF    DANZIG
 0494   TPDVL    EXTEND                 ON TP, WE MUST LOAD THE Y COMPONENT
 0495            INDEX  ADDRWD          BEFORE STORING MPAC +2 INCASE THIS IS A
 0496            DCA    2               PUSHUP.
 0497  2         DXCH   MPAC +3
 0498            CA     MPAC +2
 0499            INDEX  PUSHLOC         IN DP.
 0500            TS     0 -1
 0501  2         TCF    ENDVLOAD +4
R0502  2         SSP (STORE SINGLE PRECISION) IS EXECUTED HERE.
 0503   SSP      INCR   LOC             PICK UP THE WORD FOLLOWING THE GIVEN
 0504            INDEX  LOC             ADDRESS AND STORE IT AT X.
 0505            CA     0
 0506   STORE1   INDEX  ADDRWD          SOME INDEX AND MISCELLANEOUS OPS END
 0507            TS     0               HERE.
 0508            TCF    DANZIG
P0509  2SEQUENCE CHANGING AND SUBROUTINE CALLING OPTIONS.
R0510  2         THE FOLLOWING OPERATIONS ARE AVAILABLE FOR SEQUENCING CHANGING,
 0511  9 BRANCHING, AND CALLING SUBROUTINES:
R0512            1.  GOTO               GO TO.
R0513            2.  CALL               CALL SUBROUTINE SETTING QPRET.
R0514            3.  CGOTO              COMPUTED GO TO.
R0515            4.  CCALL              COMPUTED CALL.
R0516            7.  BPL                BRANCH IF MPAC POSITIVE OR ZERO.
R0517            8.  BZE                BRANCH IF MPAC ZERO.
R0518  2         9.  BMN                BRANCH IF MPAC NEGATIVE NON-ZERO.
 0519   CCALL    INCR   LOC             MAINTAIN LOC FOR QPRET COMPUTATION.
 0520            INDEX  LOC
 0521            CAF    0               GET BASE ADDRESS OF CADR LIST.
 0522            INDEX  ADDRWD
 0523            AD     0               ADD INCREMENT.
 0524            TS     FBANK           SELECT DESIRED CADR.
 0525            MASK   LOW10
 0526            INDEX  A
 0527            CAF    10000
 0528  2 -1      TS     POLISH
 0529   CALL     CS     LOW10           FOR ANY OF THE CALL OPTIONS, MAKE UP THE
 0530            AD     LOC             ADDRESS OF THE NEXT OP-CODE PAIR/STORE
 0531            AD     BANKSET         CODE AND LEAVE IT IN QPRET. NOTE THAT
 0532            INDEX  FIXLOC          LOW10 = 2000 - 1.
 0533  2         TS     QPRET
 0534   GOTO     CA     POLISH          BASIC BRANCHING SEQUENCE.
 0535            TS     FBANK
 0536            MASK   LOW10           MAKE UP 12 BIT SUB-ADDRESS AND FALL INTO
 0537            AD     2K              FALL INTO THE INTPRET ENTRY UNLESS THE
 0538            TS     LOC             GIVEN ADDRESS WAS IN ERASABLE, IN WHICH
 0539            CCS    FBANK           CASE IT IS USED AS THE ADDRESS OF THE
 0540            TCF    INTPRET +2      BRANCH ADDRESS.
 0541            TCF    +2
 0542  8         TCF    INTPRET +2
 0543            CS     LOC             THE GIVEN ADDRESS IS IN ERASABLE - SEE
 0544            AD     EVAC+2K         IF RELATIVE TO THE WORK AREA.
 0545            CCS    A
 0546            CA     FIXLOC          ADD FIXLOC IF SO.
 0547  2         ADS    LOC
 0548            INDEX  LOC
 0549            CA     0 -2000         (ADDRESS HAD BEEN AUGMENTED BY 2000.)
 0550  2         TCF    GOTO +1         ALLOWS ARBITRARY INDIRECTNESS.
 0551   CGOTO    INDEX  LOC             COMPUTED GO TO. PICK UP ADDRESS OF CADR
 0552            CA     1               LIST.
 0553            INDEX  ADDRWD          ADD MODIFIER.
 0554            AD     0
 0555            TS     FBANK           SELECT GOTO ADDRESS.
 0556            MASK   LOW10
 0557            INDEX  A
 0558            CA     10000
 0559  2         TCF    GOTO +1         WITH ADDRESS IN A.
 0560   SWBRANCH CA     BANKSET         SWITCH INSTRUCTIONS WHICH ELECT TO
 0561            TS     FBANK           BRANCH COME HERE TO DO SO.
 0562            INDEX  LOC
 0563            CA     1
 0564  2         TCF    GOTO +1
 0565   EVAC+2K  DEC    1069            =1024+45
P0566  2         TRIPLE PRECISION BRANCHING ROUTINE. IF CALLING TC IS AT L, RETU
 0567  9RN IS AS FOLLOWS:
R0568            L+1  IF MPAC IS GREATER THAN ZERO.
R0569            L+2  IF MPAC IS EQUAL TO +0 OR -0.
R0570  4         L+3  IF MPAC IS LESS THAN ZERO.
 0571   BRANCH   CCS    MPAC
 0572            TC     Q
 0573            TCF    +2              ON ZERO.
 0574  2         TCF    NEG
 0575            CCS    MPAC +1
 0576            TC     Q
 0577            TCF    +2
 0578  2         TCF    NEG
 0579            CCS    MPAC +2
 0580            TC     Q
 0581            TCF    +2
 0582  2         TCF    NEG
 0583            INDEX  Q               IF ALL THREE REGISTERS WERE +-0.
 0584  2         TC     1
 0585   NEG      INDEX  Q               IF FIRST NON-ZERO REGISTER WAS NEGATIVE.
 0586  4         TC     2
 0587   EXIT     INDEX  LOC             LEAVE INTERPRETIVE MODE.
 0588            TCF    1
P0589  2SECTION 3 - ADD/SUBTRACT PACKAGE.
R0590            THE FOLLOWING OPERATIONS ARE PROVIDED FOR ADDING TO AND SUBTRAC
 0591  9TING FROM THE MULTI-PURPOSE ACCUMULATOR
R0592  2MPAC:
R0593            1.  DAD                DOUBLE PRECISION ADD.
R0594            2.  DSU                DOUBLE PRECISION SUBTRACT.
R0595  2         3.  BDSU               DOUBLE PRECISION SUBTRACT FROM.
R0596  2         4.  TAD                TRIPLE PRECISION ADD.
R0597            5.  VAD                VECTOR ADD.
R0598            6.  VSU                VECTOR SUBTRACT.
R0599  2         7.  BVSU               VECTOR SUBTRACT FROM.
R0600  4THE INTERPRETIVE OVERFLOW INDICATOR OVFIND IS SET NON-ZERO IF OVERFLOW O
 0601  9CCURS IN ANY OF THE ABOVE.
 0602   VAD      EXTEND
 0603            INDEX  ADDRWD
 0604            DCA    2
 0605            DAS    MPAC +3
 0606            EXTEND                 CHECK OVERFLOW.
 0607            BZF    +2
 0608  2         TC     OVERFLOW
 0609            EXTEND
 0610            INDEX  ADDRWD
 0611            DCA    4
 0612            DAS    MPAC +5
 0613            EXTEND
 0614            BZF    +2
 0615  2         TC     OVERFLOW
 0616   DAD      EXTEND
 0617            INDEX  ADDRWD
 0618            DCA    0
 0619   ENDVXV   DAS    MPAC            VXV FINISHES HERE.
 0620            EXTEND
 0621            BZF    DANZIG
 0622            TC     OVERFLOW
 0623  8         TCF    DANZIG
 0624   VSU      EXTEND
 0625            INDEX  ADDRWD
 0626            DCS    2
 0627            DAS    MPAC +3
 0628            EXTEND
 0629            BZF    +2
 0630  2         TC     OVERFLOW
 0631            EXTEND
 0632            INDEX  ADDRWD
 0633            DCS    4
 0634            DAS    MPAC +5
 0635            EXTEND
 0636            BZF    +2
 0637  2         TC     OVERFLOW
 0638   DSU      EXTEND
 0639            INDEX  ADDRWD
 0640            DCS    0
 0641            DAS    MPAC
 0642            EXTEND
 0643            BZF    DANZIG
 0644            TC     OVERFLOW
 0645  2         TCF    DANZIG
 0646   OVERFLOW CAF    ONE             SUBROUTINE TO TURN OVFIND ON.
 0647  8         TCF    SETOVF2
 0648   BVSU     EXTEND
 0649            INDEX  ADDRWD
 0650            DCA    2
 0651            DXCH   MPAC +3
 0652            EXTEND
 0653            DCOM
 0654            DAS    MPAC +3
 0655            EXTEND
 0656            BZF    +2
 0657  2         TC     OVERFLOW
 0658            EXTEND
 0659            INDEX  ADDRWD
 0660            DCA    4
 0661            DXCH   MPAC +5
 0662            EXTEND
 0663            DCOM
 0664            DAS    MPAC +5
 0665            EXTEND
 0666            BZF    +2
 0667  2         TC     OVERFLOW
 0668   BDSU     EXTEND
 0669            INDEX  ADDRWD
 0670            DCA    0
 0671            DXCH   MPAC
 0672            EXTEND
 0673            DCOM
 0674            DAS    MPAC
 0675            EXTEND
 0676            BZF    DANZIG
 0677            TC     OVERFLOW
 0678            TCF    DANZIG
P0679  2         TRIPLE PRECISION ADD ROUTINE.
 0680   TAD      EXTEND
 0681            INDEX  ADDRWD
 0682            DCA    1               ADD MINOR PARTS FIRST.
 0683            DAS    MPAC +1
 0684            INDEX  ADDRWD
 0685            AD     0
 0686            AD     MPAC
 0687            TS     MPAC
 0688  2         TCF    DANZIG
 0689   SETOVF   TS     OVFIND          SET OVFIND IF SUCH OCCURS.
 0690            TCF    DANZIG
P0691  2ARITHMETIC SUBROUTINES REQUIRED IN FIXED-FIXED.
R0692            1.  DMPSUB     DOUBLE PRECISION MULTIPLY. MULTIPLY THE CONTENTS
 0693  9 OF MPAC,+1 BY THE DP WORD WHOSE ADDRESS
R0694                           IS IN ADDRWD AND LEAVE A TRIPLE PRECISION RESULT
 0695  9 IN MPAC.
R0696            2.  ROUNDSUB   ROUND THE TRIPLE PRECISON CONTENTS OF MPAC TO DO
 0697  9UBLE PRECISION.
R0698            3.  DOTSUB     TAKE THE DOT PRODUCT OF THE VECTOR IN MPAC AND T
 0699  9HE VECTOR WHOSE ADDRESS IS IN ADDRWD
R0700                           AND LEAVE THE TRIPLE PRECISION RESULT IN MPAC.
R0701            4.  POLY       USING THE CONTENTS OF MPAC AS A DP ARGUMENT, EVA
 0702  9LUATE THE POLYNOMIAL WHOSE DEGREE AND
R0703  4                        COEFFICIENTS IMMEDIATELY FOLLOW THE TC POLY INST
 0704  9RUCTION (SEE ROUTINE FOR DETAILS.)
 0705   DMP      INDEX  Q               BASIC SUBROUTINE FOR USE BY PINBALL, ETC
 0706            CAF    0               ADRES OF ARGUMENT FOLLOWS  TC DMP  .
 0707            INCR   Q
 0708  2 -1      TS     ADDRWD          (PROLOGUE FOR SETTING ADDRWD.)
 0709   DMPSUB   INDEX  ADDRWD          GET MINOR PART OF OPERAND AT C(ADDRWD).
 0710            CA     1
 0711            TS     MPAC +2         THIS WORKS FOR SQUARING MPAC AS WELL.
 0712            CAF    ZERO            SET MPAC +1 TO ZERO SO WE CAN ACCUMULATE
 0713            XCH    MPAC +1         THE PARTIAL PRODUCTS WITH DAS
 0714            TS     MPTEMP          INSTRUCTIONS.
 0715            EXTEND
 0716  2         MP     MPAC +2         MINOR OF MPAC X MINOR OF C(ADDRWD).
 0717            XCH    MPAC +2         DISCARD MINOR PART OF ABOVE RESULT AND
 0718            EXTEND                 FORM MAJOR OF MPAC X MINOR OF C(ADDRWD).
 0719            MP     MPAC
 0720  2         DAS    MPAC +1         GUARANTEED NO OVERFLOW.
 0721            INDEX  ADDRWD          GET MAJOR PART OF ARGUMENT AT C(ADDRWD).
 0722            CA     0
 0723            XCH    MPTEMP          SAVE AND BRING OUT MINOR OF MPAC.
 0724            EXTEND
 0725            MP     MPTEMP          MAJOR OF C(ADDRWD) X MINOR OF MPAC.
 0726  2         DAS    MPAC +1         ACCUMULATE, SETTING A TO NET OVERFLOW.
 0727            XCH    MPAC            SETTING MPAC TO 0 OR +-1.
 0728            EXTEND
 0729            MP     MPTEMP          MAJOR OF MPAC X MAJOR OF C(ADDRWD).
 0730            DAS    MPAC            GUARANTEED NO OVERFLOW.
 0731            TC     Q               49 MCT = .573 MS. INCLUDING RETURN.
P0732  2         ROUND MPAC TO DOUBLE PRECISION, SETTING OVFIND ON THE RARE EVEN
 0733  9T OF OVERFLOW.
 0734   ROUNDSUB CAF    ZERO            SET MPAC +2 = 0 FOR SCALARS AND CHANGE
 0735  2 +1      TS     MODE            MODE TO DP.
 0736   VROUND   XCH    MPAC +2         BUT WE NEEDNT TAKE THE TIME FOR VECTORS.
 0737            DOUBLE
 0738            TS     L
 0739  2         TC     Q
 0740            AD     MPAC +1         ADD ROUNDING BIT IF MPAC +2 WAS GREATER
 0741            TS     MPAC +1         THAN .5 IN MAGNITUDE.
 0742  2         TC     Q
 0743            AD     MPAC            PROPAGATE INTERFLOW.
 0744            TS     MPAC
 0745  2         TC     Q
 0746   SETOVF2  TS     OVFIND          (RARE).
 0747            TC     Q
P0748            THE DOT PRODUCT SUBROUTINE USUALLY FORMS THE DOT PRODUCT OF THE
 0749  9 VECTOR IN MPAC WITH A STANDARD SIX
R0750   REGISTER VECTOR WHOSE ADDRESS IS IN ADDRWD. IN THIS CASE C(DOTINC) ARE S
 0751  9ET TO 2. VXM, HOWEVER, SETS C(DOTINC) TO
R0752  46 SO THAT DOTSUB DOTS MPAC WITH A COLUMN VECTOR OF THE MATRIX IN QUESTIO
 0753  9N IN THIS CASE.
 0754   PREDOT   CAF    TWO             PROLOGUE TO SET DOTINC TO 2.
 0755  2         TS     DOTINC
 0756   DOTSUB   EXTEND
 0757            QXCH   DOTRET          SAVE RETURN.
 0758            TC     DMPSUB          DOT X COMPONENTS.
 0759            DXCH   MPAC +3         POSITION Y COMPONENT OF MPAC FOR
 0760            DXCH   MPAC            MULTIPLICATION WHILE SAVING RESULT IN
 0761            DXCH   BUF             THREE WORD BUFFER, BUF.
 0762            CA     MPAC +2
 0763  2         TS     BUF +2
 0764            CA     DOTINC          ADVANCE ADDRWD TO Y COMPONENT OF
 0765            ADS    ADDRWD          OTHER ARGUMENT.
 0766            TC     DMPSUB
 0767            DXCH   MPAC +1         ACCUMULATE PARTIAL PRODUCTS.
 0768            DAS    BUF +1
 0769            AD     MPAC
 0770            AD     BUF
 0771            TS     BUF
 0772            TCF    +2
 0773  2         TS     OVFIND          IF OVERFLOW OCCURS.
 0774            DXCH   MPAC +5         MULTIPLY Z COMPONENTS.
 0775            DXCH   MPAC
 0776            CA     DOTINC
 0777            ADS    ADDRWD
 0778            TC     DMPSUB
 0779   ENDDOT   DXCH   BUF +1          LEAVE FINAL ACCUMULATION IN MPAC.
 0780            DAS    MPAC +1
 0781            AD     MPAC
 0782            AD     BUF
 0783            TS     MPAC
 0784  2         TC     DOTRET
 0785            TS     OVFIND          ON OVERFLOW HERE.
 0786            TC     DOTRET
P0787  2DOUBLE PRECISION POLYNOMIAL EVALUATOR
R0788                                      N        N-1
R0789            THIS ROUTINE EVALUATES A X  + A   X    + ... + A X + A  LEAVING
 0790  9 THE DP RESULT IN MPAC ON EXIT.
R0791  2                                 N      N-1              1     0
R0792  2THE ROUTINE HAS TWO ENTRIES
R0793            1. ENTRY THRU POWRSERS. THE COEFFICIENTS MAY BE EITHER IN FIXED
 0794  9 OR ERASABLE, THE CALL IS BY
R0795  2            TC POWRSERS, AND THE RETURN IS TO LOC(TC POWRSERS)+1. THE EN
 0796  9TERING DATA MUST BE AS FOLLOWS
A0797   A        SP     LOC-3           ADDRESS FOR REFERENCING COEF TABLE
A0798   L        SP     N-1             N IS THE DEGREE OF THE POWER SERIES
A0799  2MPAC     DP     X               ARGUMENT
A0800   LOC-2N   DP     A(0)
A0801            ...
A0802  2LOC      DP     A(N)
R0803  2         2. ENTRY THRU POLY. THE CALL TO POLY AND THE ENTERING DATA MUST
 0804  9 BE AS FOLLOWS
A0805  2MPAC     DP     X               ARGUMENT
A0806   LOC      TC     POLY
A0807   LOC+1    SP     N-1
A0808   LOC+2    DP     A(0)
A0809            ...
A0810  2LOC+2N+2 DP     A(N)            RETURN IS TO LOC+2N+4
 0811   POWRSERS EXTEND
 0812            QXCH   POLYRET         RETURN ADDRESS
 0813            TS     POLISH          POWER SERIES ADDRESS
 0814            LXCH   POLYCNT         N-1 TO COUNTER
 0815  2         TCF    POLYCOM         SKIP SET UP BY POLY
 0816   POLY     INDEX  Q
 0817            CAF    0
 0818            TS     POLYCNT         N-1 TO COUNTER
 0819            DOUBLE
 0820            AD     Q
 0821            TS     POLISH          L(A(N))-3 TO POLISH
 0822            AD     FIVE
 0823  2         TS     POLYRET         STORE RETURN ADDRESS
 0824   POLYCOM  CAF    LVBUF           INCOMING X WILL BE MOVED TO VBUF, SO
 0825  2         TS     ADDRWD          SET ADDRWD SO DMPSUB WILL MPY BY VBUF.
 0826            EXTEND
 0827            INDEX  POLISH
 0828            DCA    3
 0829            DXCH   MPAC            LOAD A(N) INTO MPAC,
 0830            DXCH   VBUF            SAVING X IN VBUF
 0831  2         TCF    POLY2
 0832   POLYLOOP TS     POLYCNT         SAVE DECREMENTED LOOP COUNTER
 0833            CS     TWO
 0834  2         ADS    POLISH          REGRESS COEFFICIENT POINTER
 0835   POLY2    TC     DMPSUB          MULTIPLY BY X
 0836            EXTEND
 0837            INDEX  POLISH
 0838            DCA    1               ADD IN NEXT COEFFICIENT
 0839  2         DAS    MPAC            USERS RESPONSIBILITY TO ASSURE NO OVFLOW
 0840            CCS    POLYCNT
 0841            TCF    POLYLOOP
 0842            TC     POLYRET         RETURN CALLER
P0843  2         MISCELLANEOUS MULTI-PRECISION ROUTINES REQUIRED IN FIXED-FIXED
 0844  9BUT NOT USED BY THE INTERPRETER.
 0845   TPAGREE  EXTEND                 FORCE SIGN AGREEMENT AMONG THE TRIPLE-
 0846            QXCH   BUF             PRECISION CONTENTS OF MPAC, RETURNING
 0847            TC     BRANCH          WITH THE SIGNUM OF THE INPUT IN A.
 0848            TCF    ARG+
 0849  2         TCF    ARGZERO
 0850            CS     POSMAX          IF NEGATIVE.
 0851  2         TCF    +2
 0852   ARG+     CAF    POSMAX
 0853    +2      TS     BUF +1
 0854            EXTEND
 0855            AUG    A               FORMS +-1.0.
 0856            AD     MPAC +2
 0857            TS     MPAC +2
 0858            CAF    ZERO
 0859            AD     BUF +1
 0860            AD     MPAC +1
 0861            TS     MPAC +1
 0862            CAF    ZERO
 0863            AD     BUF +1
 0864            AD     MPAC
 0865   ARGZERO2 TS     MPAC            ALWAYS SKIPPING UNLESS ARGZERO.
 0866            TS     MPAC +1
 0867  2         TC     BUF             RETURN.
 0868   ARGZERO  TS     MPAC +2         SET ALL THREE MPAC REGISTERS TO ZERO.
 0869  2         TCF    ARGZERO2
R0870  2         SHORTMP MULTIPLIES THE TP CONTENTS OF MPAC BY THE SINGLE PRECIS
 0871  9ION NUMBER ARRIVING IN A.
 0872   SHORTMP  TS     MPTEMP
 0873            EXTEND
 0874            MP     MPAC +2
 0875            TS     MPAC +2
 0876            CAF    ZERO            SO SUBSEQUENT DAS WILL WORK.
 0877            XCH    MPAC +1
 0878            EXTEND
 0879            MP     MPTEMP
 0880            DAS    MPAC +1
 0881            XCH    MPAC            SETTING MPAC TO 0.
 0882            EXTEND
 0883            MP     MPTEMP
 0884            DAS    MPAC
 0885            TC     Q
P0886  2MISCELLANEOUS VECTOR OPERATIONS. INCLUDED HERE ARE THE FOLLOWING:
R0887            1.  DOT                DP VECTOR DOT PRODUCT.
R0888            2.  VXV                DP VECTOR CROSS PRODUCT.
R0889            3.  VXSC               DP VECTOR TIMES SCALAR.
R0890            4.  V/SC               DP VECTOR DIVIDED BY SCALAR.
R0891            5.  VPROJ              DP VECTOR PROJECTION. ( (MPAC.X)MPAC ).
R0892            6.  VXM                DP VECTOR POST-MULTIPLIED BY MATRIX.
R0893  4         7.  MXV                DP VECTOR PRE-MULTIPLIED BY MATRIX.
 0894   DOT      TC     PREDOT          DO THE DOT PRODUCT AND EXIT, CHANGING
 0895            CAF    ZERO            THE MODE TO DP SCALAR.
 0896  4         TCF    NEWMODE
 0897   MXV      CAF    TWO             SET UP MATINC AND DOTINC FOR ROW
 0898            TS     MATINC          VECTORS.
 0899  2         TCF    VXM/MXV         GO TO COMMON PORTION.
 0900   VXM      CS     TEN             SET MATINC AND DOTINC TO REFER TO MATRIX
 0901            TS     MATINC          AS THREE COLUMN VECTORS.
 0902            CAF    SIX
P0903  2         COMMON PORTION OF MXV AND VXM.
 0904   VXM/MXV  TS     DOTINC
 0905  2         TC     MPACVBUF        SAVE VECTOR IN MPAC FOR FURTHER USE.
 0906            TC     DOTSUB          GO DOT TO GET X COMPONENT OF ANSWER.
 0907            EXTEND
 0908            DCA    VBUF            MOVE MPAC VECTOR BACK INTO MPAC, SAVING
 0909            DXCH   MPAC            NEW X COMPONENT IN BUF2.
 0910            DXCH   BUF2
 0911            EXTEND
 0912            DCA    VBUF +2
 0913            DXCH   MPAC +3
 0914            EXTEND
 0915            DCA    VBUF +4
 0916            DXCH   MPAC +5
 0917            CA     MATINC          INITIALIZE ADDRWD FOR NEXT DOT PRODUCT.
 0918  2         ADS    ADDRWD          FORMS BASE ADDRESS OF NEXT COLUMN(ROW).
 0919            TC     DOTSUB
 0920            DXCH   VBUF            MOVE GIVEN VECTOR BACK TO MPAC, SAVING Y
 0921            DXCH   MPAC            COMPONENT OF ANSWER IN VBUF +2.
 0922            DXCH   VBUF +2
 0923            DXCH   MPAC +3
 0924            DXCH   VBUF +4
 0925            DXCH   MPAC +5
 0926            CA     MATINC          FORM ADDRESS OF LAST COLUMN OR ROW.
 0927  2         ADS    ADDRWD
 0928            TC     DOTSUB
 0929            DXCH   BUF2            ANSWER NOW COMPLETE. PUT COMPONENTS INTO
 0930            DXCH   MPAC            PROPER MPAC REGISTERS.
 0931            DXCH   MPAC +5
 0932            DXCH   VBUF +2
 0933            DXCH   MPAC +3
 0934            TCF    DANZIG          EXIT.
P0935  2         VXSC - VECTOR TIMES SCALAR.
 0936   VXSC     CCS    MODE            TEST PRESENT MODE.
 0937            TCF    DVXSC           SEPARATE ROUTINE WHEN SCALAR IS IN MPAC.
 0938  2         TCF    DVXSC
 0939   VVXSC    TC     DMPSUB          COMPUTE X COMPONENT
 0940            TC     VROUND          AND ROUND IT.
 0941            DXCH   MPAC +3         PUT Y COMPONENT INTO MPAC SAVING MPAC IN
 0942            DXCH   MPAC            MPAC +3.
 0943  2         DXCH   MPAC +3
 0944            TC     DMPSUB          DO SAME FOR Y AND Z COMPONENTS.
 0945            TC     VROUND
 0946            DXCH   MPAC +5
 0947            DXCH   MPAC
 0948  2         DXCH   MPAC +5
 0949            TC     DMPSUB
 0950            TC     VROUND
 0951   VROTATEX DXCH   MPAC            EXIT USED TO RESTORE MPAC AFTER THIS
 0952            DXCH   MPAC +5         TYPE OF ROTATION. CALLED BY VECTOR SHIFT
 0953            DXCH   MPAC +3         RIGHT, V/SC, ETC.
 0954            DXCH   MPAC
 0955            TCF    DANZIG
P0956  2         DP VECTOR PROJECTION ROUTINE.
 0957   VPROJ    TC     PREDOT          (MPAC.X)MPAC IS COMPUTED AND LEFT IN
 0958            CS     FOUR            MPAC. DO DOT AND FALL INTO DVXSC.
 0959  2         ADS    ADDRWD
R0960  2         VXSC WHEN SCALAR ARRIVES IN MPAC AND VECTOR IS AT X.
 0961   DVXSC    EXTEND                 SAVE SCALAR IN MPAC +3 AND GET X
 0962            DCA    MPAC            COMPONENT OF ANSWER.
 0963            DXCH   MPAC +3
 0964            TC     DMPSUB
 0965  2         TC     VROUND
 0966            CAF    TWO             ADVANCE ADDRWD TO Y COMPONENT OF X.
 0967            ADS    ADDRWD
 0968            EXTEND
 0969            DCA    MPAC +3         PUT SCALAR BACK INTO MPAC AND SAVE
 0970            DXCH   MPAC            X RESULT IN MPAC +5.
 0971            DXCH   MPAC +5
 0972            TC     DMPSUB
 0973  2         TC     VROUND
 0974            CAF    TWO
 0975            ADS    ADDRWD          TO Z COMPONENT.
 0976            DXCH   MPAC +3         BRING SCALAR BACK, PUTTING Y RESULT IN
 0977            DXCH   MPAC            THE PROPER PLACE.
 0978            DXCH   MPAC +3
 0979            TC     DMPSUB
 0980  2         TC     VROUND
 0981            DXCH   MPAC            PUT Z COMPONENT IN PROPER PLACE, ALSO
 0982            DXCH   MPAC +5         POSITIONING X.
 0983  2         DXCH   MPAC
 0984            CS     ONE             MODE HAS CHANGED TO VECTOR.
 0985            TCF    NEWMODE
P0986            THE VECTOR CROSS PRODUCT ROUTINE CALCULATES (X M -X M ,X M -X M
 0987  9 ,X M -X M ) WHERE M IS THE VECTOR IN
R0988                                                          3 2  2 3  1 3  3
 0989  91  2 1  1 2
R0990  4MPAC AND X THE VECTOR AT THE GIVEN ADDRESS.
 0991   VXV      EXTEND
 0992            DCA    MPAC +5         FORM UP M3X1, LEAVING M1 IN VBUF.
 0993            DXCH   MPAC
 0994            DXCH   VBUF
 0995  2         TC     DMPSUB          BY X1.
 0996            EXTEND
 0997            DCS    MPAC +3         CALCULATE -X1M2, SAVING X1M3 IN VBUF +2.
 0998            DXCH   MPAC
 0999            DXCH   VBUF +2
 1000  2         TC     DMPSUB
 1001            CAF    TWO             ADVANCE ADDRWD TO X2.
 1002            ADS    ADDRWD
 1003            EXTEND
 1004            DCS    MPAC +5         PREPARE TO GET -X2M3, SAVING -X1M2 IN
 1005            DXCH   MPAC            MPAC +5.
 1006            DXCH   MPAC +5
 1007  2         TC     DMPSUB
 1008            EXTEND
 1009            DCA    VBUF            GET X2M1, SAVING -X2M3 IN VBUF +4.
 1010            DXCH   MPAC
 1011            DXCH   VBUF +4
 1012  2         TC     DMPSUB
 1013            CAF    TWO             ADVANCE ADDRWD TO X3.
 1014            ADS    ADDRWD
 1015            EXTEND
 1016            DCS    VBUF            GET -X3M1, ADDING X2M1 TO MPAC +5 TO
 1017            DXCH   MPAC            COMPLETE THE Z COMPONENT OF THE ANSWER.
 1018  2         DAS    MPAC +5
 1019            EXTEND
 1020            BZF    +2
 1021  8         TC     OVERFLOW
 1022            TC     DMPSUB
 1023            DXCH   VBUF +2         MOVE X1M3 TO MPAC +3 SETTING UP FOR X3M2
 1024            DXCH   MPAC +3         AND ADD -X3M1 TO MPAC +3 TO COMPLETE THE
 1025            DXCH   MPAC            Y COMPONENT OF THE RESULT.
 1026  2         DAS    MPAC +3
 1027            EXTEND
 1028            BZF    +2
 1029  2         TC     OVERFLOW
 1030            TC     DMPSUB
 1031            DXCH   VBUF +4         GO ADD -X2M3 TO X3M2 TO COMPLETE THE X
 1032  2         TCF    ENDVXV          COMPONENT (TAIL END OF DAD).
R1033  2         THE MPACVBUF SUBROUTINE SAVES THE VECTOR IN MPAC IN VBUF WITHOU
 1034  9T CLOBBERING MPAC.
 1035   MPACVBUF EXTEND                 CALLED BY MXV, VXM, AND UNIT.
 1036            DCA    MPAC
 1037            DXCH   VBUF
 1038            EXTEND
 1039            DCA    MPAC +3
 1040            DXCH   VBUF +2
 1041            EXTEND
 1042            DCA    MPAC +5
 1043            DXCH   VBUF +4
 1044            TC     Q               RETURN TO CALLER.
P1045  2         INTERPRETIVE INSTRUCTIONS WHOSE EXECUTION CONSISTS OF PRINCIPAL
 1046  9LY CALLING SUBROUTINES.
 1047   DMP1     TC     DMPSUB          DMP INSTRUCTION.
 1048  2         TCF    DANZIG
 1049   DMPR     TC     DMPSUB
 1050            TC     ROUNDSUB +1     (C(A) = +0).
 1051  2         TCF    DANZIG
 1052   DDV      EXTEND
 1053            INDEX  ADDRWD          MOVE DIVIDEND INTO BUF.
 1054            DCA    0
 1055  2         TCF    BDDV +4
 1056   BDDV     EXTEND                 MOVE DIVISOR INTO MPAC SAVING MPAC, THE
 1057            INDEX  ADDRWD          DIVIDEND, IN BUF.
 1058            DCA    0
 1059            DXCH   MPAC
 1060    +4      DXCH   BUF
 1061            CAF    ZERO            DIVIDE ROUTINES IN BANK 0.
 1062            TS     FBANK
 1063  2         TCF    DDV/BDDV
 1064   SETPD    CA     ADDRWD          ANYWHERE IN ERASABLE IN GENERAL, BUT
 1065            TS     PUSHLOC         ALMOST ALWAYS IN THE WORK AREA.
 1066  2         TCF    NOIBNKSW        NO FBANK SWITCH REQUIRED.
 1067   TSLC     CAF    ZERO            SHIFTING ROUTINES LOCATED IN BANK 00.
 1068            TS     FBANK
 1069  2         TCF    TSLC2
 1070   GSHIFT   CAF    LOW7            USED AS MASK AT GENSHIFT. THIS PROCESSES
 1071            TS     FBANK           ANY SHIFT INSTRUCTION (EXCEPT TSLC) WITH
 1072            TCF    GENSHIFT        AN ADDRESS (ROUTINES IN BANK 0).
P1073            THE FOLLOWING IS THE PROLOGUE TO V/SC. IF THE PRESENT MODE IS V
 1074  9ECTOR, IT SAVES THE SCALAR AT X IN BUF
R1075   AND CALLS THE V/SC ROUTINE IN BANK 0. IF THE PRESENT MODE IS SCALAR, IT
 1076  9MOVES THE VECTOR AT X INTO MPAC, SAVING
R1077  4THE SCALAR IN MPAC IN BUF BEFORE CALLING THE V/SC ROUTINE IN BANK 0.
 1078   V/SC     CCS    MODE
 1079            TCF    DV/SC           MOVE VECTOR INTO MPAC.
 1080  2         TCF    DV/SC
 1081   VV/SC    EXTEND
 1082            INDEX  ADDRWD
 1083            DCA    0
 1084   V/SC1    DXCH   BUF             IN BOTH CASES, VECTOR IS NOW IN MPAC AND
 1085            CAF    ZERO            SCALAR IN BUF.
 1086            TS     FBANK
 1087  2         TCF    V/SC2
 1088   DV/SC    EXTEND
 1089            INDEX  ADDRWD
 1090            DCA    2
 1091            DXCH   MPAC +3
 1092            EXTEND
 1093            INDEX  ADDRWD
 1094            DCA    4
 1095  2         DXCH   MPAC +5
 1096            CS     ONE             CHANGE MODE TO VECTOR.
 1097  2         TS     MODE
 1098            EXTEND
 1099            INDEX  ADDRWD
 1100            DCA    0
 1101            DXCH   MPAC
 1102            TCF    V/SC1           FINISH PROLOGUE AT COMMON SECTION.
P1103  2         SIGN AND COMPLEMENT INSTRUCTIONS.
 1104   SIGN     INDEX  ADDRWD          CALL COMP INSTRUCTION IF WORD AT X IS
 1105            CCS    0               NEGATIVE NON-ZERO.
 1106            TCF    NOIBNKSW        NO FBANK SWITCH REQUIRED.
 1107            TCF    +2
 1108  2         TCF    COMP            DO THE COMPLEMENT.
 1109            INDEX  ADDRWD
 1110            CCS    1
 1111            TCF    NOIBNKSW        NO FBANK SWITCH REQUIRED.
 1112            TCF    NOIBNKSW        NO FBANK SWITCH REQUIRED.
 1113            TCF    COMP
 1114  4         TCF    NOIBNKSW        NO FBANK SWITCH REQUIRED.
 1115   COMP     EXTEND                 COMPLEMENT DP MPAC IN EVERY CASE.
 1116            DCS    MPAC
 1117  2         DXCH   MPAC
 1118            CCS    MODE            EITHER COMPLEMENT MPAC +3 OR THE REST OF
 1119            TCF    DCOMP           THE VECTOR ACCUMULATOR.
 1120  2         TCF    DCOMP
 1121            EXTEND                 VECTOR COMPLEMENT.
 1122            DCS    MPAC +3
 1123            DXCH   MPAC +3
 1124            EXTEND
 1125            DCS    MPAC +5
 1126            DXCH   MPAC +5
 1127  2         TCF    DANZIG
 1128   DCOMP    CS     MPAC +2
 1129            TS     MPAC +2
 1130            TCF    DANZIG
P1131  2         CONSTANTS REQUIRED IN FIXED-FIXED.
 1132   DPOSMAX  OCT    37777
 1133   POSMAX   OCT    37777
 1134   LIMITS   EQUALS POSMAX +1
 1135  2NEG1/2   OCT    -20000          MUST BE TWO LOCATIONS AHEAD OF POS1/2.
 1136   BIT15    OCT    40000           BIT TABLE FOLLOWS.
 1137   BIT14    OCT    20000
 1138   BIT13    OCT    10000
 1139   BIT12    OCT    04000
 1140   BIT11    OCT    02000
 1141   BIT10    OCT    01000
 1142   BIT9     OCT    00400
 1143   BIT8     OCT    00200
 1144   BIT7     OCT    00100
 1145   BIT6     OCT    00040
 1146   BIT5     OCT    00020
 1147   BIT4     OCT    00010
 1148   BIT3     OCT    00004
 1149   BIT2     OCT    00002
 1150  2BIT1     OCT    00001
 1151   NEGMAX   EQUALS BIT15
 1152   HALF     EQUALS BIT14
 1153   POS1/2   EQUALS HALF
 1154   QUARTER  EQUALS BIT13
 1155   2K       EQUALS BIT11
 1156   ELEVEN   DEC    11
 1157   NOUTCON  =      ELEVEN
 1158   TEN      DEC    10
 1159   NINE     DEC    9
 1160   EIGHT    EQUALS BIT4
 1161   SEVEN    OCT    7
 1162   SIX      EQUALS REVCNT
 1163   FIVE     OCT    5
 1164   FOUR     EQUALS BIT3
 1165   THREE    EQUALS NO.WDS +1
 1166   TWO      EQUALS BIT2
 1167   ONE      EQUALS BIT1
 1168   ZERO     OCT    0
 1169   NEG0     OCT    77777
 1170  2NEGONE   DEC    -1
 1171   NEG1     =      NEGONE
 1172   MINUS1   EQUALS NEG1
 1173   NEG2     OCT    77775
 1174   NEG3     DEC    -3
 1175   LOW9     OCT    777
 1176   LOW4     OCT    17
 1177   LOW3     EQUALS SEVEN
 1178  2LOW2     EQUALS THREE
 1179   CALLCODE OCT    00030
 1180   DLOADCOD OCT    40014
 1181   VLOADCOD EQUALS BIT15
 1182   DLOAD*   OCT    40015
 1183   VLOAD*   EQUALS OCT40001
 1184   LVBUF    ADRES  VBUF
 1185   BIT13-14 OCTAL  30000
 1186   ENDINTF  EQUALS
P1187  2SHIFTING AND ROUNDING PACKAGE.
R1188  2         THE FOLLOWING SHORT SHIFT CODES REQUIRE NO ADDRESS WORD:
R1189            1.  SR1 TO SR4         SCALAR SHIFT RIGHT.
R1190            2.  SR1R TO SR4R       SCALAR SHIFT RIGHT AND ROUND.
R1191            3.  SL1 TO SL4         SCALAR SHIFT LEFT.
R1192  2         4.  SL1R TO SL4R       SCALAR SHIFT LEFT AND ROUND.
R1193            5.  VSR1 TO VSR8       VECTOR SHIFT RIGHT (ALWAYS ROUNDS).
R1194  2         6.  VSL1 TO VSL8       VECTOR SHIFT LEFT (NEVER ROUNDS).
R1195  2         THE FOLLOWING CODES REQUIRE AN ADDRESS WHICH MAY BE INDEXED:*
R1196            1.  SR                 SCALAR SHIFT RIGHT.
R1197            2.  SRR                SCALAR SHIFT RIGHT AND ROUND.
R1198            3.  SL                 SCALAR SHIFT LEFT.
R1199  2         4.  SLR                SCALAR SHIFT LEFT AND ROUND.
R1200            5.  VSR                VECTOR SHIFT RIGHT.
R1201  2         6.  VSL                VECTOR SHIFT LEFT.
R1202   *  IF THE ADDRESS IS INDEXED, AND THE INDEX MODIFICATION RESULTS IN A NE
 1203  9GATIVE SHIFT COUNT, A SHIFT OF THE
R1204  4ABSOLUTE VALUE OF THE COUNT IS DONE IN THE OPPOSITE DIRECTION.
 1205  2         SETLOC 10000           BANK 0 PORTION FOLLOWS.
 1206   SHORTT   CAF    SIX             SCALAR SHORT SHIFTS COME HERE. THE SHIFT
 1207            MASK   CYR             COUNT-1 IS NOW IN BITS 2-3 OF CYR. THE
 1208  2         TS     SR              ROUNDING BIT IS IN BIT1 AT THIS POINT.
 1209            CCS    CYR             SEE IF RIGHT OR LEFT SHIFT DESIRED.
 1210  2         TCF    TSSL            SHIFT LEFT.
 1211  2SRDDV    DEC    20              MPTEMP SETTING FOR SR BEFORE DDV.
 1212   TSSR     INDEX  SR              GET SHIFTING BIT.
 1213            CAF    BIT14
 1214  2         TS     MPTEMP
 1215            CCS    CYR             SEE IF A ROUND IS DESIRED.
 1216   RIGHTR   TC     MPACSRND        YES - SHIFT RIGHT AND ROUND.
 1217            TCF    NEWMODE         SET MODE TO DP (C(A) = 0).
 1218   MPACSHR  CA     MPTEMP          DO A TRIPLE PRECISION SHIFT RIGHT.
 1219            EXTEND
 1220            MP     MPAC +2
 1221    +3      TS     MPAC +2         (EXIT FROM SQRT AND ABVAL).
 1222            CA     MPTEMP
 1223            EXTEND
 1224            MP     MPAC            SHIFT MAJOR PART INTO A,L AND PLACE IN
 1225            DXCH   MPAC            MPAC,+1.
 1226            CA     MPTEMP
 1227            EXTEND
 1228            MP     L               ORIGINAL C(MPAC +1).
 1229            DAS    MPAC +1         GUARANTEED NO OVERFLOW.
 1230  2         TCF    DANZIG
R1231  2         MPAC SHIFT RIGHT AND ROUND SUBROUTINES.
 1232   MPACSRND CA     MPAC +2         WE HAVE TO DO ALL THREE MULTIPLIES SINCE
 1233            EXTEND                 MPAC +1 AND MPAC +2 MIGHT HAVE SIGN
 1234            MP     MPTEMP          DISAGREEMENT WITH A SHIFT RIGHT OF 1.
 1235            XCH    MPAC +1
 1236            EXTEND
 1237            MP     MPTEMP
 1238            XCH    MPAC +1         TRIAL MINOR PART.
 1239  2         AD     L
 1240   VSHR2    DOUBLE                 (FINISH VECTOR COMPONENT SHIFT RIGHT
 1241            TS     MPAC +2         AND ROUND.
 1242            TCF    +2
 1243  2         ADS    MPAC +1         GUARANTEED NO OVERFLOW.
 1244            CAF    ZERO
 1245            TS     MPAC +2
 1246            XCH    MPAC            SETTING TO ZERO SO FOLLOWING DAS WORKS.
 1247            EXTEND
 1248            MP     MPTEMP
 1249            DAS    MPAC            AGAIN NO OVERFLOW.
 1250  2         TC     Q
 1251   VSHRRND  CA     MPTEMP          ENTRY TO SHIFT RIGHT AND ROUND MPAC WHEN
 1252            EXTEND                 MPAC CONTAINS A VECTOR COMPONENT.
 1253            MP     MPAC +1
 1254            TS     MPAC +1
 1255            XCH    L
 1256            TCF    VSHR2           GO ADD ONE IF NECESSARY AND FINISH.
P1257  2         ROUTINE FOR SHORT SCALAR SHIFT LEFT (AND MAYBE ROUND).
 1258   TSSL     CA     SR              GET SHIFT COUNT FOR SR.
 1259  2 +1      TS     MPTEMP
 1260    +2      EXTEND                 ENTRY HERE FROM SL FOR SCALARS.
 1261            DCA    MPAC +1         SHIFTING LEFT ONE PLACE AT A TIME IS
 1262            DAS    MPAC +1         FASTER THAN DOING THE WHOLE SHIFT WITH
 1263            AD     MPAC            MULTIPLIES ASSUMING THAT FREQUENCY OF
 1264            AD     MPAC            SHIFT COUNTS GOES DOWN RAPIDLY AS A
 1265            TS     MPAC            FUNCTION OF THEIR MAGNITUDE.
 1266            TCF    +2
 1267            TS     OVFIND          OVERFLOW. (LEAVES OVERFLOW-CORRECTED
A1268                                   RESULT ANYWAY).
 1269            CCS    MPTEMP          LOOP ON DECREMENTED SHIFT COUNT.
 1270  2         TCF    TSSL +1
 1271            CCS    CYR             SEE IF ROUND WANTED.
 1272   ROUND    TC     ROUNDSUB        YES - ROUND AND EXIT.
 1273            TCF    DANZIG          SL LEAVES A ZERO IN CYR FOR NO ROUND.
 1274            TCF    DANZIG          NO - EXIT IMMEDIATL
P1275  2VECTOR SHIFTING ROUTINES.
 1276   SHORTV   CAF    LOW3            SAVE 3 BIT SHIFT COUNT - 1 WITHOUT
 1277            MASK   CYR             EDITING CYR.
 1278            TS     MPTEMP
 1279            CCS    CYR             SEE IF LEFT OR RIGHT SHIFT.
 1280            TCF    VSSL            VECTOR SHIFT LEFT.
 1281  2OCT176   OCT    176             USED IN PROCESSED SHIFTS WITH - COUNT.
 1282   VSSR     INDEX  MPTEMP          (ENTRY FROM SR). PICK UP SHIFTING BIT.
 1283            CAF    BIT14           MPTEMP CONTAINS THE SHIFT COUNT - 1.
 1284            TS     MPTEMP
 1285  2         TC     VSHRRND         SHIFT X COMPONENT.
 1286            DXCH   MPAC            SWAP X AND Y COMPONENTS.
 1287            DXCH   MPAC +3
 1288            DXCH   MPAC
 1289  2         TC     VSHRRND         SHIFT Y COMPONENT.
 1290            DXCH   MPAC            SWAP Y AND Z COMPONENTS.
 1291            DXCH   MPAC +5
 1292            DXCH   MPAC
 1293  2         TC     VSHRRND         SHIFT Z COMPONENT.
 1294            TCF    VROTATEX        RESTORE COMPONENTS TO PROPER PLACES.
P1295  2VECTOR SHIFT LEFT - DONE ONE PLACE AT A TIME.
 1296  2 -1      TS     MPTEMP          SHIFTING LOOP.
 1297   VSSL     EXTEND
 1298            DCA    MPAC
 1299            DAS    MPAC
 1300            EXTEND
 1301            BZF    +2
 1302  2         TC     OVERFLOW
 1303            EXTEND
 1304            DCA    MPAC +3
 1305            DAS    MPAC +3
 1306            EXTEND
 1307            BZF    +2
 1308  2         TC     OVERFLOW
 1309            EXTEND
 1310            DCA    MPAC +5
 1311            DAS    MPAC +5
 1312            EXTEND
 1313            BZF    +2
 1314  2         TC     OVERFLOW
 1315            CCS    MPTEMP          LOOP ON DECREMENTED SHIFT COUNTER.
 1316            TCF    VSSL -1
 1317            TCF    DANZIG          EXIT.
P1318            TSLC - TRIPLE SHIFT LEFT AND COUNT. SHIFTS MPAC LEFT UNTIL GREA
 1319  9TER THAN .5 IN MAGNITUDE, LEAVING
R1320  2THE COMPLEMENT OF THE NUMBER OF SHIFTS REQUIRED IN X.
 1321   TSLC2    TS     MPTEMP          START BY ZEROING SHIFT COUNT (IN A NOW).
 1322            TC     BRANCH          EXIT WITH NO SHIFTING IF ARGUMENT ZERO.
 1323            TCF    +2
 1324  2         TCF    ENDTSLC         STORES ZERO SHIFT COUNT IN THIS CASE.
 1325            CA     MPAC            BEGIN NORMALIZATION LOOP.
 1326  2         TCF    TSLCTEST
 1327   TSLCLOOP INCR   MPTEMP          INCREMENT SHIFT COUNTER.
 1328            EXTEND
 1329            DCA    MPAC +1
 1330            DAS    MPAC +1
 1331            AD     MPAC
 1332            ADS    MPAC
 1333   TSLCTEST DOUBLE                 SEE IF (ANOTHER) SHIFT IS REQUIRED.
 1334            OVSK
 1335  2         TCF    TSLCLOOP        YES - INCREMENT COUNT AND SHIFT AGAIN.
 1336   ENDTSLC  CS     MPTEMP
 1337            TCF    STORE1          STORE SHIFT COUNT AND RETURN TO DANZIG.
P1338            THE FOLLOWING ROUTINES PROCESSES THE GENERAL SHIFT INSTRUCTIONS
 1339  9 SR, SRR, SL, AND SLR.
R1340  2THE GIVEN ADDRESS IS DECODED AS FOLLOWS:
R1341            BITS 1-7    SHIFT COUNT (SUBADDRESS) LESS THAN 125 DECIMAL.
R1342            BIT 8       PSEUDO SIGN BIT (DETECTS CHANGE IN SIGN IN INDEXED
 1343  9SHIFTS).
R1344            BIT 9       0 FOR LEFT SHIFT, AND 1 FOR RIGHT SHIFT.
R1345            BIT 10      1 FOR TERMINAL ROUND ON SCALAR SHIFTS, 0 OTHERWISE.
R1346  2         BITS 11-15  0.
R1347  4THE ABOVE ENCODING IS DONE BY THE YUL SYSTEM.
 1348   GENSHIFT MASK   ADDRWD          GET SHIFT COUNT, TESTING FOR ZERO.
 1349            CCS    A               (ARRIVES WITH C(A) = LOW7).
 1350  2         TCF    GENSHFT2        IF NON-ZERO, PROCEED WITH DECREMENTED CT
 1351            CAF    BIT10           ZERO SHIFT COUNT. NO SHIFTS NEEDED BUT
 1352            MASK   ADDRWD          WE MIGHT HAVE TO ROUND MPAC ON SLR AND
 1353            CCS    A               SRR (SCALAR ONLY).
 1354            TC     ROUNDSUB
 1355  2         TCF    DANZIG
 1356   GENSHFT2 TS     MPTEMP          DECREMENTED SHIFT COUNT TO MPTEMP.
 1357            CAF    BIT8            TEST MEANING OF LOW SEVEN BIT COUNT IN
 1358            EXTEND                 MPTEMP NOW.
 1359            MP     ADDRWD
 1360            MASK   LOW2            JUMPS ON SHIFT DIRECTION (BIT8) AND
 1361            INDEX  A
 1362            TCF    +1              ORIGINAL SHIFT DIRECTION (BIT 9).
 1363            TCF    RIGHT-          NEGATIVE SHIFT COUNT FOR SL OR SLR.
 1364            TCF    LEFT            SL OR SLR.
 1365            TCF    LEFT-           NEGATIVE SHIFT COUNT WITH SR OR SRR.
P1366  2         GENERAL SHIFT RIGHT.
 1367   RIGHT    CCS    MODE            SEE IF VECTOR OR SCALAR.
 1368            TCF    GENSCR
 1369  2         TCF    GENSCR
 1370            CA     MPTEMP          SEE IF SHIFT COUNT GREATER THAN 13D.
 1371   VRIGHT2  AD     NEG12
 1372            EXTEND
 1373  2         BZMF   VSSR            IF SO, BRANCH AND SHIFT IMMEDIATELY.
 1374            AD     NEGONE          IF NOT, REDUCE MPTEMP BY A TOTAL OF 14,
 1375            TS     MPTEMP          AND DO A SHIFT RIGHT AND ROUND BY 14.
 1376            CAF    ZERO            THE ROUND AT THIS STAGE MAY INTRODUCE A
 1377            TS     L               ONE BIT ERROR IN A SHIFT RIGHT 15D.
 1378            XCH    MPAC
 1379            XCH    MPAC +1
 1380            TC     SETROUND        X COMPONENT NOW SHIFTED, SO MAKE UP THE
 1381            DAS    MPAC            ROUNDING QUANTITY (0 IN A AND 0 OR +-1
A1382                                   IN L).
 1383            XCH    MPAC +3         REPEAT THE ABOVE PROCESS FOR Y AND Z.
 1384            XCH    MPAC +4
 1385            TC     SETROUND
 1386  2         DAS    MPAC +3         NO OVERFLOW ON THESE ADDS.
 1387            XCH    MPAC +5
 1388            XCH    MPAC +6
 1389            TC     SETROUND
 1390  2         DAS    MPAC +5
 1391            CCS    MPTEMP          SEE IF DONE, DOING FINAL DECREMENT.
 1392            TCF    VRIGHT2
 1393   TCSUBTR  TCF    SUBTR
 1394  2BIASLO   DEC    .2974 B-1       SQRT CONSTANT
 1395  4         TCF    DANZIG
 1396   SETROUND DOUBLE                 MAKES UP ROUNDING QUANTITY FROM ARRIVING
 1397            TS     MPAC +2         C(A). L IS ZERO INITIALLY.
 1398            CAF    ZERO
 1399            XCH    L
 1400            TC     Q               RETURN AND DO THE DAS, RESETTING L TO 0.
P1401  2         PROCESS SR AND SRR FOR SCALARS.
 1402   GENSCR   CA     MPTEMP          SEE IF THE ORIGINAL SHIFT COUNT WAS LESS
 1403    +1      AD     NEG12           THAN 14D.
 1404            EXTEND
 1405  2         BZMF   DOSSHFT         DO THE SHIFT IMMEDIATELY IF SO.
 1406    +4      AD     NEGONE          IF NOT, DECREMENT SHIFT COUNT BY 14D AND
 1407            TS     MPTEMP          SHIFT MPAC RIGHT 14 PLACES.
 1408            CAF    ZERO
 1409            XCH    MPAC
 1410            XCH    MPAC +1
 1411            TS     MPAC +2
 1412            CCS    MPTEMP          SEE IF FINISHED, DO FINAL DECREMENT.
 1413            TC     GENSCR +1
 1414   NEG12    DEC    -12
 1415   SLOPEHI  DEC    .5884           SQRT CONSTANT.
 1416            CAF    BIT10           FINISHED WITH SHIFT. SEE IF ROUND
 1417            MASK   ADDRWD          WANTED.
 1418            CCS    A
 1419            TC     ROUNDSUB
 1420  2         TCF    DANZIG          DO SO AND/OR EXIT.
 1421   DOSSHFT  INDEX  MPTEMP          PICK UP SHIFTING BIT.
 1422            CAF    BIT14
 1423            TS     MPTEMP
 1424            CAF    BIT10           SEE IF TERMINAL ROUND DESIRED.
 1425            MASK   ADDRWD
 1426            CCS    A
 1427            TCF    RIGHTR          YES.
 1428            TCF    MPACSHR         JUST SHIFT RIGHT.
P1429  2         PROCESS THE RIGHT- (SL(R) WITH A NEGATIVE COUNT), LEFT-, AND LE
 1430  9FT OPTIONS.
 1431   RIGHT-   CS     MPTEMP          GET ABSOLUTE VALUE - 1 OF SHIFT COUNT
 1432            AD     OCT176          UNDERSTANDING THAT BIT8 (PSEUDO-SIGN)
 1433            TS     MPTEMP          WAS 1 INITIALLY.
 1434  2         TCF    RIGHT           DO NORMAL SHIFT RIGHT.
 1435   LEFT-    CS     MPTEMP          SAME PROLOGUE TO LEFT FOR INDEXED RIGHT
 1436            AD     OCT176          SHIFTS WHOSE NET SHIFT COUNT IS NEGATIVE
 1437  2         TS     MPTEMP
 1438   LEFT     CCS    MODE            SINCE LEFT SHIFTING IS SONE ONE PLACE AT
 1439            TCF    GENSCL          A TIME, NO COMPARISON WITH 14 NEED BE
 1440            TCF    GENSCL          DONE. FOR SCALARS, SEE IF TERMINAL ROUND
 1441  2         TCF    VSSL            DESIRED. FOR VECTORS, SHIFT IMMEDIATELY.
 1442   GENSCL   CAF    BIT6            PUT ROUNDING BIT (BIT10 OF ADDRWD) INTO
 1443            EXTEND                 BIT 15 OF CYR WHERE THE ROUNDING BIT OF
 1444            MP     ADDRWD          A SHORT SHIFT LEFT WOULD BE.
 1445            TS     CYR
 1446            TCF    TSSL +2         DO THE SHIFT.
P1447            SCALAR DIVISION INSTRUCTIONS, DDV AND BDDV, ARE EXECUTED HERE.
 1448  9AT THIS POINT, THE DIVIDEND IS IN MPAC
R1449  2AND THE DIVISOR IN BUF.
 1450   DDV/BDDV CS     ONE             INITIALIZATION.
 1451            TS     DVSIGN          +-1 FOR POSITIVE QUOTIENT - -0 FOR NEG.
 1452            TS     DVNORMCT        DIVIDEND NORMALIZATION COUNT.
 1453  2         TS     MAXDVSW         NEAR-ONE DIVIDE FLAG.
 1454            CCS    BUF             FORCE BUF POSITIVE WITH THE MAJOR PART
 1455            TCF    BUF+            NON-ZERO.
 1456            TCF    +2
 1457  2         TCF    BUF-
 1458            XCH    BUF +1          SHIFT DIVIDEND AND DIVISOR LEFT 14.
 1459            XCH    BUF
 1460            XCH    MPAC +1
 1461            XCH    MPAC
 1462            EXTEND                 CHECK FOR OVERFLOW.
 1463            BZF    +2
 1464  2         TCF    DVOVF
 1465            CCS    BUF             TRY AGAIN ON FORMER MINOR PART.
 1466            TCF    BUF+
 1467            TCF    DVOVF           OVERFLOW ON ZERO DIVISOR.
 1468  2         TCF    BUF-
 1469   DVOVF    CAF    POSMAX          ON DIVISION OVERFLOW OF ANY SORT, SET
 1470            TS     MPAC            SET DP MPAC TO +-POSMAX.
 1471            TC     FINALDV +3
 1472            CAF    ONE             SET OVERFLOW INDICATOR AND EXIT.
 1473  2         TCF    SETOVF
 1474   BUF-     EXTEND                 IF BUF IS NEGATIVE, COMPLEMENT IT AND
 1475            DCS    BUF             MAINTAIN DVSIGN FOR FINAL QUOTIENT SIGN.
 1476            DXCH   BUF
 1477  2         INCR   DVSIGN          NOW -0.
 1478   BUF+     CCS    MPAC            FORCE MPAC POSITIVE, CHECKING FOR ZERO
 1479            TCF    MPAC+           DIVIDEND IN THE PROCESS.
 1480            TCF    +2
 1481            TCF    MPAC-
 1482            CCS    MPAC +1
 1483            TCF    MPAC+
 1484            TCF    DANZIG          EXIT IMMEDIATELY ON ZERO DIVIDEND.
 1485            TCF    MPAC-
 1486  2         TCF    DANZIG
 1487   MPAC-    EXTEND                 FORCE MPAC POSITIVE AS BUF IN BUF-.
 1488            DCS    MPAC
 1489            DXCH   MPAC
 1490  8         INCR   DVSIGN          NOW +1 OR -0.
 1491   MPAC+    CS     MPAC            CHECK FOR DIVISION OVERFLOW. IF THE
 1492            AD     NEGONE          MAJOR PART OF THE DIVIDEND IS LESS THAN
 1493            AD     BUF             THE MAJOR PART OF THE DIVISOR BY AT
 1494            CCS    A               LEAST TWO, WE CAN PROCEED IMMEDIATELY
 1495            TCF    DVNORM          WITHOUT NORMALIZATION PRODUCING A DVMAX.
 1496  2-1/2+2   OCT    60001           USED IN SQRTSUB.
 1497            TCF    +1              IF THE ABOVE DOES NOT HOLD, FORCE SIGN
 1498            CAF    HALF            AGREEMENT IN NUMERATOR AND DENOMINATOR
 1499            DOUBLE                 TO FACILITATE OVERFLOW AND NEAR-ONE
 1500            AD     MPAC +1         CHECKING.
 1501            TS     MPAC +1
 1502            CAF    ZERO
 1503            AD     POSMAX
 1504  2         ADS    MPAC
 1505            CAF    HALF            SAME FOR BUF.
 1506            DOUBLE
 1507            AD     BUF +1
 1508            TS     BUF +1
 1509            CAF    ZERO
 1510            AD     POSMAX
 1511  2         ADS    BUF
 1512            CS     MPAC            CHECK MAGNITUDE OF SIGN-CORRECTED
 1513            AD     BUF             OPERANDS.
 1514            CCS    A
 1515            TCF    DVNORM          DIVIDE OK - WILL NOT BECOME MAXDV CASE.
 1516   LBUF2    ADRES  BUF2
 1517  2         TCF    DVOVF           DIVISOR NOT LESS THAN DIVIDEND - OVF.
 1518            TS     MAXDVSW         IF THE MAJOR PARTS OF THE DIVIDEND AND
 1519            CS     MPAC +1         DIVISOR ARE EQUAL, A SPECIAL APPROXIMA-
 1520            AD     BUF +1          TION IS USED (PROVIDED THE DIVISION IS
 1521            EXTEND                 POSSIBLE, OF COURSE).
 1522            BZMF   DVOVF
 1523  8         TCF    DVNORM          IF NO OVERFLOW.
 1524   BUFNORM  EXTEND                 ADD -1 TO AUGMENT SHIFT COUNT AND SHIFT
 1525            AUG    DVNORMCT        LEFT ONE PLACE.
 1526            EXTEND
 1527            DCA    BUF
 1528  2         DAS    BUF
 1529   DVNORM   CA     BUF             SEE IF DIVISOR NORMALIZED YET.
 1530            DOUBLE
 1531            OVSK
 1532  2         TCF    BUFNORM         NO - SHIFT LEFT ONE AND TRY AGAIN.
 1533            DXCH   MPAC            CALL DIVIDEND NORMALIZATION SEQUENCE
 1534            INDEX  DVNORMCT        PRIOR TO DOING THE DIVIDE.
 1535  2         TC     MAXTEST
 1536            TS     MPAC +2         RETURNS WITH DIVISION DONE AND C(A) = 0.
 1537            TCF    DANZIG
P1538  2         THE FOLLOWING ARE PROLOGUES TO SHIFT THE DIVIDEND ARRIVING IN A
 1539  9 AND L BEFORE THE DIVIDE.
 1540    -21D    LXCH   SR              SPECIAL PROLOGUE FOR UNIT WHEN THE
 1541            EXTEND                 LENGTH OF THE ARGUMENT WAS NOT LESS THAN
 1542            MP     HALF            .5. IN THIS CASE, EACH COMPONENT MUST BE
 1543            XCH    L               SHIFTED RIGHT ONE TO PRODUCE A HALF-UNIT
 1544            AD     SR              VECTOR.
 1545            XCH    L
 1546  2         TCF    GENDDV +1       WITH DP DIVIDEND IN A,L.
 1547            DDOUBL                 PROLOGUE WHICH NORMALIZES THE DIVIDEND
 1548            DDOUBL                 WHEN IT IS KNOWN THAT NO DIVISION
 1549            DDOUBL                 OVERFLOW WILL OCCUR.
 1550            DDOUBL
 1551            DDOUBL
 1552            DDOUBL
 1553            DDOUBL
 1554            DDOUBL
 1555            DDOUBL
 1556            DDOUBL
 1557            DDOUBL
 1558            DDOUBL
 1559            DDOUBL
 1560  2         DXCH   MPAC
 1561   MAXTEST  CCS    MAXDVSW         0 IF MAJORS MIGHT BE =, -1 OTHERWISE.
 1562  2BIASHI   DEC    .4192 B-1       SQRT CONSTANTS
 1563            TCF    MAXDV           CHECK TO SEE IF THEY ARE NOW EQUAL.
P1564            THE FOLLOWING IS A GENERAL PURPOSE DOUBLE PRECISION DIVISION RO
 1565  9UTINE. IT DIVIDES MPAC BY BUF AND LEAVES
R1566  2THE RESULT IN MPAC. THE FOLLOWING CONDITIONS MUST BE SATISFIED:
R1567  2         1.  THE DIVISOR (BUF) MUST BE POSITIVE AND NOT LESS THAN .5.
R1568            2.  THE DIVIDEND (MPAC) MUST BE POSITIVE WITH THE MAJOR PART OF
 1569  9 MPAC STRICTLY LESS THAN THAT OF BUF
R1570  2(A SPECIAL APPROXIMATION, MAXDV, IS USED WHEN THE MAJOR PARTS ARE EQUAL)
 1571  9.
R1572            UNDERSTANDING THAT A/B = Q + S(R/B) WHERE S = 2(-14) AND Q AND
 1573  9R ARE QUOTIENT AND REMAINDER, RESPEC-
R1574   TIVELY, THE FOLLOWING APPROXIMATION IS OBTAINED BY MULTIPLYING ABOVE AND
 1575  9 BELOW BY C - SD AND NEGLECTING TERMS OF
R1576  2ORDER S-SQUARED (POSSIBLY INTRODUCING ERROR INTO THE LOW TWO BITS OF THE
 1577  9 RESULT). SIGN AGREEMENT IS UNNECESSARY.
R1578            A + SB .      (R - QD)
 1579  9    A + SB
R1580            ------ = Q + S(------) WHERE Q AND R ARE QUOTIENT AND REMAINDER
 1581  9 OF ------ RESPECTIVELY.
R1582  4         C + SD        (  C   )
 1583  9      C
 1584   GENDDV   DXCH   MPAC            WE NEED A AND B ONLY FOR FIRST DV.
 1585    +1      EXTEND                 (SPECIAL UNIT PROLOGUE ENTERS HERE).
 1586            DV     BUF             A NOW CONTAINS Q AND L, R.
 1587  2         DXCH   MPAC
 1588            CS     MPAC            FORM DIVIDEND FOR MINOR PART OF RESULT.
 1589            EXTEND
 1590            MP     BUF +1
 1591            AD     MPAC +1         OVERFLOW AT THIS POINT IS POSITIVE SINCE
 1592            OVSK                   R IS POSITIVE IN EVERY CASE.
 1593  2         TCF    +5
 1594            EXTEND                 OVERFLOW CAN BE REMOVED BY SUBTRACTING C
 1595            SU     BUF             (BUF) ONCE SINCE R IS ALWAYS LESS THAN C
 1596            INCR   MPAC            IN THIS CASE. INCR COMPENSATES SUBTRACT.
 1597  2         TCF    +DOWN           (SINCE C(A) IS STILL POSITIVE).
 1598    +5      EXTEND                 C(A) CAN BE MADE LESS THAN C IN MAGNI-
 1599            BZMF   -UP             TUDE BY DIMINISHING IT BY C (SINCE C IS
A1600  8                                NOT LESS THAN .5) UNLESS C(A) = 0.
 1601   +DOWN    EXTEND
 1602            SU     BUF             IF POSITIVE, REDUCE ONLY IF NECESSARY
 1603            EXTEND                 SINCE THE COMPENSATING INCR MIGHT CAUSE
 1604            BZF    +3              OVERFLOW.
 1605            EXTEND                 DONT SUBTRACT UNLESS RESULT IS POSITIVE
 1606  2         BZMF   ENDMAXDV        OR ZERO.
 1607    +3      INCR   MPAC            KEEP SUBTRACT HERE AND COMPENSATE.
 1608  2         TCF    FINALDV
 1609   -UP      EXTEND                 IF ZERO, SET MINOR PART OF RESULT TO
 1610  2         BZF    FINALDV +3      ZERO.
 1611            EXTEND                 IF NEGATIVE, ADD C TO A, SUBTRACTING ONE
 1612            DIM    MPAC            TO COMPENSATE. DIM IS OK HERE SINCE THE
 1613  8ENDMAXDV AD     BUF             MAJOR PART NEVER GOES NEGATIVE.
 1614   FINALDV  ZL                     DO DV TO OBTAIN MINOR PART OF RESULT.
 1615            EXTEND
 1616            DV     BUF
 1617  2 +3      TS     MPAC +1
 1618            CCS    DVSIGN          LEAVE RESULT POSITIVE UNLESS C(DVSIGN)=
 1619            TC     Q               -0.
 1620            TC     Q
 1621  2         TC     Q
 1622            EXTEND
 1623            DCS    MPAC
 1624            DXCH   MPAC
 1625            CAF    ZERO            SO WE ALWAYS RETURN WITH C(A) = 0.
 1626            TC     Q
P1627            IF THE MAJOR PARTS OF THE DIVISOR AND DIVIDEND ARE EQUAL, BUT T
 1628  9HE MINOR PARTS ARE SUCH THAT THE
R1629   DIVIDEND IS STRICTLY LESS THAN THE DIVISOR IN MAGNITUDE, THE FOLLOWING A
 1630  9PPROXIMATION IS USED. THE ASSUMPTIONS
R1631  2ARE THE SAME AS THE GENERAL ROUTINE WITH THE ADDITION THAT SIGN AGREEMEN
 1632  9T IS NECESSARY (B, C, & D POSITIVE).
R1633                   C + SB .          (C + B - D)
R1634                   ------ = 37777 + S(---------)
R1635  2                C + SD            (    C    )
R1636  4         THE DIVISION MAY BE PERFORMED IMMEDIATELY SINCE B IS STRICTLY L
 1637  9ESS THAN D AND C IS NOT LESS THAN .5.
 1638   MAXDV    CS     MPAC            SEE IF MAXDV CASE STILL HOLDS AFTER
 1639            AD     BUF             NORMALIZATION.
 1640            EXTEND
 1641            BZF    +2
 1642  2         TCF    GENDDV          MPAC NOW LESS THAN BUF - DIVIDE AS USUAL
 1643    +2      CAF    POSMAX          SET MAJOR PART OF RESULT.
 1644  2         TS     MPAC
 1645            CS     BUF +1          FORM DIVIDEND OF MINOR PART OF RESULT.
 1646            AD     MPAC +1
 1647            TCF    ENDMAXDV        GO ADD C AND DO DIVIDE, ATTACHING SIGN
A1648                                   BEFORE EXITING.
P1649  2         VECTOR DIVIDED BY SCALAR, V/SC, IS EXECUTED HERE. THE VECTOR IS
 1650  9 NOW IN MPAC WITH SCALAR IN BUF.
 1651   V/SC2    CS     ONE             INITIALIZE DIVIDEND NORMALIZATION COUNT
 1652            TS     DVNORMCT        AND DIVISION SIGN REGISTER.
 1653  2         TS     VBUF +5
 1654            CCS    BUF             FORCE DIVISOR POSITIVE WITH MAJOR PART
 1655            TCF    /BUF+           NON-ZERO (IF POSSIBLE).
 1656            TCF    +2
 1657  2         TCF    /BUF-
 1658            XCH    BUF +1          SHIFT VECTOR AND SCALAR LEFT 14.
 1659            XCH    BUF
 1660            XCH    MPAC +1
 1661            XCH    MPAC
 1662            EXTEND                 CHECK FOR OVERFLOW IN EACH CASE.
 1663            BZF    +2
 1664  2         TCF    DVOVF
 1665            XCH    MPAC +4
 1666            XCH    MPAC +3
 1667            EXTEND
 1668            BZF    +2
 1669  2         TCF    DVOVF
 1670            XCH    MPAC +6
 1671            XCH    MPAC +5
 1672            EXTEND
 1673            BZF    +2
 1674  2         TCF    DVOVF
 1675            CCS    BUF
 1676            TCF    /BUF+
 1677            TCF    DVOVF           ZERO DIVISOR - OVERFLOW.
 1678            TCF    /BUF-
 1679  2         TCF    DVOVF
 1680   /BUF-    EXTEND                 ON NEGATIVE, COMPLEMENT BUF AND MAINTAIN
 1681            DCS    BUF             DVSIGN IN VBUF +5.
 1682            DXCH   BUF
 1683  8         INCR   VBUF +5
 1684   /BUF+    CAF    HALF            FORCE SIGN AGREEMENT IN DIVISOR.
 1685            DOUBLE
 1686            AD     BUF +1
 1687            TS     BUF +1
 1688            CAF    ZERO
 1689            AD     POSMAX
 1690  2         ADS    BUF
 1691            XCH    BUF2            LEAVE ABS(ORIGINAL DIVISOR) IN BUF2 FOR
 1692            CA     BUF +1          OVERFLOW TESTING.
 1693            TS     BUF2 +1
 1694  2         TCF    /NORM           NORMALIZE DIVISOR IN BUF.
 1695   /NORM2   EXTEND                 IF LESS THAN .5, AUGMENT DVNORMCT AND
 1696            AUG    DVNORMCT        DOUBLE DIVISOR.
 1697            EXTEND
 1698            DCA    BUF
 1699  2         DAS    BUF
 1700   /NORM    CA     BUF             SEE IF DIVISOR NORMALIZED.
 1701            DOUBLE
 1702            OVSK
 1703  2         TCF    /NORM2          DOUBLE AND TRY AGAIN IF NOT.
 1704            TC     V/SCDV          DO X COMPONENT DIVIDE.
 1705            DXCH   MPAC +3         SUPPLY ARGUMENTS IN USUAL SEQUENCE.
 1706            DXCH   MPAC
 1707  2         DXCH   MPAC +3
 1708            TC     V/SCDV          Y COMPONENT.
 1709            DXCH   MPAC +5
 1710            DXCH   MPAC
 1711  2         DXCH   MPAC +5
 1712            TC     V/SCDV          Z COMPONENT.
 1713            TCF    VROTATEX        GO RE-ARRANGE COMPONENTS BEFORE EXIT.
P1714  2         SUBROUTINE USED BY V/SC TO DIVIDE VECTOR COMPONENT IN MPAC,+1 B
 1715  9Y THE SCALAR GIVEN IN BUF.
 1716   V/SCDV   CA     VBUF +5         REFLECTS SIGN OF SCALAR.
 1717  2         TS     DVSIGN
 1718            CCS    MPAC            FORCE MPAC POSITIVE, EXITING ON ZERO.
 1719            TCF    /MPAC+
 1720            TCF    +2
 1721  2         TCF    /MPAC-
 1722            CCS    MPAC +1
 1723            TCF    /MPAC+
 1724            TC     Q
 1725            TCF    /MPAC-
 1726  2         TC     Q
 1727   /MPAC-   EXTEND                 USUAL COMPLEMENTING AND SETTING OF SIGN.
 1728            DCS    MPAC
 1729            DXCH   MPAC
 1730  2         INCR   DVSIGN
 1731   /MPAC+   CS     ONE             INITIALIZE NEAR-ONE SWITCH.
 1732  2         TS     MAXDVSW
 1733            CS     MPAC            CHECK POSSIBLE OVERFLOW.
 1734            AD     BUF2            UNNORMALIZED INPUT DIVISOR.
 1735            EXTEND
 1736  2         BZMF   /AGREE          CHECK FOR NEAR-ONE OR OVERFLOW.
 1737   DDVCALL  DXCH   MPAC            CALL PRE-DIVIDE NORMALIZATION.
 1738            INDEX  DVNORMCT
 1739  8         TCF    MAXTEST
 1740   /AGREE   CAF    HALF            FORCE SIGN AGREEMENT IN DIVIDEND
 1741            DOUBLE                 (ALREADY DONE FOR DIVISOR).
 1742            AD     MPAC +1
 1743            TS     MPAC +1
 1744            CAF    ZERO
 1745            AD     POSMAX
 1746  2         ADS    MPAC
 1747            CS     MPAC            CHECK TO SEE IF OVERFLOW GONE OR IF
 1748            AD     BUF2            NEAR-ONE CASE IS PRESENT.
 1749            CCS    A
 1750            TCF    DDVCALL         NOT NEAR-ONE.
 1751   SLOPELO  DEC    .8324
 1752  2         TCF    DVOVF           NO HOPE.
 1753            TS     MAXDVSW         SIGNAL POSSIBLE NEAR-ONE CASE.
 1754            CS     MPAC +1         SEE IF DIVISION CAN BE DONE.
 1755            AD     BUF2 +1
 1756            EXTEND
 1757            BZMF   DVOVF
 1758            TCF    DDVCALL         GOING TO MAXDV.
P1759  2         THE FOLLOWING ROUTINE EXECUTES THE UNIT INSTRUCTION, WHICH TAKE
 1760  9S THE UNIT OF THE VECTOR IN MPAC.
 1761   UNIT     TC     MPACVBUF        SAVE THE ARGUMENT IN VBUF.
 1762            CAF    ZERO            MUST SENSE OVERFLOW IN FOLLOWING DOT.
 1763            XCH    OVFIND
 1764            TS     TEM1
 1765            TC     VSQSUB          DOT MPAC WITH ITSELF.
 1766            CA     TEM1
 1767            XCH    OVFIND
 1768            EXTEND
 1769            BZF    +2
 1770            TCF    DVOVF
 1771            EXTEND
 1772            DCA    MPAC            LEAVE THE SQUARE OF THE LENGTH OF THE
 1773            INDEX  FIXLOC          ARGUMENT IN LVSQUARE.
 1774  2         DXCH   LVSQUARE
 1775  2         TC     SQRTSUB         GO TAKE THE NORMALIZED SQUARE ROOT.
 1776            CCS    MPAC            CHECK FOR UNIT OVERFLOW.
 1777            TCF    +5              MPAC IS NOT LESS THAN .5 UNLESS
 1778            TS     L
 1779            INDEX  FIXLOC
 1780            DXCH   LV
 1781  2         TCF    DVOVF           INPUT TO SQRTSUB WAS 0.
 1782            CS     FOURTEEN        SEE IF THE INPUT WAS SO SMALL THE THE
 1783            AD     MPTEMP          FIRST TWO REGISTERS OF THE SQUARE WERE 0
 1784            CCS    A
 1785            COM                    IF SO, SAVE THE NEGATIVE OF THE SHIFT
 1786  2         TCF    SMALL           COUNT -15D.
 1787  2         TCF    LARGE           (THIS IS USUALLY THE CASE.)
 1788            CS     THIRTEEN        IF THE SHIFT COUNT WAS EXACTLY 14, SET
 1789  2         TS     MPTEMP          THE PRE-DIVIDE NORM COUNT TO -13D.
 1790            CA     MPAC            SHIFT THE LENGTH RIGHT 14 BEFORE STORING
 1791   SMALL2   TS     L               (SMALL EXITS TO THIS POINT).
 1792            CAF    ZERO
 1793  2         TCF    LARGE2          GO TO STORE LENGTH AND PROCEED.
 1794   LARGE    CCS    MPTEMP          MOST ALL CASES COME HERE.
 1795  2         TCF    LARGE3          SEE IF NO NORMALIZATION WAS REQUIRED BY
 1796            CS     SRDDV           SQRT, AND IF SO, SET UP FOR A SHIFT
 1797            TS     MPTEMP          RIGHT 1 BEFORE DIVIDING TO PRODUCE
 1798            EXTEND                 THE DESIRED HALF UNIT VECTOR.
 1799            DCA    MPAC
 1800  8         TCF    LARGE2
 1801   LARGE3   COM                    LEAVE NEGATIVE OF SHIFT COUNT-1 FOR
 1802  2         TS     MPTEMP          PREDIVIDE LEFT SHIFT.
 1803            COM                    PICK UP REQUIRED SHIFTING BIT TO UNNORM-
 1804            INDEX  A               ALIZE THE SQRT RESULT.
 1805            CAF    BIT14
 1806            TS     BUF
 1807            EXTEND
 1808            MP     MPAC +1
 1809            XCH    BUF
 1810            EXTEND                 (UNNORMALIZE THE SQRT FOR LV).
 1811            MP     MPAC
 1812            XCH    L
 1813            AD     BUF
 1814  2         XCH    L
 1815   LARGE2   INDEX  FIXLOC
 1816  2         DXCH   LV              LENGTH NOW STORED IN WORK AREA.
 1817            CS     ONE
 1818  2         TS     MAXDVSW         NO MAXDV CASES IN UNIT.
 1819            DXCH   VBUF            PREPARE X COMPONENT FOR DIVIDE, SETTING
 1820            DXCH   MPAC            LENGTH OF VECTOR AS DIVISOR IN BUF.
 1821            DXCH   BUF
 1822  2         TC     UNITDV
 1823            DXCH   VBUF +2         DO Y AND Z IN USUAL FASHION SO WE CAN
 1824            DXCH   MPAC            EXIT THROUGH VROTATEX.
 1825            DXCH   MPAC +3
 1826  2         TC     UNITDV
 1827            DXCH   VBUF +4
 1828            DXCH   MPAC
 1829            DXCH   MPAC +5
 1830            TC     UNITDV
 1831            TCF    VROTATEX        AND EXIT.
P1832            IF THE LENGTH OF THE ARGUMENT VECTOR WAS LESS THAN 2(-28), EACH
 1833  9 COMPONENT MUST BE SHIFTED LEFT AT LEAST
R1834  214 PLACES BEFORE THE DIVIDE. NOTE THAT IN THIS CASE, THE MAJOR PART OF E
 1835  9ACH COMPONENT IS ZERO.
 1836  2SMALL    TS     MPTEMP          NEGATIVE OF PRE-DIVIDE SHIFT COUNT.
 1837            CAF    ZERO            SHIFT EACH COMPONENT LEFT 14.
 1838            XCH    VBUF +1
 1839            XCH    VBUF
 1840            XCH    VBUF +3
 1841            XCH    VBUF +2
 1842            XCH    VBUF +5
 1843  2         XCH    VBUF +4
 1844            CS     MPTEMP
 1845            INDEX  A
 1846            CAF    BIT14
 1847            EXTEND
 1848            MP     MPAC
 1849  2         TCF    SMALL2
 1850   THIRTEEN DEC    13
 1851   FOURTEEN DEC    14
P1852  2         THE FOLLOWING ROUTINE SETS UP THE CALL TO THE DIVIDE ROUTINES.
 1853   UNITDV   CCS    MPAC            FORCE MPAC POSITIVE IF POSSIBLE, SETTING
 1854            TCF    UMPAC+          DVSIGN ACCORDING TO THE SIGN OF MPAC
 1855            TCF    +2              SINCE THE DIVISOR IS ALWAYS POSITIVE
 1856  2         TCF    UMPAC-          HERE.
 1857            CCS    MPAC +1
 1858            TCF    UMPAC+
 1859            TC     Q               EXIT IMMEDIATELY ON ZERO.
 1860            TCF    UMPAC-
 1861  2         TC     Q
 1862   UMPAC-   CS     ZERO            IF NEGATIVE, SET -0 IN DVSIGN FOR FINAL
 1863            TS     DVSIGN          COMPLEMENT.
 1864            EXTEND
 1865            DCS    MPAC            PICK UP ABSOLUTE VALUE OF ARG AND JUMP.
 1866            INDEX  MPTEMP
 1867  2         TCF    MAXTEST -1
 1868   UMPAC+   TS     DVSIGN          SET DVSIGN FOR POSITIVE QUOTIENT.
 1869            DXCH   MPAC
 1870            INDEX  MPTEMP
 1871            TCF    MAXTEST -1
P1872  2         MISCELLANEOUS UNARY OPERATIONS.
 1873   DSQ      TC     DSQSUB          SQUARE THE DP CONTENTS OF MPAC.
 1874  2         TCF    DANZIG
 1875   ABVALABS CCS    MODE            ABVAL OR ABS INSTRUCTION.
 1876            TCF    ABS             DO ABS ON SCALAR.
 1877  2         TCF    ABS
 1878   ABVAL    TC     VSQSUB          DOT MPAC WITH ITSELF.
 1879  2         LXCH   MODE            MODE IS NOW DP (L ZERO AFTER DAS).
 1880            EXTEND                 STORE SQUARE OF LENGTH IN WORK AREA.
 1881            DCA    MPAC
 1882            INDEX  FIXLOC
 1883  2         DXCH   LVSQUARE
 1884   SQRT     TC     SQRTSUB         TAKE THE SQUARE ROOT OF MPAC.
 1885            CCS    MPTEMP          RETURNED NORMALIZED SQUARE ROOT. SEE IF
 1886            TCF    +2              ANY UN-NORMALIZATION REQUIRED AND EXIT
 1887  2         TCF    DANZIG          IF NOT.
 1888            AD     NEG12           A RIGHT SHIFT OF MORE THAN 13 COULD BE
 1889            EXTEND                 REQUIRED IF INPUT WAS ZERO IN MPAC,+1.
 1890            BZMF   SQRTSHFT        GOES HERE IN MOST CASES.
 1891            ZL                     IF A LONG SHIFT IS REQUIRED, GO TO
 1892            LXCH   ADDRWD          GENERAL RIGHT SHIFT ROUTINES.
 1893  2         TCF    GENSCR +4       ADDRWD WAS ZERO TO PREVENT ROUND.
 1894   SQRTSHFT INDEX  MPTEMP          SELECT SHIFTING BIT AND EXIT THROUGH
 1895            CAF    BIT15           SHIFT ROUTINES.
 1896            TS     MPTEMP
 1897            CAF    ZERO            TO ZERO MPAC +2 IN THE PROCESS.
 1898  2         TCF    MPACSHR +3
 1899   ABS      TC     BRANCH          TEST SIGN OF MPAC AND COMPLEMENT IF
 1900            TCF    DANZIG
 1901            TCF    DANZIG
 1902  8         TCF    COMP
 1903   VDEF     CS     FOUR            VECTOR DEFINE - ESSENTIALLY TREATS
 1904            ADS    PUSHLOC         SCALAR IN MPAC AS X COMPONENT, PUSHES UP
 1905            EXTEND                 FOR Y AND THEN AGAIN FOR Z.
 1906            INDEX  A
 1907            DCA    2
 1908            DXCH   MPAC +3
 1909            EXTEND
 1910            INDEX  PUSHLOC
 1911            DCA    0
 1912            DXCH   MPAC +5
 1913            CS     ONE             MODE IS NOW VECTOR.
 1914  2         TCF    NEWMODE
 1915   VSQ      TC     VSQSUB          DOT MPAC WITH ITSELF.
 1916            CAF    ZERO
 1917  2         TCF    NEWMODE         MODE IS NOW DP.
 1918   PUSH     EXTEND                 PUSH DOWN MPAC LEAVING IT LOADED.
 1919            DCA    MPAC
 1920            INDEX  PUSHLOC         PUSH DOWN FIRST TWO REGISTERS IN EACH
 1921  2         DXCH   0
 1922            INDEX  MODE            INCREMENT PUSHDOWN POINTER.
 1923            CAF    NO.WDS
 1924  2         ADS    PUSHLOC
 1925            CCS    MODE
 1926            TCF    TPUSH           PUSH DOWN MPAC +2.
 1927  2         TCF    DANZIG          DONE FOR DP.
 1928            EXTEND                 ON VECTOR, PUSH DOWN Y AND Z COMPONENTS.
 1929            DCA    MPAC +3
 1930            INDEX  PUSHLOC
 1931            DXCH   0 -4
 1932            EXTEND
 1933            DCA    MPAC +5
 1934            INDEX  PUSHLOC
 1935            DXCH   0 -2
 1936  2         TCF    DANZIG
 1937   TPUSH    CA     MPAC +2
 1938  2         TCF    ENDTPUSH +2
 1939   RVQ      INDEX  FIXLOC          RVQ - RETURN IVA QPRET.
 1940            CA     QPRET
 1941            TCF    GOTO +1
P1942            THE FOLLOWING SUBROUTINES ARE USED IN SQUARING MPAC, IN BOTH TH
 1943  9E SCALAR AND VECTOR SENSE. THEY ARE
R1944  2SPECIAL CASES OF DMPSUB AND DOTSUB, PUT IN TO SAVE SOME TIME.
 1945   DSQSUB   CA     MPAC +1         SQUARES THE SCALAR CONTENTS OF MPAC.
 1946            EXTEND
 1947            SQUARE
 1948            TS     MPAC +2
 1949            CAF    ZERO            FORM 2(CROSS TERM).
 1950            XCH    MPAC +1
 1951            EXTEND
 1952            MP     MPAC
 1953            DDOUBL                 AND MAYBE OVERFLOW.
 1954            DAS    MPAC +1         AND SET A TO NET OVERFLOW.
 1955            XCH    MPAC
 1956            EXTEND
 1957            SQUARE
 1958            DAS    MPAC
 1959  2         TC     Q
 1960   VSQSUB   EXTEND                 DOTS THE VECTOR IN MPAC WITH ITSELF.
 1961            QXCH   DOTRET
 1962            TC     DSQSUB          SQUARE THE X COMPONENT.
 1963            DXCH   MPAC +3
 1964            DXCH   MPAC
 1965            DXCH   BUF             SO WE CAN END IN DOTSUB.
 1966            CA     MPAC +2
 1967  2         TS     BUF +2
 1968            TC     DSQSUB          SQUARE Y COMPONENT.
 1969            DXCH   MPAC +1
 1970            DAS    BUF +1
 1971            AD     MPAC
 1972            AD     BUF
 1973            TS     BUF
 1974            TCF    +2
 1975  2         TS     OVFIND          IF OVERFLOW.
 1976            DXCH   MPAC +5
 1977            DXCH   MPAC
 1978            TC     DSQSUB          SQUARE Z COMPONENT.
 1979            TCF    ENDDOT          END AS IN DOTSUB.
P1980            DOUBLE PRECISION SQUARE ROOT ROUTINE. TAKE THE SQUARE ROOT OF T
 1981  9HE TRIPLE PRECISION (MPAC +2 USED ONLY
R1982   IN NORMALIZATION) CONTENTS OF MPAC AND LEAVE THE NORMALIZED RESULT IN MP
 1983  9AC (C(MPAC) GREATER THAN OR EQUAL TO
R1984  4.5). THE RIGHT SHIFT COUNT (TO UNNORMALIZE) IS LEFT IN MPTEMP.
 1985   SQRTSUB  CAF    ZERO            START BY ZEROING RIGHT SHIFT COUNT.
 1986  2         TS     MPTEMP
 1987            CCS    MPAC            CHECK FOR POSITIVE ARGUMENT, SHIFTING
 1988            TCF    SMPAC+          FIRST SIGNIFICANT MPAC REGISTER INTO
 1989            TCF    +2              MPAC ITSELF.
 1990  2         TCF    SQRTNEG         SEE IF MAG OF ARGUMENT LESS THAN 10(-4).
 1991            XCH    MPAC +2         MPAC IS ZERO - SHIFT LEFT 14.
 1992            XCH    MPAC +1
 1993            TS     MPAC
 1994            CAF    SEVEN           AUGMENT RIGHT SHIFT COUNTER.
 1995  2         TS     MPTEMP
 1996            CCS    MPAC            SEE IF MPAC NOW PNZ.
 1997            TCF    SMPAC+
 1998            TCF    +2
 1999  2         TCF    ZEROANS         NEGATIVE BUT LESS THAN 10(-4) IN MAG.
 2000            XCH    MPAC +1         ZERO - SHIFT LEFT 14 AGAIN.
 2001            TS     MPAC
 2002            CAF    SEVEN           AUGMENT RIGHT SHIFT COUNTER.
 2003  2         ADS    MPTEMP
 2004            CCS    MPAC
 2005            TCF    SMPAC+
 2006            TC     Q               SQRT(0) = 0.
 2007            TCF    ZEROANS
 2008  4         TC     Q
 2009   SQRTNEG  CCS    A               ARGUMENT IS NEGATIVE, BUT SEE IF SIGN-
 2010  2         TCF    SQRTABRT        CORRECTED ARGUMENT IS LESS THAN 10(-4)
 2011            CCS    MPAC +1         IN MAGNITUDE. IF SO, CALL ANSWER ZERO.
 2012   ZEROANS  CAF    ZERO            FORCE ANSWER TO ZERO HERE.
 2013            TCF    FIXROOT
 2014            TCF    SQRTABRT
 2015  2         TCF    FIXROOT
 2016   SQRTABRT TC     ABORT
 2017  8         OCT    1302
 2018   SMPAC+   AD     -1/2+2          SEE IF ARGUMENT GREATER THAN OR EQUAL TO
 2019            EXTEND                 .5.
 2020  2         BZMF   SRTEST          IF SO, SEE IF LESS THAN .25.
 2021            DXCH   MPAC            WE WILL TAKE THE SQUARE ROOT OF MPAC/2.
 2022            LXCH   SR              SHIFT RIGHT 1 AND GO TO THE SQRT ROUTINE
 2023            EXTEND
 2024            MP     HALF
 2025            DXCH   MPAC
 2026            XCH    SR
 2027  2         ADS    MPAC +1         GUARANTEED NO OVERFLOW.
 2028   ARGHI    CAF    SLOPEHI         ARGUMENT BETWEEN .25 AND .5. GET A
 2029            EXTEND                 LINEAR APPROXIMATION FOR THIS RANGE.
 2030            MP     MPAC
 2031  2         AD     BIASHI          X0/2 = (MPAC/2)(SLOPEHI) + BIASHI/2.
 2032    +4      TS     BUF             X0/2 (ARGLO ENTERS HERE).
 2033            CA     MPAC            SINGLE-PRECISION THROUGHOUT.
 2034            ZL
 2035            EXTEND
 2036            DV     BUF             (MPAC/2)/(X0/2)
 2037            EXTEND
 2038            MP     HALF
 2039  2         ADS    BUF             X1 = X0/2 + .5(MPAC/2)/(X0/2).
 2040            EXTEND
 2041            MP     HALF            FORM UP X1/2.
 2042            DXCH   MPAC            SAVE AND BRING OUT ARGUMENT.
 2043            EXTEND                 TAKE DP QUOTIENT WITH X1.
 2044            DV     BUF
 2045            TS     BUF +1          SAVE MAJOR PART OF QUOTIENT.
 2046            CAF    ZERO            FORM MINOR PART OF QUOTIENT USING
 2047            XCH    L               (REMAINDER,0).
 2048            EXTEND
 2049            DV     BUF
 2050            TS     L               IN PREPARATION FOR DAS.
 2051            CA     BUF +1
 2052  2         DAS    MPAC            X2 = X1/2 + (MPAC/2)X1
 2053            EXTEND                 OVERFLOWS IF ARG. NEAR POSMAX.
 2054            BZF    TCQBNK00
 2055            CAF    POSMAX
 2056   FIXROOT  TS     MPAC
 2057            TS     MPAC +1
 2058  8TCQBNK00 TC     Q               RETURN TO CALLER TO UNNORMALIZE, ETC.
 2059   SRTEST   AD     QUARTER         ARGUMENT WAS LESS THAN .5, SEE IF LESS
 2060            EXTEND                 THAN .25.
 2061  2         BZMF   SQRTNORM        IF SO, BEGIN NORMALIZATION.
 2062            DXCH   MPAC            IF BETWEEN .5 AND .25, SHIFT RIGHT 1 AND
 2063            LXCH   SR              START AT ARGLO.
 2064            EXTEND
 2065            MP     HALF
 2066            DXCH   MPAC
 2067            XCH    SR
 2068  2         ADS    MPAC +1         NO OVERFLOW.
 2069   ARGLO    CAF    SLOPELO         (NORMALIZED) ARGUMENT BETWEEN .125 AND
 2070            EXTEND                 .25
 2071            MP     MPAC
 2072            AD     BIASLO
 2073  2         TCF    ARGHI +4        BEGIN SQUARE ROOT.
 2074   SQRTNM2  EXTEND                 SHIFT LEFT 2 AND INCREMENT RIGHT SHIFT
 2075            DCA    MPAC +1         COUNT (FOR TERMINAL UNNORMALIZATION).
 2076            DAS    MPAC +1
 2077            AD     MPAC
 2078  2         ADS    MPAC            (NO OVERFLOW).
 2079   SQRTNORM INCR   MPTEMP          FIRST TIME THROUGH, JUST SHIFT LEFT 1
 2080            EXTEND                 (PUTS IN EFFECTIVE RIGHT SHIFT SINCE
 2081            DCA    MPAC +1         WE WANT MPAC/2).
 2082            DAS    MPAC +1
 2083            AD     MPAC
 2084            ADS    MPAC            (AGAIN NO OVERFLOW).
 2085            DOUBLE
 2086  2         TS     CYL
 2087   NORMTEST CCS    CYL             SEE IF ARGUMENT NOW NORMALIZED AT
 2088            CCS    CYL             GREATER THAN .125.
 2089            TCF    SQRTNM2         NO - SHIFT LEFT 2 MORE AND TRY AGAIN.
 2090            TCF    ARGHI           YES - NOW BETWEEN .5 AND .25.
 2091            TCF    ARGLO           ARGUMENT NOW BETWEEN .25 AND .125.
P2092  2TRIGONOMETRIC FUNCTION PACKAGE.
R2093  2         THE FOLLOWING TRIGONOMETRIC FUNCTIONS ARE AVAILABLE AS INTERPRE
 2094  9TIVE OPERATIONS:
R2095            1.  SIN                COMPUTES (1/2)SINE(2 PI MPAC).
R2096  2         2.  COS                COMPUTES (1/2)COSINE(2 PI MPAC).
R2097            3.  ASIN               COMPUTES (1/2PI)ARCSINE(2 MPAC).
R2098  2         4.  ACOS               COMPUTES (1/2PI)ARCCOSINE(2 MPAC).
R2099  4SIN-ASIN AND COS-ACOS ARE MUTUALLY INVERSE, IE SIN(ASIN(X)) = X.
 2100   COSINE   TC     BRANCH          FINDS COSINE USING THE IDENTITY
 2101            TCF    +3              COS(X) = SIN(PI/2 - ABS(X)).
 2102            TCF    PRESINE
 2103  2         TCF    PRESINE
 2104    +3      EXTEND
 2105            DCS    MPAC
 2106  2         DXCH   MPAC
 2107   PRESINE  CAF    QUARTER         PI/2 SCALED.
 2108  4         ADS    MPAC
 2109   SINE     DXCH   MPAC            DOUBLE ARGUMENT.
 2110            DDOUBL
 2111            OVSK                   SEE IF OVERFLOW PRESENT.
 2112  2         TCF    +3              IF NOT, ARGUMENT OK AS IS.
 2113            EXTEND                 IF SO, WE LOST (OR GAINED) PI, SO
 2114            DCOM                   COMPLEMENT MPAC USING THE IDENTITY
A2115                                   SIN(X-(+)PI) = SIN(-X).
 2116    +3      DXCH   MPAC
 2117            CA     MPAC            SEE IF ARGUMENT GREATER THAN .5 IN
 2118            DOUBLE                 MAGNITUDE. IF SO, REDUCE IT TO LESS THAN
 2119            TS     L               .5 (+-PI/2 SCALED) AS FOLLOWS:
 2120  2         TCF    SN1
 2121            INDEX  A               IF POSITIVE, FORM PI - X, IF NEGATIVE
 2122            CAF    NEG1/2 +1       USE -PI - X.
 2123            DOUBLE
 2124            EXTEND
 2125            SU     MPAC            GUARANTEED NO OVERFLOW.
 2126            TS     MPAC
 2127            CS     MPAC +1
 2128  8         TS     MPAC +1
 2129   SN1      EXTEND                 SET UP TO EVALUATE HASTINGS POLYNOMIAL
 2130            DCA    MPAC
 2131            DXCH   BUF2
 2132  2         TC     DSQSUB          SQUARE MPAC.
 2133            TC     POLY            EVALUATE FOURTH ORDER POLYNOMIAL.
 2134            DEC    3
 2135            2DEC   +.3926990796
 2136            2DEC   -.6459637111
 2137            2DEC   +.318758717
 2138            2DEC   -.074780249
 2139            2DEC   +.009694988
 2140            CAF    LBUF2           MULTIPLY BY ARGUMENT AND SHIFT LEFT 2.
 2141  2         TC     DMPSUB -1
 2142            EXTEND
 2143            DCA    MPAC +1
 2144            DAS    MPAC +1
 2145            AD     MPAC
 2146            ADS    MPAC            NEITHER SHIFT OVERFLOWS.
 2147            EXTEND
 2148            DCA    MPAC +1
 2149            DAS    MPAC +1
 2150            AD     MPAC
 2151            ADS    MPAC
 2152            TCF    DANZIG
P2153  2         ARCSIN/ARCCOS ROUTINE.
 2154   ARCSIN   CAF    LASINEX         COMPUTE ARCSIN BY USING THE IDENTITY
 2155  2         TCF    +2              ARCSIN(X) = PI/2 - ARCCOS(X).
 2156   ARCCOS   CAF    LDANZIG         (EXITS IMMEDIATELY).
 2157            TS     ESCAPE
 2158            TC     BRANCH          TEST SIGN OF INPUT.
 2159            TCF    ACOSST          START IMMEDIATELY IF POSITIVE.
 2160            TCF    ACOSZERO        ARCCOS(0) = PI/2 = .25.
 2161            EXTEND                 IF NEGATIVE, USE THE IDENTITY
 2162            DCS    MPAC            ARCCOS(X) = PI - ARCCOS(-X), FORCING
 2163            DXCH   MPAC            ARGUMENT POSITIVE.
 2164            CAF    TCSUBTR         SET EXIT  TO DO ABOVE BEFORE
 2165            XCH    ESCAPE          ARCSIN/ARCCOS CONSIDERATIONS.
 2166  2         TS     ESCAPE2
 2167   ACOSST   CS     HALF            TEST MAGNITUDE OF INPUT.
 2168            AD     MPAC
 2169            CCS    A
 2170  2         TCF    ACOSOVF         THIS IS PROBABLY AN OVERFLOW CASE.
 2171  2LASINEX  TCF    ASINEX
 2172  2         TCF    ACOSST2         NO OVERFLOW - PROCEED.
 2173            CCS    MPAC +1         IF MAJOR PART IS .5, CALL ANSWER 0
 2174            CAF    ZERO            UNLESS MINOR PART NEGATIVE.
 2175  2         TCF    ACOS=0
 2176  2         TCF    ACOSST2
 2177   ACOS=0   TS     MPAC +1
 2178            TS     MPAC
 2179  2         TC     ESCAPE
 2180   ACOSST2  EXTEND                 NOW THAT ARGUMENT IS IN PROPER RANGE,
 2181            DCS    MPAC            BEGIN COMPUTATION. USE HASTINGS
 2182            AD     HALF            APPROXIMATION ARCCOS(X) = SQRT(1-X)P(X)
 2183            DXCH   MPAC            IN A SCALED VERSION WHERE P(X) IS A
 2184  2         DXCH   BUF2            SEVENTH ORDER POLYNOMIAL.
 2185  2         TC     SQRTSUB         RETURNS WITH NORMALIZED SQUARE ROOT.
 2186            CCS    MPTEMP          SEE IF UN-NORMALIZATION REQUIRED.
 2187  8         TCF    ACOSSHR         IF SO.
 2188   ACOS3    DXCH   MPAC            SET UP FOR POLYNOMIAL EVALUATION.
 2189            DXCH   BUF2
 2190  2         DXCH   MPAC
 2191            TC     POLY
 2192            DEC    6
 2193            2DEC   +.353553385     COEFFICIENTS ARE C 2(+I)/PISQRT(2) WHERE
 2194            2DEC*  -.0483017006 B+1*                 I
 2195            2DEC*  +.0200273085 B+2*    WHERE C STANDS FOR ORIGINAL COEFFS.
 2196            2DEC*  -.0112931863 B+3*
 2197            2DEC*  +.00695311612 B+4*
 2198            2DEC*  -.00384617957 B+5*
 2199            2DEC*  +.001501297736 B+6*
 2200            2DEC*  -.000284160334 B+7*
 2201            CAF    LBUF2           DO FINAL MULTIPLY AND GO TO ANY
 2202            TC     DMPSUB -1       EPILOGUE SEQUENCES.
 2203  2         TC     ESCAPE
 2204   SUBTR    EXTEND                 EPILOGUE FOR NEGATIVE INPUTS TO ARCCOS.
 2205            DCS    MPAC
 2206            AD     HALF            FORMS PI - ARCCOS(-X) = ARCCOS(X).
 2207            DXCH   MPAC
 2208  2         TC     ESCAPE2         GO TO POSSIBLE ARCSIN EPILOGUE.
 2209   ASINEX   EXTEND
 2210            DCS    MPAC            ARCSIN EPILOGUE - GET ARCSIN(X)
 2211            AD     QUARTER         = PI/2 - ARCCOS(X).
 2212            DXCH   MPAC
 2213  8LDANZIG  TCF    DANZIG
 2214   ACOSSHR  INDEX  A               THE SHIFT RIGHT IS LESS THAN 14 SINCE
 2215            CAF    BIT14           THE INPUT WAS NON-ZERO DP.
 2216            TS     MPTEMP
 2217            TC     VSHRRND         DP SHIFT RIGHT AND ROUND.
 2218  2         TCF    ACOS3           PROCEED.
 2219   ACOSOVF  CCS    A               IF MAJOR PART WAS ONLY 1 MORE THAN .5,
 2220            TCF    +2              CALL ANSWER 0.
 2221            TCF    ACOS=0
 2222  2         TCF    ACOS=0
 2223   ACOSABRT TC     ABORT
 2224  2         OCT    1301
 2225   ACOSZERO CAF    QUARTER         ACOS(0) = PI/2.
 2226            TCF    ACOS=0 +1       SET MPAC AND EXIT VIA ESCAPE.
 2227   ENDINTS0 EQUALS
P2228  2         THE FOLLOWING INSTRUCTIONS ARE AVAILABLE FOR SETTING, MODIFYING
 2229  9, AND BRANCHING ON INDEX REGISTERS:
R2230            1.  AXT                ADDRESS TO INDEX TRUE.
R2231            1.  AXC                ADDRESS TO INDEX COMPLEMENTED.
R2232            3.  LXA                LOAD INDEX FROM ERASABLE.
R2233            4.  LXC                LOAD INDEX COMPLEMENTED FROM ERASABLE.
R2234            5.  SXA                STORE INDEX IN ERASABLE.
R2235  2         6.  XCHX               EXCHANGE INDEX REIGSTER WITH ERASABLE.
R2236            7.  INCR               INCREMENT INDEX REGISTER.
R2237            8.  XAD                ERASABLE ADD TO INDEX REGISTER.
R2238  2         9.  XSU                ERASABLE SUBTRACT FROM INDEX REGISTER.
R2239  4        10.  TIX                BRANCH ON INDEX REGISTER AND DECREMENT.
 2240  2         SETLOC 12000           SUFFIX CLASS 01 IS IN BANK 1.
 2241   AXT      TC     TAGSUB          SELECT APPROPRIATE INDEX REGISTER.
 2242            CA     POLISH
 2243   XSTORE   INDEX  INDEXLOC        CONTAINS C(FIXLOC) OR C(FIXLOC)+1.
 2244            TS     X1
 2245  2         TCF    DANZIG
 2246   AXC      TC     TAGSUB
 2247            CS     POLISH
 2248  2         TC     XSTORE
 2249   LXA      TC     TAGSUB          LOAD INDEX FROM ERASABLE.
 2250            INDEX  ADDRWD
 2251            CA     0
 2252  2         TCF    XSTORE
 2253   LXC      TC     TAGSUB          LOAD INDEX FROM ERASABLE COMPLEMENTED.
 2254            INDEX  ADDRWD
 2255            CS     0
 2256  2         TCF    XSTORE
 2257   SXA      TC     TAGSUB          STORE INDEX IN ERASABLE.
 2258            INDEX  INDEXLOC
 2259            CA     X1
 2260  2         TCF    STORE1          (STORE SINGLE PRECISION BEFORE EXIT).
 2261   XCHX     TC     TAGSUB          EXCHANGE INDEX REGISTER WITH ERASABLE.
 2262            INDEX  ADDRWD
 2263            CA     0
 2264            INDEX  INDEXLOC
 2265            XCH    X1
 2266  2         TCF    STORE1
 2267   XAD      TC     TAGSUB          ERASABLE ADD TO INDEX.
 2268            INDEX  ADDRWD
 2269            CA     0
 2270   XAD2     INDEX  INDEXLOC
 2271            ADS    X1              IGNORING OVERFLOWS.
 2272  2         TCF    DANZIG
 2273   INCR     TC     TAGSUB          INCREMENT INDEX REGISTER.
 2274            CA     POLISH
 2275  2         TCF    XAD2
 2276   XSU      TC     TAGSUB          ERASABLE SUBTRACT FROM INDEX.
 2277            INDEX  ADDRWD
 2278            CS     0
 2279  4         TCF    XAD2
 2280   TIX      TC     TAGSUB          BRANCH AND DECREMENT ON INDEX.
 2281            INDEX  INDEXLOC
 2282            CS     S1
 2283            INDEX  INDEXLOC
 2284            AD     X1
 2285            EXTEND                 NO OPERATION IF DECREMENTED INDEX IS
 2286  2         BZMF   DANZIG          NEGATIVE OR ZERO.
 2287   DOTIXBR  INDEX  INDEXLOC
 2288  2         XCH    X1              IGNORING OVERFLOWS.
 2289  4         TCF    GOTO            DO THE BRANCH USING THE CADR IN POLISH.
R2290  2         SUBROUTINE WHICH SETS THE ADDRESS OF THE SPECIFIED INDEX IN IND
 2291  9EXLOC. (ACTUALLY, THE ADDRESS -38D.)
 2292   TAGSUB   CA     FIXLOC
 2293  2         TS     INDEXLOC
 2294            CCS    CYR             BIT 15 SPECIFIES INDEX.
 2295            INCR   INDEXLOC        0 MEANS USE X2.
 2296            TC     Q
 2297            TC     Q               1 FOR X1.
P2298  2         MISCELLANEOUS OPERATION CODES WITH DIRECT ADDRESSES. INCLUDED H
 2299  9ERE ARE:
R2300            1.  ITA                STORE QPRET (RETURN ADDRESS) IN ERASABLE
 2301  9.
R2302            2.  CALL               CALL A SUBROUTINE, LEAVING RETURN IN QPR
 2303  9ET.
R2304            3.  RTB                RETURN TO BASIC LANGUAGE AT THE GIVEN AD
 2305  9DRESS.
R2306            4.  BHIZ               BRANCH IF THE HIGH ORDER OF MPAC IS ZERO
 2307  9 (SINGLE PRECISION).
R2308            5.  BOV                BRANCH ON OVERFLOW.
R2309  2         6.  GOTO               SIMPLE SEQUENCE CHANGE.
 2310   RTB/BHIZ CCS    CYR
 2311   RTB      CA     POLISH
 2312  2         TCF    BANKJUMP        CALL BASIC ROUTINE.
 2313   BHIZ     CCS    MPAC
 2314            TCF    DANZIG
 2315            TCF    GOTO
 2316            TCF    DANZIG
 2317  2         TCF    GOTO
 2318   BOV(B)   CCS    OVFIND          BRANCH ON OVERFLOW TO BASIC OR INTERP.
 2319            TCF    +2
 2320            TCF    DANZIG
 2321            TS     OVFIND
 2322            CCS    CYR
 2323            TCF    RTB             IF BASIC.
 2324   B5TOB8   OCT    360
 2325  8         TCF    GOTO
 2326   BZE/GOTO CCS    CYR             SEE WHICH OP-CODE IS DESIRED.
 2327            TC     BRANCH          DO BZE.
 2328            TCF    DANZIG
 2329            TCF    GOTO            DO GOTO.
 2330  2         TCF    DANZIG
 2331   BPL/BMN  CCS    CYR
 2332            TCF    BPL
 2333  25B10     DEC    5 B+10          SHIFTS OP CODE IN SWITCH INSTRUCTION ADR
 2334            TC     BRANCH          DO BMN.
 2335            TCF    DANZIG
 2336            TCF    DANZIG
 2337  2         TCF    GOTO            ONLY IF NNZ.
 2338   BPL      TC     BRANCH
 2339            TCF    GOTO            IF POSITIVE OR ZERO.
 2340            TCF    GOTO
 2341  2         TCF    DANZIG
 2342   CALL/ITA CCS    CYR
 2343  2         TCF    CALL
 2344            TC     CCSHOLE
 2345            INDEX  FIXLOC          STORE QPRET.
 2346            CA     QPRET
 2347            TCF    STORE1
P2348  2         THE FOLLOWING OPERATIONS ARE AVAILABLE FOR ALTERING AND TESTING
 2349  9 INTERPRETIVE SWITCHES:
R2350   00       BONSET                 SET A SWITCH AND DO A GOTO IF IT WAS ON.
R2351   01       SETGO                  SET A SWITCH AND DO A GOTO.
R2352   02       BOFSET                 SET A SWITCH AND DO A GOTO IF IT WAS OFF
R2353  203       SET                    SET A SWITCH.
R2354   04       BONINV                 INVERT A SWITCH AND BRANCH IF IT WAS ON.
R2355   05       INVGO                  INVERT A SWITCH AND DO A GOTO.
R2356   06       BOFINV                 INVERT A SWITCH AND BRANCH IF IT WAS OFF
R2357  207       INVERT                 INVERT A SWITCH.
R2358   10       BONCLR                 CLEAR A SWITCH AND BRANCH IF IT WAS ON.
R2359   11       CLRGO                  CLEAR A SWITCH AND DO A GOTO.
R2360   12       BOFCLR                 CLEAR A SWITCH AND BRANCH IF IT WAS OFF.
R2361  213       CLEAR                  CLEAR A SWITCH.
R2362   14       BON                    BRANCH IF A SWITCH WAS ON.
R2363  416       BOFF                   BRANCH IF A SWITCH WAS OFF.
R2364  2         THE ADDRESS SUPPLIED WITH THE SWITCH INSTRUCTION IS INTERPRETED
 2365  9 AS FOLLOWS:
R2366            BITS 1-4    SWITCH BIT NUMBER (1-15).
R2367            BITS 5-8    SWITCH OPERATION NUMBER.
R2368  2         BITS 9-     SWITCH WORD NUMBER (UP TO 64 SWITCH WORDS).
R2369            THE ADDRESS ITSELF IS MADE UP BY THE YUL SYSTEM ASSEMBLER. THE
 2370  9BRANCH INSTRUCTIONS REQUIRE TWO
R2371  4ADDRESSES, THE SECOND TAKEN AS THE DIRECT (OR INDIRECT IF IN ERASABLE) A
 2372  9DDRESS OF THE BRANCH.
 2373   SWITCHES CAF    LOW4            LEAVE THE SWITCH BIT IN  SWBIT  .
 2374            MASK   POLISH
 2375            INDEX  A
 2376            CAF    BIT15           (NUMBER FROM LEFT TO RIGHT.)
 2377  2         TS     SWBIT
 2378            CAF    BIT7            LEAVE THE SWITCH NUMBER IN SWWORD.
 2379            EXTEND
 2380            MP     POLISH
 2381  2         TS     SWWORD
 2382            INHINT                 DURING SWITCH CHANGE SO RUPT CAN USE TOO
 2383            INDEX  A               LEAVE THE SWITCH WORD ITSELF IN L.
 2384            CA     STATE
 2385  8         TS     Q               Q WILL BE USED AS A CHANNEL.
 2386            CAF    BIT11
 2387            EXTEND                 DISPATCH SWITCH BIT OPERATION AS IN BITS
 2388            MP     POLISH          7-8 OF POLISH.
 2389            MASK   B3TOB4          GETS 4X2-BIT CODE.
 2390            INDEX  A
 2391  2         TCF    +1
 2392    +1      CA     SWBIT           00 - SET SWITCH IN QUESTION.
 2393            EXTEND
 2394            ROR    Q
 2395  2         TCF    SWSTORE
 2396    +5      CA     SWBIT           01 - INVERT SWITCH.
 2397            EXTEND
 2398            RXOR   Q
 2399  2         TCF    SWSTORE
 2400    +9D     CS     SWBIT           10 - CLEAR.
 2401            MASK   Q
 2402   SWSTORE  INDEX  SWWORD
 2403  8         TS     STATE           NEW SWITCH WORD.
 2404    +13D    RELINT                 11 - NOOP.
 2405            CAF    BIT13
 2406            EXTEND                 DISPATCH SEQUCE CHANGING OR BRANCHING
 2407            MP     POLISH          CODE.
 2408            MASK   B3TOB4
 2409            INDEX  A
 2410  2         TCF    +1              ORIGINALLY STORED IN BITS 5-6.
 2411    +1      CS     Q               00 - BRANCH IF ON.
 2412   TEST     MASK   SWBIT
 2413            CCS    A
 2414  2         TCF    SWSKIP
 2415  2 +5      TCF    SWBRANCH        01 - GO TO.
 2416  2         TCF    SWSKIP          HERE ONLY ON BIT 15.
 2417            TC     CCSHOLE
 2418  2         TC     CCSHOLE
 2419    +9D     CA     Q               10 - BRANCH IF OFF.
 2420  2         TCF    TEST
 2421  2B3TOB4   OCT    14
 2422  2SWSKIP   INCR   LOC
 2423  2SW/      EQUALS SWITCHES
 2424  2 +13D    TCF    DANZIG          11 - NOOP.
 2425   ENDINTS1 EQUALS
L      2SINGLE PRECISION SUBROUTINES
 0001  2         SETLOC ENDIBNKF
R0002  2SINGLE PRECISION SINE AND COSINE
 0003   SPCOS    AD     HALF            ARGUMENTS SCALED AT PI
 0004   SPSIN    TS     TEMK
 0005            TCF    SPT
 0006            CS     TEMK
 0007   SPT      DOUBLE
 0008            TS     TEMK
 0009            TCF    POLLEY
 0010            XCH    TEMK
 0011            INDEX  TEMK
 0012            AD     LIMITS
 0013            COM
 0014            AD     TEMK
 0015            TS     TEMK
 0016            TCF    POLLEY
 0017            TCF    ARG90
 0018   POLLEY   EXTEND
 0019            MP     TEMK
 0020            TS     SQ
 0021            EXTEND
 0022            MP     C5/2
 0023            AD     C3/2
 0024            EXTEND
 0025            MP     SQ
 0026            AD     C1/2
 0027            EXTEND
 0028            MP     TEMK
 0029            DDOUBL
 0030            TS     TEMK
 0031            TC     Q
 0032   ARG90    INDEX  A
 0033            CS     LIMITS
 0034            TC     Q               RESULT SCALED AT 1
 0035   C1/2     DEC    .7853134
 0036   C3/2     DEC    -.3216146
 0037  8C5/2     DEC    .0363551
R0038   ENTER WITH ARGUMENT IN A, EXIT WITH ROOT IN A.  IF GIVEN A NEGATIVE ARGU
 0039  9MENT, THE RETURN SKIPS WITH CCS RESULT.
R0040   MINUS ZERO RETURNS LIKE PLUS ZERO.
R0041   MAXIMUM ERROR IN ANSWER IS NO GREATER THAN 2 BITS.
R0042  4INTERRUPT PROGRAMS USING SPROOT MUST SAVE AND RESTORE SR.
 0043   SPROOT   TS     SQRARG          ENTER WITH C(A) = Y
 0044            CCS    A
 0045            TCF    POSARG          IF PNZ, CONTINUE
 0046            TC     Q               RETURN WITH 0 FOR +0
 0047            INCR   Q
 0048  2         TC     Q               RETURN WITH 0 FOR -0
 0049   POSARG   EXTEND
 0050            QXCH   ROOTRET         WILL BE CALLING SPROOT1
 0051            AD     63/64+1         B(A) = Y - 1
 0052            OVSK
 0053            TCF    SPROOT2
 0054  2         XCH    SQRARG          ARG JUGGLING
 0055   SPROOT3  TS     SQRARG
 0056            TS     SR              C(A) = Y
 0057            XCH    SR              (LOSE 1 BIT)
 0058            TS     HALFY           HALFY = Y/2
 0059            AD     -1/8            FORM Y/2 - 1/8
 0060            CCS    A               TEST FOR FIRST GUESS
 0061            AD     5/8+1           Y .G. 1/4, X = Y/2 + 1/2
 0062            TC     HIGUESS         +0 IMPOSSIBLE FROM ADDITION
 0063            NOOP                   Y .LE. 1/4, X/2 = Y + 1/16
 0064            CAF    BIT11           1/16
 0065            AD     SQRARG          SQRARG = Y
 0066            DOUBLE                 X FROM X/2
 0067   HIGUESS  TC     SPROOT1
 0068            TC     SPROOT1         ITERATE TWICE
 0069            XCH    ROOTRET         SAVE ANSWER AND GET Q
 0070            CCS    A
 0071            XCH    ROOTRET         NO SHIFT NEEDED
 0072            TC     ROOTBCK
 0073            XCH    ROOTRET         Q NEG, SHIFT RIGHT THREE
 0074            EXTEND
 0075            MP     BIT12           EXP -3
 0076   ROOTBCK  INDEX  ROOTRET         ROOTRET = Q - 1
 0077  2         TC     1               RETURN, C(A) = SQRT(Y)
 0078   SPROOT1  XCH    SR              SR = X/2
 0079            CS     HALFY           NEWTON ITER  X = X/2 + (Y/2 / X/2) / 2
 0080            ZL
 0081            EXTEND
 0082            DV     SR              C(SR) = X/2 DV DOES NOT EDIT
 0083            XCH    SR
 0084            EXTEND
 0085            SU     SR
 0086  2         TC     Q               C(A) = X (NEXT)
 0087   SPROOT2  CS     ROOTRET         SET RETURN Q NEG, AS FLAG
 0088            TS     ROOTRET
 0089            CAF    BIT7            SHIFT FOR SIGNIFCANCE
 0090            EXTEND
 0091            MP     SQRARG
 0092            CA     L               B(A) = 0
 0093  2         TC     SPROOT3
 0094   -1/8     OCTAL  73777
 0095   5/8+1    OCTAL  24001
 0096  463/64+1  OCTAL  37401
 0097   ENDSUBSF EQUALS
L      2EXECUTIVE
 0001  2         SETLOC ENDSUBSF
R0002            TO ENTER A JOB REQUEST REQUIRING NO VAC AREA:
 0003   NOVAC    TS     NEWPRIO         SAVE PRIORITY OF NEW JOB.
 0004            EXTEND
 0005            INDEX  Q               Q WILL BE UNDISTURBED THROUGHOUT.
 0006            DCA    0               2CADR OF JOB ENTERED.
 0007            DXCH   NEWLOC
 0008            CAF    EXECBANK
 0009            XCH    FBANK
 0010            TS     EXECTEM1
 0011  2         TCF    NOVAC2          ENTER EXECUTIVE BANK.
R0012  2         TO ENTER A JOB REQUEST REQUIRING A VAC AREA - E.G., ALL (PARTIA
 0013  9LLY) INTERPRETIVE JOBS.
 0014   FINDVAC  TS     NEWPRIO
 0015            EXTEND
 0016            INDEX  Q
 0017            DCA    0
 0018            DXCH   NEWLOC
 0019            CAF    EXECBANK
 0020            XCH    FBANK
 0021  2         TCF    FINDVAC2        OFF TO EXECUTIVE SWITCHED-BANK.
R0022  2         TO SUSPEND A BASIC JOB SO A HIGHER PRIORITY JOB MAY BE SERVICED
 0023  9:
 0024   CHANG1   CAF    EXECBANK
 0025            TS     L
 0026            CA     Q
 0027    +3      LXCH   BBANK
 0028            INHINT
 0029  2         TCF    CHANJOB
R0030  2         TO SUSPEND AN INTERPRETIVE JOB:
 0031   CHANG2   CAF    EXECBANK
 0032            TS     L
 0033            CS     LOC             NEGATIVE LOC SHOWS JOB INTERPRETIVE.
 0034            TCF    CHANG1 +3
P0035  2         TO VOLUNTARILY SUSPEND A JOB UNTIL THE COMPLETION OF SOME ANTIC
 0036  9IPATED EVENT (I/O EVENT ETC.):
 0037   JOBSLEEP TS     LOC
 0038            CAF    EXECBANK
 0039            TS     FBANK
 0040  2         TCF    JOBSLP1
R0041  2         TO AWAKEN A JOB PUT TO SLEEP IN THE ABOVE FASHION:
 0042   JOBWAKE  TS     NEWLOC
 0043            CS     TWO             EXIT IS VIA FINDVAC/NOVAC PROCEDURES.
 0044            ADS    Q
 0045            CAF    EXECBANK
 0046            XCH    FBANK
 0047  2         TCF    JOBWAKE2
R0048  2         TO CHANGE THE PRIORITY OF A JOB CURRENTLY UNDER EXECUTION:
 0049   PRIOCHNG INHINT                 NEW PRIORITY ARRIVES IN A. RETURNS TO
 0050            TS     NEWPRIO         CALLER AS SOON AS NEW JOB PRIORITY IS
 0051            CAF    EXECBANK        HIGHEST. PREPARE FOR POSSIBLE BASIC-
 0052            XCH    BBANK           STYLE CHANGE-JOB.
 0053            TS     BANKSET
 0054            CA     Q
 0055  2         TCF    PRIOCH2
R0056  2         TO FREE THE DISPLAY BEFORE ENDOFJOB:
 0057  2EJFREE   TC     FREEDSP
R0058  2         TO REMOVE A JOB FROM EXECUTIVE CONSIDERATIONS:
 0059   ENDOFJOB CAF    EXECBANK
 0060            TS     FBANK
 0061  2         TCF    ENDJOB1
 0062   ENDFIND  CA     EXECTEM1        RETURN TO CALLER AFTER JOB ENTRY
 0063            TS     FBANK           COMPLETE.
 0064            INDEX  Q
 0065  2         TC     2
 0066   EXECBANK CADR   FINDVAC2
P0067  2         LOCATE AN AVAILABLE VAC AREA.
 0068  2         SETLOC ENDINTS1
 0069   FINDVAC2 TS     EXECTEM1        (SAVE CALLER'S BANK FIRST.)
 0070            CCS    VAC1USE
 0071            TCF    VACFOUND
 0072            CCS    VAC2USE
 0073            TCF    VACFOUND
 0074            CCS    VAC3USE
 0075            TCF    VACFOUND
 0076            CCS    VAC4USE
 0077            TCF    VACFOUND
 0078            CCS    VAC5USE
 0079            TCF    VACFOUND
 0080            TC     ABORT
 0081  2         OCT    1201            NO VAC AREAS.
 0082   VACFOUND AD     TWO             RESERVE THIS VAC AREA BY STORING A ZERO
 0083            ZL                     IN ITS VAC USE REGISTER AND STORE THE
 0084            INDEX  A               ADDRESS OF THE FIRST WORD OF IT IN THE
 0085            LXCH   0 -1            LOW NINE BITS OF THE PRIORITY WORD.
 0086  2         ADS    NEWPRIO
 0087   NOVAC2   CAF    ZERO            NOVAC ENTERS HERE. FIND A CORE SET.
 0088            TS     LOCCTR
 0089            CAF    NO.CORES        SEVEN SETS OF ELEVEN REGISTERS EACH.
 0090   NOVAC3   TS     EXECTEM2
 0091            INDEX  LOCCTR
 0092            CCS    PRIORITY        EACH PRIORITY REGISTER CONTAINS -0 IF
 0093            TCF    NEXTCORE        THE CORRESPONDING CORE SET IS AVAILABLE.
 0094   NO.CORES DEC    6
 0095            TCF    NEXTCORE        AN ACTIVE JOB HAS A POSITIVE PRIORITY
A0096  8                                BUT A DORMANT JOB'S PRIORITY IS NEGATIVE
 0097   CORFOUND CA     NEWPRIO         SET THE PRIORITY OF THIS JOB IN THE CORE
 0098            INDEX  LOCCTR          SET'S PRIORITY REGISTER AND SET THE
 0099            TS     PRIORITY        JOB'S PUSH-DOWN POINTER AT THE BEGINNING
 0100            MASK   LOW9            OF THE WORK AREA AND OVERFLOW INDICATOR
 0101            INDEX  LOCCTR
 0102  2         TS     PUSHLOC         OFF TO PREPARE FOR INTERPRETIVE PROGRAMS
 0103            CCS    LOCCTR          IF CORE SET ZERO IS BEING LOADED, SET UP
 0104            TCF    SETLOC          OVFIND AND FIXLOC IMMEDIATELY .
 0105            TS     OVFIND
 0106            CA     PUSHLOC
 0107  2         TS     FIXLOC
 0108   SPECTEST CCS    NEWJOB          SEE IF ANY ACTIVE JOBS WAITING (RARE).
 0109            TCF    SETLOC          MUST BE AWAKENED BUT UNCHANGED JOB.
 0110            TC     CCSHOLE
 0111            TC     CCSHOLE
 0112            TS     NEWJOB          +0 SHOWS ACTIVE JOB ALREADY SET.
 0113            DXCH   NEWLOC
 0114            DXCH   LOC
 0115  2         TCF    ENDFIND
 0116   SETLOC   DXCH   NEWLOC          SET UP THE LOCATION REGISTERS FOR THIS
 0117            INDEX  LOCCTR
 0118            DXCH   LOC
 0119            INDEX  NEWJOB          THIS INDEX INSTRUCTION INSURES THAT THE
 0120            CS     PRIORITY        HIGHEST ACTIVE PRIORITY WILL BE COMPARED
 0121            AD     NEWPRIO         WITH THE NEW PRIORITY TO SEE IF NEWJOB
 0122            EXTEND                 SHOULD BE SET TO SIGNAL A SWITCH.
 0123            BZMF   ENDFIND
 0124            CA     LOCCTR          LOCCTR IS LEFT SET AT THIS CORE SET IF
 0125            TS     NEWJOB          THE CALLER WANTS TO LOAD ANY MPAC
 0126  2         TCF    ENDFIND         REGISTERS, ETC.
 0127   NEXTCORE CAF    COREINC
 0128            ADS    LOCCTR
 0129            CCS    EXECTEM2
 0130            TCF    NOVAC3
 0131            TC     ABORT           NO CORE SETS.
 0132            OCT    1202
P0133  2         THE FOLLOWING ROUTINE SWAPS CORE SET 0 WITH THAT WHOSE RELATIVE
 0134  9 ADDRESS IS IN NEWJOB.
 0135    -1      DXCH   LOC
 0136   CHANJOB  INDEX  NEWJOB          LOC ARRIVES IN A AND BBANK IN L.
 0137            DXCH   LOC
 0138  2         DXCH   LOC
 0139            DXCH   MPAC            SWAP MULTI-PURPOSE ACCUMULATOR AREAS.
 0140            INDEX  NEWJOB
 0141            DXCH   MPAC
 0142            DXCH   MPAC
 0143            DXCH   MPAC +2
 0144            INDEX  NEWJOB
 0145            DXCH   MPAC +2
 0146            DXCH   MPAC +2
 0147            DXCH   MPAC +4
 0148            INDEX  NEWJOB
 0149            DXCH   MPAC +4
 0150            DXCH   MPAC +4
 0151            DXCH   MPAC +6
 0152            INDEX  NEWJOB
 0153            DXCH   MPAC +6
 0154  2         DXCH   MPAC +6
 0155            CAF    ZERO
 0156            XCH    OVFIND          MAKE PUSHLOC NEGATIVE IF OVFIND NZ.
 0157            EXTEND
 0158            BZF    +3
 0159            CS     PUSHLOC
 0160  2         TS     PUSHLOC
 0161            DXCH   PUSHLOC
 0162            INDEX  NEWJOB
 0163            DXCH   PUSHLOC
 0164            DXCH   PUSHLOC         SWAPS PUSHLOC AND PRIORITY.
 0165            CAF    LOW9            SET FIXLOC TO BASE OF VAC AREA.
 0166            MASK   PRIORITY
 0167  2         TS     FIXLOC
 0168            CCS    PUSHLOC         SET OVERFLOW INDICATOR ACCORDING TO
 0169            CAF    ZERO
 0170            TCF    ENDPRCHG -1
 0171            CS     PUSHLOC
 0172            TS     PUSHLOC
 0173            CAF    ONE
 0174            XCH    OVFIND
 0175  2         TS     NEWJOB
 0176   ENDPRCHG RELINT
 0177            DXCH   LOC             BASIC JOBS HAVE POSITIVE ADDRESSES, SO
 0178            EXTEND                 DISPATCH WITH A DTCB.
 0179            BZMF   +2              IF INTERPRETIVE, SET UP EBANK, ETC.
 0180  8         DTCB
 0181            COM                    EPILOGUE TO JOB CHANGE FOR INTERPRETIVE
 0182            AD     ONE
 0183            TS     LOC             RESUME.
 0184            CAF    FBANKMSK
 0185            MASK   L
 0186  2         TCF    INTRSM
R0187  2         COMPLETE JOBSLEEP PREPARATIONS.
 0188   JOBSLP1  INHINT
 0189            CS     PRIORITY        NNZ PRIORITY SHOWS JOB ASLEEP.
 0190            TS     PRIORITY
 0191            CAF    LOW7
 0192            MASK   BBANK
 0193            TS     BANKSET
 0194            CS     ZERO
 0195   JOBSLP2  TS     BUF +1          HOLDS - HIGHEST PRIORITY.
 0196            TCF    EJSCAN          SCAN FOR HIGHEST PRIORITY ALA ENDOFJOB.
P0197            TO WAKE UP A JOB, EACH CORE SET IS FOUND TO LOCATE ALL JOBS WHI
 0198  9CH ARE ASLEEP. IF THE FCADR IN THE
R0199   LOC REGISTER OF ANY SUCH JOB MATCHES THAT SUPPLIED BY THE CALLER, THAT J
 0200  9OB IS AWAKENED. IF NO JOB IS FOUND,
R0201  2LOCCTR IS SET TO -1 AND NO FURTHER ACTION TAKES PLACE.
 0202   JOBWAKE2 TS     EXECTEM1
 0203            CAF    ZERO            BEGIN CORE SET SCAN.
 0204            TS     LOCCTR
 0205            CAF    NO.CORES
 0206   JOBWAKE4 TS     EXECTEM2
 0207            INDEX  LOCCTR
 0208            CCS    PRIORITY
 0209            TCF    JOBWAKE3        ACTIVE JOB - CHECK NEXT CORE SET.
 0210   COREINC  DEC    12              12 REGISTERS PER CORE SET.
 0211  2         TCF    WAKETEST        SLEEPING JOB - SEE IF CADR MATCHES.
 0212   JOBWAKE3 CAF    COREINC
 0213            ADS    LOCCTR
 0214            CCS    EXECTEM2
 0215            TCF    JOBWAKE4
 0216            CS     ONE             EXIT IF SLEEPING JOB NOT FOUND.
 0217            TS     LOCCTR
 0218  2         TCF    ENDFIND
 0219   WAKETEST CS     NEWLOC
 0220            INDEX  LOCCTR
 0221            AD     LOC
 0222            EXTEND
 0223            BZF    +2              IF MATCH.
 0224  2         TCF    JOBWAKE3        EXAMINE NEXT CORE SET IF NO MATCH.
 0225            INDEX  LOCCTR          RE-COMPLEMENT PRIORITY TO SHOW JOB AWAKE
 0226            CS     PRIORITY
 0227            TS     NEWPRIO
 0228            INDEX  LOCCTR
 0229  2         TS     PRIORITY
 0230            CS     FBANKMSK        MAKE UP THE 2CADR OF THE WAKE ADDRESS
 0231            MASK   NEWLOC          USING THE CADR IN NEWLOC AND THE EBANK
 0232            AD     2K              HALF OF BBANK SAVED IN BANKSET.
 0233            XCH    NEWLOC
 0234            MASK   FBANKMSK
 0235            INDEX  LOCCTR
 0236            AD     BANKSET
 0237  2         TS     NEWLOC +1
 0238            CCS    LOCCTR          SPECIAL TREATMENT IF THIS JOB WAS
 0239            TCF    SETLOC          ALREADY IN THE RUN (0) POSITION.
 0240            TCF    SPECTEST
P0241  2         PRIORITY CHANGE. CHANGE THE CONTENTS OF PRIORITY AND SCAN FOR T
 0242  9HE JOB OF HIGHEST PRIORITY.
 0243   PRIOCH2  TS     LOC
 0244            CAF    ZERO            SET FLAG TO TELL ENDJOB SCANNER IF THIS
 0245            TS     BUF             JOB IS STILL HIGHEST PRIORITY.
 0246            CAF    LOW9
 0247            MASK   PRIORITY
 0248            AD     NEWPRIO
 0249            TS     PRIORITY
 0250            COM
 0251            TCF    JOBSLP2         AND TO EJSCAN.
P0252  2         RELEASE THIS CORE SET AND VAC AREA AND SCAN FOR THE JOB OF HIGH
 0253  9EST ACTIVE PRIORITY.
 0254   ENDJOB1  INHINT
 0255            CS     ZERO
 0256            TS     BUF +1
 0257            XCH    PRIORITY
 0258            MASK   LOW9
 0259            CCS    A
 0260            INDEX  A
 0261  2         TS     0
 0262   EJSCAN   CCS    PRIORITY +12D
 0263            TC     EJ1
 0264            TC     CCSHOLE
 0265  2         TCF    +1
 0266            CCS    PRIORITY +24D   EXAMINE EACH PRIORITY REGISTER TO FIND
 0267            TC     EJ1             THE JOB OF HIGHEST ACTIVE PRIORITY.
 0268            TC     CCSHOLE
 0269  2         TCF    +1
 0270            CCS    PRIORITY +36D
 0271            TC     EJ1
 0272   -CCSPR  -CCS    PRIORITY
 0273  2         TCF    +1
 0274            CCS    PRIORITY +48D
 0275            TC     EJ1
 0276            TC     CCSHOLE
 0277  2         TCF    +1
 0278            CCS    PRIORITY +60D
 0279            TC     EJ1
 0280            TC     CCSHOLE
 0281  2         TCF    +1
 0282            CCS    PRIORITY +72D
 0283            TC     EJ1
 0284            TC     CCSHOLE
 0285            TCF    +1
P0286  2         EVALUATE THE RESULTS OF THE SCAN.
 0287            CCS    BUF +1          SEE IF THERE ARE ANY ACTIVE JOBS WAITING
 0288            TC     CCSHOLE
 0289  2         TC     CCSHOLE
 0290            TCF    +2
 0291            TCF    DUMMYJOB
 0292            CCS    BUF             BUF IS ZERO IF THIS IS A PRIOCHNG AND
 0293            TCF    +2              CHANGED PRIORITY IS STILL HIGHEST.
 0294  2         TCF    ENDPRCHG
 0295            INDEX  A               OTHERWISE, SET NEWJOB TO THE RELATIVE
 0296            CAF    0 -1            ADDRESS OF THE NEW JOB'S CORE SET.
 0297            AD     -CCSPR
 0298            TS     NEWJOB
 0299  2         TCF    CHANJOB -1
 0300   EJ1      TS     BUF +2
 0301            AD     BUF +1          - OLD HIGH PRIORITY.
 0302            CCS    A
 0303            CS     BUF +2
 0304            TCF    EJ2             NEW HIGH PRIORITY.
 0305            NOOP
 0306            INDEX  Q
 0307  2         TC     2               PROCEED WITH SEARCH.
 0308   EJ2      TS     BUF +1
 0309            EXTEND
 0310            QXCH   BUF             FOR LOCATING CCS PRIORITY + X INSTR.
 0311            INDEX  BUF
 0312  2         TC     2
 0313   ENDEXECS EQUALS
P0314            IDLING AND COMPUTER ACTIVITY (GREEN) LIGHT MAINTENANCE. THE IDL
 0315  9ING ROUTINE IS NOT A JOB IN ITSELF,
R0316  2BUT RATHER A SUBROUTINE OF THE EXECUTIVE.
 0317  2         SETLOC EXECBANK +1
 0318  2         EBANK= SELFRET         SELF-CHECK STORAGE IN EBANK.
 0319   DUMMYJOB CS     ZERO            SET NEWJOB TO -0 FOR IDLING.
 0320            TS     NEWJOB
 0321            RELINT
 0322            CS     TWO             TURN OFF THE ACTIVITY LIGHT.
 0323            EXTEND
 0324            WAND   DSALMOUT
 0325  2         TCF    CHECKNJ +2
 0326   CHECKNJ  EXTEND                 SPECIAL NEWJOB TEST FOR SELF-CHECK,
 0327            QXCH   SELFRET         WHICH RUNS UNDER EXECUTIVE CONTROL,
 0328    +2      CCS    NEWJOB          BUT DOES NOT HAVE A JOBS CORE REGISTERS.
 0329            TCF    NUCHANGE        NEW JOB REQUIRING A CHANGE JOB.
 0330            CAF    TWO             NEW JOB ALREADY IN POSITION FOR
 0331  2         TCF    NUDIRECT        EXECUTION.
 0332   ADVAN    CAF    SELFBANK        (SIMULATOR ADVAN IF NEWJOB = 77777).
 0333            TS     BBANK
 0334  2         TC     SELFRET
 0335   NUDIRECT EXTEND                 TURN THE GREEN LIGHT BACK ON.
 0336            WOR    DSALMOUT
 0337            DXCH   LOC             JOBS STARTED IN THIS FASHION MUST BE
 0338  2         DTCB                   BASIC.
 0339   NUCHANGE CAF    TWO
 0340            EXTEND
 0341            WOR    DSALMOUT
 0342            CAF    EXECBANK        SWAP CORE SETS.
 0343            TS     FBANK
 0344            INHINT                 CHANGE JOBS
 0345  2         TCF    CHANJOB -1
 0346   SELFBANK BBCON  SELFCHK
P0347  2         PRIORITY CONSTANTS (NOTE IN FIXED-FIXED).
 0348   PRIO1    EQUALS BIT10
 0349   PRIO2    EQUALS BIT11
 0350   PRIO3    OCT    03000
 0351   PRIO4    EQUALS BIT12
 0352   PRIO5    OCT    05000
 0353   PRIO6    OCT    06000
 0354   PRIO7    OCT    07000
 0355   PRIO10   EQUALS BIT13
 0356   PRIO11   OCT    11000
 0357   PRIO12   OCT    12000
 0358   PRIO13   OCT    13000
 0359   PRIO14   OCT    14000
 0360   PRIO15   OCT    15000
 0361   PRIO16   OCT    16000
 0362   PRIO17   OCT    17000
 0363   PRIO20   EQUALS BIT14
 0364   PRIO21   OCT    21000
 0365   PRIO22   OCT    22000
 0366   PRIO23   OCT    23000
 0367   PRIO24   OCT    24000
 0368   PRIO25   OCT    25000
 0369   PRIO26   OCT    26000
 0370   PRIO27   OCT    27000
 0371   PRIO30   OCT    30000
 0372   PRIO31   OCT    31000
 0373   PRIO32   OCT    32000
 0374   PRIO33   OCT    33000
 0375   PRIO34   OCT    34000
 0376   PRIO35   OCT    35000
 0377   PRIO36   OCT    36000
 0378   PRIO37   OCT    37000
 0379   ENDEXECF EQUALS
L      2WAITLIST
R0001  2GROUNDRULE....DELTA T SHOULD NOT EXCEED 12000 (= 2 MINUTES)
 0002  2         SETLOC ENDEXECF
 0003  2         EBANK= LST1            TASK  LISTS IN SWITCHED E BANK.
 0004   WAITLIST XCH    Q                SAVE DELTA T IN Q AND RETURN IN
 0005            TS     WAITEXIT        WAITEXIT.
 0006            EXTEND
 0007            INDEX  A
 0008            DCA    0               PICK UP 2CADR OF TASK.
 0009            TS     WAITADR         BBCON WILL REMAIN IN L.
 0010   DLY2     CAF    WAITBB          ENTRY FROM FIXDELAY AND VARDELAY.
 0011            XCH    BBANK
 0012  2         TCF    WAIT2
R0013  2         RETURN TO CALLER AFTER TASK INSERTION:
 0014   LVWTLIST CA     WAITBANK
 0015            TS     BBANK
 0016            INDEX  WAITEXIT
 0017  2         TC     2
 0018  2WAITBB   BBCON  WAIT2
R0019  2         RETURN TO CALLER +2 AFTER WAITING DT SPECIFIED AT CALLER +1.
 0020   FIXDELAY INDEX  Q               BOTH ROUTINES MUST BE CALLED UNDER
 0021            CAF    0               WAITLIST CONTROL AND TERMINATE THE TASK
 0022  2         INCR   Q               IN WHICH THEY WERE CALLED.
R0023  2         RETURN TO CALLER +1 AFTER WAITING THE DT AS ARRIVING IN A.
 0024   VARDELAY XCH    Q               DT TO Q. TASK ADRES TO WAITADR.
 0025            TS     WAITADR
 0026            CA     BBANK           BBANK IS SAVED DURING DELAY.
 0027            TS     L
 0028            CAF    DELAYEX
 0029            TS     WAITEXIT        GO TO TASKOVER AFTER TASK ENTRY.
 0030  2         TCF    DLY2
 0031  8DELAYEX  TCF    TASKOVER -2     RETURNS TO TASKOVER
R0032  2ENDTASK MUST BE ENTERED IN FIXED-FIXED SO IT IS DISTINGUISHABLE BY ITS A
 0033  9DRES ALONE.
 0034   ENDTASK -2CADR  SVCT3
 0035   SVCT3    CCS    STATE +2        DRIFT FLAG
 00351           TCF    TASKOVER
 00352           TCF    TASKOVER
 00353 2         TCF    +1
 00354           CAF    PRIO35          COMPENSATE FOR NBD COEFFICIENTS ONLY
 00355           TC     NOVAC               ENABLE EVERY 81.93 SECONDS
 00356           2CADR  NBDONLY         EBANK IS SET TO 3
 00357           TCF    TASKOVER
P0036  2         BEGIN TASK INSERTION.
 0037  2         SETLOC ENDEXECS
 0038   WAIT2    TS     WAITBANK        BBANK OF CALLING PROGRAM.
 0039            CS     TIME3
 0040            AD     +1              CCS  A  = + 1/4
 0041            CCS    A               TEST  1/4 - C(TIME3).  IF POSITIVE,
A0042   IT MEANS THAT TIME3 OVERFLOW HAS OCCURRED PRIOR TO CS  TIME3 AND THAT
A0043   C(TIME3) = T - T1, INSTEAD OF 1.0 - (T1 - T).  THE FOLLOWING FOUR
A0044  2ORDERS SET C(A) = TD - T1 + 1 IN EITHER CASE.
 0045            AD     OCT40001        OVERFLOW HAS OCCURRED.  SET C(A) =
 0046  2         CS     A               T - T1 + 3/4 - 1
R0047  2NORMAL CASE (C(A) MINUS) YIELDS SAME C(A)  -(-(1.0-(T1-T))+1/4)-1
 0048            AD     OCT50001
 0049  2         AD     Q               RESULT = TD - T1 + 1.
 0050  2         CCS    A               TEST TD - T1 + 1
 0051            AD     LST1            IF TD - T1 POS, GO TO WTLST5 WITH
 0052  2         TCF    WTLST5          C(A) = (TD - T1) + C(LST1) = TD-T2+1
 0053            NOOP
 0054  2         CS     Q
R0055   NOTE THAT THIS PROGRAM SECTION IS NEVER ENTERED WHEN T-T1 G/E -1,
R0056   SINCE TD-T1+1 = (TD-T) + (T-T1+1), AND DELTA T = TD-T G/E +1 .  (G/E
R0057   SYMBOL MEANS GREATER THAN OR EQUAL TO).  THUS THERE NEED BE NO CON-
R0058  2CERN OVER A PREVIOUS OR IMMINENT OVERFLOW OF TIME3 HERE.
 0059            AD     POS1/2          WHEN TD IS NEXT, FORM QUANTITY
 0060            AD     POS1/2            1.0 - DELTA T = 1.0 - (TD - T)
 0061            XCH    TIME3
 0062            AD     NEGMAX
 0063            AD     Q               1.0 - DELTAT T NOW COMPLETE.
 0064            EXTEND                 ZERO INDEX Q.
 0065  8         QXCH   7               (ZQ)
 0066   WTLST4   XCH    LST1
 0067            XCH    LST1 +1
 0068            XCH    LST1 +2
 0069            XCH    LST1 +3
 0070            XCH    LST1 +4
 0071            XCH    LST1 +5
 0072            XCH    LST1 +6
 0073  2         XCH    LST1 +7
 0074            CA     WAITADR         (MINOR PART OF TASK CADR HAS BEEN IN L.)
 0075            INDEX  Q
 0076  2         TCF    +1
 0077            DXCH   LST2
 0078            DXCH   LST2 +2
 0079            DXCH   LST2 +4
 0080            DXCH   LST2 +6
 0081            DXCH   LST2 +8D
 0082            DXCH   LST2 +10D       AT END, CHECK THAT C(LST2+10) IS STD
 0083            DXCH   LST2 +12D
 0084            DXCH   LST2 +14D
 0085            DXCH   LST2 +16D
 0086            AD     ENDTASK           END ITEM, AS CHECK FOR EXCEEDING
A0087                                     THE LENGTH OF THE LIST.
 0088            EXTEND                 DUMMY TASK ADRES SHOULD BE IN FIXED-
 0089            BZF    LVWTLIST        FIXED SO ITS ADRES ALONE DISTINGUISHES
 0090  8         TCF    WTABORT         IT.
 0091   WTLST5   CCS    A               TEST  TD - T2 + 1
 0092            AD     LST1 +1
 0093            TCF    +4
 0094            AD     ONE
 0095            TC     WTLST2
 0096  2         OCT    1
 0097   +4       CCS    A               TEST  TD - T3 + 1
 0098            AD     LST1 +2
 0099            TCF    +4
 0100            AD     ONE
 0101            TC     WTLST2
 0102  2         OCT    2
 0103   +4       CCS    A               TEST  TD - T4 + 1
 0104            AD     LST1 +3
 0105            TCF    +4
 0106            AD     ONE
 0107            TC     WTLST2
 0108  2         OCT    3
 0109   +4       CCS    A               TEST  TD - T5 + 1
 0110            AD     LST1 +4
 0111            TCF    +4
 0112            AD     ONE
 0113            TC     WTLST2
 0114  2         OCT    4
 0115   +4       CCS    A               TEST  TD - T6 + 1
 0116            AD     LST1 +5
 0117            TCF    +4
 0118            AD     ONE
 0119            TC     WTLST2
 0120  2         OCT    5
 0121    +4      CCS    A               TEST TD - T7 + 1
 0122            AD     LST1 +6
 0123            TCF    +4
 0124            AD     ONE
 0125            TC     WTLST2
 0126  8         OCT    6
 0127    +4      CCS    A
 0128            AD     LST1 +7
 0129            TCF    +4
 0130            AD     ONE
 0131            TC     WTLST2
 0132  2         OCT    7
 0133    +4      CCS    A
 0134   WTABORT  TC     ABORT           NO ROOM IN THE INN.
 0135  2         OCT    1203
 0136            AD     ONE
 0137            TC     WTLST2
 0138  2         OCT    10
 0139   OCT50001 OCT    50001
P0140   THE ENTRY TO WTLST2 JUST PRECEDING OCT  N  IS FOR T  LE TD LE T   -1.
R0141  2                                                   N           N+1
R0142   (LE MEANS LESS THAN OR EQUAL TO).  AT ENTRY, C(A) = -(TD - T   + 1)
R0143  2                                                            N+1
R0144   THE LST1 ENTRY -(T   - T +1) IS TO BE REPLACED BY -(TD - T + 1), AND
R0145  2                  N+1   N                                 N
R0146   THE ENTRY -(T   - TD + 1) IS TO BE INSERTED IMMEDIATELY FOLLOWING.
R0147  2             N+1
 0148   WTLST2   TS     WAITTEMP            C(A) = -(TD - T   + 1)
 0149            INDEX  Q
 0150            CAF    0
 0151  2         TS     Q               INDEX VALUE INTO Q.
 0152            CAF    ONE
 0153            AD     WAITTEMP
 0154            INDEX  Q               C(A) = -(TD - T ) + 1.
 0155  2         ADS    LST1 -1                        N
 0156            CS     WAITTEMP
 0157            INDEX  Q
 0158  2         TCF    WTLST4
R0159  2C(TIME3) = 1.0 - (T1 - T)
R0160   C(LST1  ) = - (T2 - T1) + 1
R0161   C(LST1+1) = - (T3 - T2) + 1
R0162   C(LST1+2) = - (T4 - T3) + 1
R0163   C(LST1+3) = - (T5 - T4) + 1
R0164  2C(LST1+4) = - (T6 - T5) + 1
R0165   C(LST2   ) = 2CADR  TASK1
R0166   C(LST2+2 ) = 2CADR  TASK2
R0167   C(LST2+4 ) = 2CADR  TASK3
R0168   C(LST2+6 ) = 2CADR  TASK4
R0169   C(LST2+8 ) = 2CADR  TASK5
R0170   C(LST2+10) = 2CADR  TASK6
P0171  2         ENTERS HERE ON T3 RUPT TO DISPATCH WAITLISTED TASK.
 0172   T3RUPT   TS     BANKRUPT
 0173            EXTEND
 0174  2         QXCH   QRUPT
 0175   T3RUPT2  CAF    NEG1/2          DISPATCH WAITLIST TASK.
 0176            XCH    LST1 +7
 0177            XCH    LST1 +6
 0178            XCH    LST1 +5
 0179            XCH    LST1 +4         1.  MOVE UP LST1 CONTENTS, ENTERING
 0180            XCH    LST1 +3             A VALUE OF 1/2 +1 AT THE BOTTOM
 0181            XCH    LST1 +2             FOR T6-T5, CORRESPONDING TO THE
 0182            XCH    LST1 +1             INTERVAL 81.91 SEC FOR ENDTASK.
 0183            XCH    LST1
 0184            AD     POSMAX          2. SET T3 = 1.0 - T2 -T USING LIST 1.
 0185            ADS    TIME3           SO T3 WONT TICK DURING UPDATE.
 0186            TS     RUPTAGN
 0187            CS     ZERO
 0188  2         TS     RUPTAGN         SETS RUPTAGN TO +1 ON OVERFLOW.
 0189            EXTEND                 DISPATCH TASK.
 0190            DCS    ENDTASK
 0191            DXCH   LST2 +16D
 0192            DXCH   LST2 +14D
 0193            DXCH   LST2 +12D
 0194            DXCH   LST2 +10D
 0195            DXCH   LST2 +8D
 0196            DXCH   LST2 +6
 0197            DXCH   LST2 +4
 0198            DXCH   LST2 +2
 0199  2         DXCH   LST2
 0200  2         DTCB
 0201   ENDWAITS EQUALS
P0202  2         RETURN, AFTER EXECUTION OF T3 OVERFLOW TASK:
 0203            BLOCK  02
 0204   TASKOVER CCS    RUPTAGN         IF +1 RETURN TO T3RUPT, IF -0 RESUME.
 0205            CAF    WAITBB
 0206            TS     BBANK
 0207  2         TCF    T3RUPT2         DISPATCH NEXT TASK IF IT WAS DUE.
 0208   RESUME   EXTEND
 0209            QXCH   QRUPT
 0210   NOQRSM   CA     BANKRUPT
 0211            TS     BBANK
 0212   NOQBRSM  DXCH   ARUPT
 0213  2         RESUME
 0214   ENDWAITF EQUALS                 LAST FIXED-FIXED LOCATION OF T3RUPT.
L      2PHASE TABLE MAINTENANCE
R0001  2         THE FOLLOWING ROUTINES ARE PROVIDED TO MAINTAIN THE PHASE TABLE
 0002  9. TWO ROUTINES ARE AVAILABLE:
A0003            TC     PHASCHNG        SLOWER BUT LESS STORAGE.
A0004            OCT    PPPGG           CHANGE RESTART GROUP GG TO PHASE PPP
A0005  2                                (PPP IS A SIGNED 8 BIT NUMBER).
A0006            CA     PPPPP           NEW PHASE ARRIVES IN A.
A0007            TC     NEWPHASE
A0008  2         OCT    000GG           UPDATES GG.
R0009            IN ALL CASES THE OLD PHASE RETURNS IN A. IF THE OLD PHASE WAS N
 0010  9EGATIVE, CALL A ROUTINE USING THE
R0011  2CORRESPONDING TERMCADR.
 0012  2         SETLOC ENDWAITF
 0013   PHASCHNG INHINT
 0014            INDEX  Q
 0015            CAF    0               GET PARAMETER WORD.
 0016            TS     RUPTREG4
 0017            MASK   LOW5            GROUP NUMBER 0 - 37.
 0018            DOUBLE
 0019            XCH    RUPTREG4
 0020            EXTEND
 0021            MP     BIT9            SIGNED NEW PHASE.
 0022  2         TCF    PHASCH2
 0023   NEWPHASE INHINT                 NEW PHASE ARRIVES IN A.
 0024            TS     RUPTREG4
 0025            INDEX  Q
 0026            CAF    0               GROUP NUMBER.
 0027            DOUBLE
 0028  2         XCH    RUPTREG4
 0029   PHASCH2  TS     L               DIRECT VERSION.
 0030            COM                    COMPLEMENTED VERSION IMMEDIATELY PRE-
 0031            INDEX  RUPTREG4        CEDES THE DIRECT ONE.
 0032            DXCH   -PHASE0         COPIES DISAGREE FOR MINIMUM TIME.
 0033            EXTEND
 0034  8         BZMF   PHASEXIT        IF NO DERAIL.
 0035            TS     RUPTREG1        IF NEGATIVE, SAVE ABSOLUTE VALUE OF
 0036            EXTEND                 OLD PHASE AND RETURN Q.
 0037            QXCH   RUPTREG2
 0038            CA     RUPTREG4        GET BACK GROUP NUMBER.
 0039            EXTEND
 0040            MP     HALF
 0041            INDEX  A               SELECT TERMCADR.
 0042            CAF    TERMCADR
 0043  2         TC     ISWCALL
 0044            DXCH   RUPTREG1        -OLD PHASE BITS TO A - RETURN -1 TO L.
 0045  2         LXCH   Q
 0046   PHASEXIT COM                    RETURN OLD PHASE IN A.
 0047            RELINT
 0048            INDEX  Q
 0049  2         TC     1
 0050   TERMCADR CADR   10000           FILLED IN AS NEEDED.
 0051            CADR   10000
 0052            CADR   10000
 0053            CADR   10000
 0054            CADR   10000
 0055            CADR   10000
P0056  2         SUBROUTINE TO UPDATE THE PROGRAM NUMBER DISPLAY ON THE DSKY.
 0057   NEWMODEX INDEX  Q               UPDATE MODREG.
 0058            CAF    0
 0059            INCR   Q
 0060            XCH    MODREG
 0061            COM                    IF NO CHANGE IN MODE, RETURN IMMEDIATELY
 0062            AD     MODREG
 0063            EXTEND
 0064  2         BZF    TCQ
 0065            CAF    +2              CALL PINBALL SUBROUTINE.
 0066  2         TCF    SWCALL          WITH Q SET TO CALLERS RETURN.
 0067  2         CADR   DSPMM
R0068  2         RETURN TO CALLER +3 IF MODE = THAT AT CALLER +1. OTHERWISE RETU
 0069  9RN TO CALLER +2.
 0070   CHECKMM  INDEX  Q
 0071            CS     0
 0072            AD     MODREG
 0073            EXTEND
 0074  2         BZF    +3
 0075            INDEX  Q
 0076  2         TC     1               NO MATCH.
 0077            INDEX  Q
 0078  2TCQ      TC     2               (ALWAYS AVAILABLE TO BZF & BZMF)
 0079   ENDPHMNF EQUALS
L      2FRESH START AND RESTART
 0001            BANK   12
 0002  2         EBANK= LST1
 0003   SLAP1    INHINT                 FRESH START. COMES HERE FROM PINBALL.
 0008  2         TC     STARTSUB        SUBROUTINE DOES MOST OF THE WORK.
 0009            CAF    BIT15           TURN OFF ALL DSPTAB +11D LAMPS ONLY ON
 0010  2         TS     DSPTAB +11D     REQUESTED FRESH START.
 0011            CAF    ZERO            SAME STORY ON ZEROING FAILREG.
 0012  2         TS     FAILREG
 0019   DOFSTART CAF    ZERO            DO A FRESH START.
 0020            TS     SMODE
 0021            TS     MODREG
 0022            TS     AGSWORD         ALLOW AGS INITIALIZATION
 0023  2         TS     UPLOCK          FREE UPLINK INTERLOCK
 00231           TS     CDUX            ZERO CDUS SO MATRIX COMPUTATION IN T4
 00232           TS     CDUY            WONT OVERFLOW.
 00233 2         TS     CDUZ
 0024            TS     PHASE0          INITIALIZE PHASE TABLE - NO MISSION
 0025            TS     PHASE1          PROGRAMS RUNNING.
 0026            TS     PHASE2
 0027            TS     PHASE3
 0028            TS     PHASE4
 0029  2         TS     PHASE5
 0030            COM
 0031            TS     -PHASE0
 0032            TS     -PHASE1
 0033            TS     -PHASE2
 0034            TS     -PHASE3
 0035            TS     -PHASE4
 0036  2         TS     -PHASE5
 0037            CAF    IM30INIF        FRESH START IMU INITIALIZATION.
 0038  2         TS     IMODES30
 0039            CAF    BIT10           REMOVE IMU FAIL INHIBIT IN 5 SECS.
 0040            TC     WAITLIST
 0041            2CADR  IFAILOK
 0042            EXTEND                 SETTING T5RUPT FOR SETIDLER PROGRAM
 0043            DCA    SETADR          THE SETIDLER PROGRAM ASSURES 1 SECOND
 0043012         DXCH   T5ADR           DELAY BEFORE THE DAPIDLER BEGINS.
 004401          CAF    OCT04012        INITIALIZE DAPBOOLS
 0044022         TS     DAPBOOLS
 0045            EXTEND                 INITIALIZE SWITCHES ONLY ON FRESH START.
 0046            DCA    SWINIT
 0047            DXCH   STATE
 0048            EXTEND
 0049            DCA    SWINIT +2
 0050  2         DXCH   STATE +2
 0051   ENDRSTRT CAF    BIT6            IF GIMBAL LOCK LAMP IS STILL ON,
 0052            MASK   DSPTAB +11D     IMU WAS FOUND IN GIMBAL LOCK IN RESTART
 0053            CCS    A               AND LEFT IN COARSE ALIGN. IN THIS CASE
 0054            CS     BIT9            SET ISS OPERATE BIT IN IMODES30 TO
 0055  2         ADS    IMODES30        OPERATE SO T4 INBIT MONITOR WONT ZERO
 0056            RELINT                 THE CDUS AS IT DOES IN FRESH START.
 0057            TC     BANKCALL        DISPLAY MAJOR MODE.
 0058  2         CADR   DSPMM
 0059  2STARTSW  TCF    DUMMYJOB +2     PATCH FOR SIMULATION.
 0060   STARTSIM CAF    BIT14
 0061            TC     FINDVAC
 0062            OCT    77777           FATAL IF NOT PATCHED AS ABOVE.
 0063  2         OCT    77777
 0064            TCF    DUMMYJOB +2     DONT ZERO NEWJOB
P0065  2         COMES HERE FROM LOCATION 4000, GOJAM. RESTART ANY PROGRAMS WHIC
 0066  9H MAY HAVE BEEN RUNNING AT THE TIME.
 0067  2GOPROG   INCR   REDOCTR         ADVANCE RESTART COUNTER.
 0068  2         TC     STARTSUB        COMMON INITIALIZATION ROUTINE.
 0069            CAF    9,6             LEAVE PROGRAM ALARM AND GIMBAL LOCK
 0070            MASK   DSPTAB +11D     LAMPS INTACT ON RESTART.
 0071            AD     BIT15
 0072            XCH    DSPTAB +11D
 0073            MASK   BIT6
 0074            CCS    A               IF GIMBAL LOCK LAMP WAS ON, LEAVE ISS IN
 0075            CAF    BIT4            COARSE ALIGN.
 0076            EXTEND
 0077  2         WOR    12
 007701          EXTEND                 SETTING T5RUPT FOR DAPIDLER PROGRAM
 007702          DCA    IDLEADR
 007703          DXCH   T5ADR
 0078            CAF    PRIO37          DISPLAY FAILREG AS INDICATION OF RESTART
 0079            TC     NOVAC           OR TO DISPLAY ABORT CODE AS ABOVE.
 0080            2CADR  DOALARM
 0081            EXTEND                 DONT TRY TO RESTART IF ERROR LIGHT RESET
 0082            READ   15              AND MARK REJECT BUTTONS DEPRESSED.
 0083            AD     -ELR
 0084            EXTEND
 0085            BZF    +2
 0086  2         TCF    PCLOOP -1       VERIFY PHASE TABLE.
 0087            CAF    BIT5
 0088            EXTEND
 0089            RAND   16
 0090            AD     -MKREJ
 0091            EXTEND
 0092  2         BZF    DOFSTART
 0093    -1      CAF    NUMGRPS         VERIFY PHASE TABLE AGREEMENT.
 0094   PCLOOP   TS     MPAC +5
 0095            DOUBLE
 0096            EXTEND
 0097            INDEX  A
 0098            DCA    -PHASE0         COMPLEMENT INTO A - DIRECT INTO L.
 0099            EXTEND
 0100            RXOR   L               RESULT MUST BE -0 FOR AGREEMENT.
 0101            CCS    A
 0102            TCF    PTBAD           RESTART FAILURE.
 0103            TCF    PTBAD
 0104  2         TCF    PTBAD
 0105            CCS    MPAC +5         PROCESS ALL RESTART GROUPS.
 0106  2         TCF    PCLOOP
 0107            TS     MPAC +6         SET TO +0.
 0108            CAF    NUMGRPS         SEE IF ANY GROUPS RUNNING.
 0109   NXTRST   TS     MPAC +5
 0110            DOUBLE
 0111            INDEX  A
 0112            CCS    PHASE0
 0113            TCF    PACTIVE         PNZ - GROUP ACTIVE.
 0114  2         TCF    PINACT          +0 - GROUP NOT RUNNING.
 0115   PTERM    TS     MPAC            NNZ - TERMINATE REQUEST.
 0116            INDEX  MPAC +5         PICK UP RESTART TERMINATE CADR.
 0117  2         CAF    RTERMCAD
 0118   PACT2    TS     L
 0119            INCR   MPAC            ABS OF PHASE.
 0120            CS     LOW7            SEE THAT MAG IS LESS THAN 128.
 0121            MASK   MPAC
 0122            CCS    A
 0123  2         TCF    PTBAD           BAD DATA.
 0124            INCR   MPAC +6         INDICATE GROUP DEMANDS PRESENT.
 0125            CA     L
 0126  2         TC     SWCALL          MUST RETURN TO SWRETURN.
 0127   PINACT   CCS    MPAC +5         PROCESS ALL RESTART GROUPS.
 0128  2         TCF    NXTRST
 0142   TSTMPAC6 CCS    MPAC +6         IF NO GROUPS ACTIVE THIS REQUEST, DO A
 0143            TCF    DORSTART
 0144  2         TCF    DOFSTART        FRESH START
 0145   PACTIVE  TS     MPAC
 0146            INDEX  MPAC +5         SELECT RESTART ACTIVE CADR.
 0147            CAF    RACTCADR
 0148  2         TCF    PACT2
 0149   PTBAD    CAF    OCT1107         SET ADDITIONAL FAILURE TO SHOW PHASE
 0150            TS     SFAIL           TABLE DISAGREEMENT (WILL BE DISPLAYED
 0151  2         TCF    DOFSTART        IN R2).
 0152  2OCT1107  OCT    1107            ADDITIONAL ALARM CODE.
 0153   DORSTART CAF    IFAILINH        LEAVE IMU FAILURE INHIBITS INTACT ON
 0154            MASK   IMODES30        RESTART, RESETTING ALL FAILURE CODES.
 0155            AD     IM30INIR
 0156  2         TS     IMODES30
 0157            TCF    ENDRSTRT
P0164  2         INITIALIZATION COMMON TO BOTH FRESH START AND RESTART.
 0165   STARTSUB XCH    Q
 0166  2         TS     BUF             EXEC TEMPS ARE AVAILABLE TO US.
 0167            CAF    ZERO            ZERO OUTBITS WITHIN 3MS OF RESTART.
 0168            EXTEND
 0169            WRITE  12
 0170            EXTEND
 0171            WRITE  14
 0172            EXTEND
 0173            WRITE  11
 0174            CAF    PRIO34          ENABLE INTERRUPTS.
 0175            EXTEND
 0176  2         WRITE  13
 0177            CAF    POSMAX          T3 AND T4 OVERFLOW AS SOON AS POSSIBLE.
 0178            TS     TIME5           SO DOES T5.
 0179            TS     TIME3             (POSMAX IS PSEUDO INTERRUPT SIGNAL IN
 0180  2         TS     TIME4             CASE RUPT SIGNALLED BEFORE TS TIME3).
 0181            CAF    STARTEB
 0182  2         TS     EBANK           SET FOR E3
 0183            CAF    NEG1/2          INITIALIZE WAITLIST DELTA-TS.
 0184            TS     LST1 +7
 0185            TS     LST1 +6
 0186            TS     LST1 +5
 0187            TS     LST1  +4
 0188            TS     LST1  +3
 0189            TS     LST1  +2
 0190            TS     LST1  +1
 0191  2         TS     LST1
 0192            CS     ENDTASK
 0193            TS     LST2
 0194            TS     LST2 +2
 0195            TS     LST2 +4
 0196            TS     LST2 +6
 0197            TS     LST2 +8D
 0198            TS     LST2 +10D
 0199            TS     LST2 +12D
 0200            TS     LST2 +14D
 0201            TS     LST2 +16D
 0202            CS     ENDTASK +1
 0203            TS     LST2 +1
 0204            TS     LST2 +3
 0205            TS     LST2 +5
 0206            TS     LST2 +7
 0207            TS     LST2 +9D
 0208            TS     LST2 +11D
 0209            TS     LST2 +13D
 0210            TS     LST2 +15D
 0211  2         TS     LST2 +17D
 0212            CS     ZERO            MAKE ALL EXECUTIVE REGISTER SETS
 0213            TS     PRIORITY        AVAILABLE.
 0214            TS     PRIORITY +12D
 0215            TS     PRIORITY +24D
 0216            TS     PRIORITY +36D
 0217            TS     PRIORITY +48D
 0218            TS     PRIORITY +60D
 0219  2         TS     PRIORITY +72D
 0220  2         TS     NEWJOB          SHOWS NO ACTIVE JOBS.
 0221            CAF    VAC1ADRC        MAKE ALL VAC AREAS AVAILABLE.
 0222            TS     VAC1USE
 0223            AD     LTHVACA
 0224            TS     VAC2USE
 0225            AD     LTHVACA
 0226            TS     VAC3USE
 0227            AD     LTHVACA
 0228            TS     VAC4USE
 0229            AD     LTHVACA
 0230  2         TS     VAC5USE
 0231            CAF    TEN             TURN OFF ALL DISPLAY SYSTEM RELAYS.
 0232            TS     DIDFLG          DISPLAY INERTIAL DATA FLAG.
 0233   DSPOFF   TS     MPAC
 0234            CS     BIT12
 0235            INDEX  MPAC
 0236            TS     DSPTAB
 0237            CCS    MPAC
 0238  2         TC     DSPOFF
 0239            TS     INLINK
 0240            TS     DSPCNT
 0241            TS     LMPCMD
 0242            TS     CADRSTOR
 0243            TS     REQRET
 0244            TS     CLPASS
 0245            TS     DSPLOCK
 0246            TS     MONSAVE         KILL MONITOR
 0247            TS     MONSAVE1
 0248            TS     GRABLOCK
 0249            TS     VERBREG
 0250            TS     NOUNREG
 0251            TS     DSPLIST
 0252            TS     DSPLIST +1
 0253  2         TS     DSPLIST +2
 0254            TS     MARKSTAT
 0255            TS     EXTVBACT        MAKE EXTENDED VERBS AVAILABLE
 0256            TS     IMUCADR
 0257            TS     OPTCADR
 0258            TS     RADCADR
 0259            TS     LGYRO
 0260            TS     DSRUPTSW
 0261            CAF    NOUTCON
 0262  2         TS     NOUT
 0263            CS     ONE             NO RADAR DESIGNATION.
 0264  2         TS     SAMPLIM         NO RADAR RUPTS EXPECTED.
 0265            CAF    T4LINIT
 0266  2         TS     T4LOC
 0267            CAF    IM33INIT        NO PIP OR TM FAILS.
 0268  2         TS     IMODES33
 0269            CAF    BIT6            SET LR POS.
 0270            EXTEND
 0271            RAND   33
 0272            AD     RMODINIT
 0273  2         TS     RADMODES
 0274            CAF    LESCHK          SELF CHECK GO-TO REGISTER.
 0275            TS     SELFRET
 0276            CS     VD1
 0277            TS     DSPCOUNT
 0278  2         EBANK= DNTMGOTO
 0279            CAF    LDNTMGO         SET UP TM PROGRAM.
 0280  2         TS     EBANK
 0281            CAF    LDNPHAS1
 0282  2         TS     DNTMGOTO
 0283            CAF    NOMTMLST        SET UP NOMINAL DOWNLINK LIST.
 0284  2         TS     DNLSTADR
 0285  2         TC     BUF
 0289   IFAILINH OCT    35              ISS FAILURE INHIBIT BITS.
 0290   LDNPHAS1 GENADR DNPHASE1
 0291   LDNTMGO  ECADR  DNTMGOTO
 0292   NOMTMLST GENADR NOMDNLST
 0293   LESCHK   GENADR SELFCHK
 0294   T4LINIT  ADRES  DSKYRSET
 0295   VAC1ADRC ADRES  VAC1USE
 0296  2LTHVACA  DEC    44
 0297   STARTEB  ECADR  LST1
 0298  2NUMGRPS  EQUALS FIVE            SIX GROUPS CURRENTLY.
R0299  2         WHERE TO GO ON RESTART IF GROUP ACTIVE:
 0300   RACTCADR CADR   10000           AVAILABLE FOR USE-NEXT ONE USED
 0301            CADR   OPTMSTRT         RESTARTS DURING OPTM ALIGN CALIBRATION
 0302            CADR   10000
 0303            CADR   10000
 0304            CADR   10000
 0305  2         CADR   10000
R0306  2         WHERE TO GO ON RESTART IF TERMINATE REQUESTED.
 0307   RTERMCAD CADR   10000
 0308            CADR   10000
 0309            CADR   10000
 0310            CADR   10000
 0311            CADR   10000
 0312  2         CADR   10000
 0313   -ELR     OCT    -22             -ERROR LIGHT RESET KEY CODE.
 0314   -MKREJ   OCT    -20             - MARK REJECT.
 0315   IM30INIF OCT    37411           INHIBITS IMU FAIL FOR 5 SEC AND PIP ISSW
 0316   IM30INIR OCT    37400           LEAVE FAIL INHIBITS ALONE.
 0317   IM33INIT OCT    16000           NO PIP OR TM FAIL SIGNALS.
 0318   9,6      OCT    440             MASK FOR PROG ALARM AND GIMBAL LOCK.
 0319  2RMODINIT OCT    00102
 031911          EBANK= DT
 031912 IDLEADR  2CADR  DAPIDLER
 031913          EBANK= DT
 031914 SETADR   2CADR  SETIDLE
 0320   SWINIT   OCT    0
 0321            OCT    0
 0322            OCT    0
 0323  2         OCT    0
 0324   OCT04012 OCTAL  04012           INITIAL VALUE OF DAPBOOLS
 0325   ENDFRESS EQUALS
L      2T4RUPT PROGRAM
 0001  2         SETLOC ENDPHMNF
 0002            EBANK= M11
 0003   T4RUPT   EXTEND                 ZERO OUT0 EVERY T4RUPT.
 0004  2         WRITE  OUT0            (COMES HERE WITH +0 IN A)
 0005            INDEX  T4LOC           NORMALLY TO NORMT4, BUT TO LMPRESET OR
 0006  2         TCF    0               DSKYRSET AFTER OUT0 COMMAND.
 0007   NORMT4   CCS    DSRUPTSW        GOES 7(-1)0.
 0008            TCF    +2
 0009            CAF    SEVEN
 0010  2         TS     DSRUPTSW
 0011            CAF    T4RPTBB         OFF TO SWITCHED BANK
 0012            XCH    BBANK
 0013  2         TCF    T4RUPTA
 0014   LMPRESET CAF    90MRUPT         30 MS ON / 90 MS OFF.
 0015  2         TCF    +2
 0016   DSKYRSET CAF    100MRUPT        20 MS ON / 100 MS OFF.
 0017            TS     TIME4
 0018            CAF    LNORMT4
 0019            TS     T4LOC
 0020  2         TCF    NOQBRSM
 0021   90MRUPT  DEC    16375
 0022   100MRUPT DEC    16374
 0023   LNORMT4  ADRES  NORMT4
 0024  274K      OCT    74000
R0025   RELTAB IS A PACKED TABLE. RELAYWORD CODE IN UPPER 4 BITS, RELAY CODE
R0026  2IN LOWER 5 BITS.
 0027   RELTAB   OCT    04025
 0028            OCT    10003
 0029            OCT    14031
 0030            OCT    20033
 0031            OCT    24017
 0032            OCT    30036
 0033            OCT    34034
 0034            OCT    40023
 0035            OCT    44035
 0036            OCT    50037
 0037            OCT    54000
 0038  4RELTAB11 OCT    60000
 0039  4ENDT4FF  EQUALS
P0040  2         SWITCHED-BANK PORTION.
 0041  2         SETLOC ENDFRESS
 0042   T4RUPTA  TS     BANKRUPT
 0043            EXTEND
 0044  2         QXCH   QRUPT
 0045   LMPOUT   CCS    LMPCMD          SEE IF LMP COMMAND TO BE SENT. IF SO,
 0046            TCF    CDRVE           BIT 15 = 1 AND (UP TO) BITS 1 - 11
 0047  2         TCF    CDRVE           CONTAIN THE COMMAND.
 0048            CAF    LOW11
 0049            MASK   LMPCMD          LEAVE COMMAND PORTION INTACT.
 0050            TS     LMPCMD
 0051            AD     74K
 0052            EXTEND
 0053  2         WRITE  OUT0
 0054            CAF    LLMPRS
 0055            TS     T4LOC
 0056            CAF    30MRUPT
 0057  2         TCF    SETTIME4
 0058   CDRVE    CCS    DSPTAB +11D
 0059            TC     DSPOUT
 0060  2         TC     DSPOUT
 0061            XCH    DSPTAB +11D
 0062            MASK   LOW11
 0063            TS     DSPTAB +11D
 0064            AD     RELTAB11
 0065            TC     DSPLAYC
P0066  2DSPOUT PROGRAM. PUTS OUT DISPLAYS.
 0067   DSPOUT   CCS    NOUT            DRIVE DISPLAY SYSTEM RELAYS.
 0068  2         TCF    +3
 0069   NODSPOUT CAF    120MRUPT        SET FOR RUPT IN 120 MS IF NO RELAYS.
 0070  2         TCF    SETTIME4
 0071            TS     NOUT
 0072            CS     ZERO
 0073            TS     DSRUPTEM        SET TO -0 FOR 1ST PASS THRU DSPTAB
 0074            XCH    DSPCNT
 0075            AD     NEG0            TO PREVENT +0
 0076            TS     DSPCNT
 0077   DSPSCAN  INDEX  DSPCNT
 0078            CCS    DSPTAB
 0079            CCS    DSPCNT          IF DSPTAB ENTRY +, SKIP
 0080            TC     DSPSCAN -2      IF DSPCNT +, AGAIN
 0081            TC     DSPLAY          IF DSPTAB ENTRY -, DISPLAY
 0082   TABLNTH  OCT    12              DEC 10   LENGTH OF DSPTAB
 0083            CCS    DSRUPTEM        IF DSRUPTEM=+0,2ND PASS THRU DSPTAB
 0084   120MRUPT DEC    16372           (DSPCNT = 0). +0 INTO NOUT.
 0085            TS     NOUT
 0086            TCF    NODSPOUT
 0087            TS     DSRUPTEM        IF DSRUPTEM=-0,1ST PASS THRU DSPTAB
 0088            CAF    TABLNTH         (DSPCNT=0). +0 INTO DSRUPTEM. PASS AGAIN
 0089  2         TC     DSPSCAN -1
 0090   DSPLAY   AD     ONE
 0091            INDEX  DSPCNT
 0092            TS     DSPTAB          REPLACE POSITIVELY
 0093            MASK   LOW11           REMOVE BITS 12 TO 15
 0094            TS     DSRUPTEM
 0095            CAF    HI5
 0096            INDEX  DSPCNT
 0097            MASK   RELTAB          PICK UP BITS 12 TO 15 OF RELTAB ENTRY
 0098            AD     DSRUPTEM
 0099   DSPLAYC  EXTEND
 0100  2         WRITE  OUT0
 0101            CAF    LDSKYRS
 0102            TS     T4LOC
 0103  2         CAF    20MRUPT
 0104   SETTIME4 TS     TIME4
P0105  2         JUMP TO APPROPRIATE ONCE-PER SECOND (.96 SEC ACTUALLY) ACTIVITY
 0106   T4JUMP   INDEX  DSRUPTSW
 0107  2         TCF    +1
 0108  2         TC     ALTOUT
 0109            TCF    RRAUTCHK
 0110            TCF    IMUMON
 0111            TCF    GPMATRIX
 0112            TC     ALTROUT
 0113            TCF    RRAUTCHK
 0114            TCF    IMUMON
 0115            TCF    GPMATRIX
 0116   LDSKYRS  ADRES  DSKYRSET
 0117  2LLMPRS   ADRES  LMPRESET
 0118   30MRUPT  DEC    16381
 0119   20MRUPT  DEC    16382
P0120  4THIS ROUTINE SERVICES THE METER OUTPUTS.
R0121   DIDFLG INDICATES THE STATE OF THE PROGRAM..............
R0122   IF GREATER THAN ZERO, THEN UNABLE TO DISPLAY DATA
R0123   IF EQUAL TO ZERO, THEN THE PROGRAM IS IN USE
R0124  2IF LESS THAN ZERO, THEN THE PROGRAM IS ABLE TO BE USED............
 0125   ALTOUT   TC     DISINDAT
 0126            CS     BIT2
 0127            EXTEND
 0128            WAND   14              SET UP OUTPUT FOR ALTITUDE
 0129            CCS    ALT             -1 IF OLD DATA TO BE EXTRAPOLATED.
 0130            TCF    +4              NEW DATA.
 0131            TCF    +3
 0132  2         TCF    OLDDATA
 0133            TS     ALT             CHANGE -0 IN ALT TO +0.
 0134            CS     ONE             RESET ALTSAVE.
 0135            DXCH   ALT
 0136   ZDATA2   DXCH   ALTSAVE
 0137  2         TCF    NEWDATA
 0138   OLDDATA  CA     ALTRATE         USE ALTRATE TO EXTRAPOLATE.
 0139            EXTEND
 0140            MP     ARTOA           RATE APPLIES FOR .96 SEC.
 0141            AD     ALTSAVE +1
 0142            TS     ALTSAVE +1      AND MAYBE SKIP.
 0143            CAF    ZERO
 0144  2         ADS    ALTSAVE
 0145            CAF    POSMAX          FORCE SIGN AGREEMENT ASSUMING ALTSAVE IS
 0146            AD     ONE             NOT NEGATIVE. IF IT IS, THE FINAL TS
 0147            AD     ALTSAVE +1      WILL NOT SKIP AND WE CAN SET ALTSAVE TO
 0148            TS     ALTSAVE +1      ZERO IN THAT CASE.
 0149            CAF    ZERO
 0150            AD     POSMAX
 0151            AD     ALTSAVE
 0152            TS     ALTSAVE
 0153  2         TCF    ZERODATA        ALTSAVE NEGATIVE - SET TO ZERO.
 0154   NEWDATA  CCS    ALTSAVE         MAKE UP 15 BIT UNSIGNED OUTPUT.
 0155            CAF    BIT15           MAJOR PART +1 OR +0.
 0156            AD     ALTSAVE +1
 0157   METEROUT TS     ALTM
 0158            CAF    BITSET
 0159            EXTEND
 0160            WOR    14
 0161  2         TCF    DONEDID
 0162   ALTROUT  TC     DISINDAT
 0163            CAF    BIT2
 0164            EXTEND
 0165            WOR    14              SET UP OUTPUT FOR ALT. RATE
 0166            CA     ALTRATE
 0167  2         TCF    METEROUT
 0168   DISINDAT CCS    DIDFLG
 0169            TCF    DONEDID
 0170            NOOP
 0171            CAF    BIT6
 0172            EXTEND
 0173            RAND   30              CHECK DISPLAY INERTIAL DATA BIT
 0174            CCS    A
 0175            TCF    ALLDONE
 0176            CCS    DIDFLG
 0177            NOOP
 0178  2         TCF    GOAGN
 0179   FIRSTIME CAF    BIT8
 0180            EXTEND
 0181            WOR    12              ENABLE DISPLAY INERTIAL DATA
 0182            CAF    ZERO
 0183            TS     DIDFLG
 0184            TS     LASTXCMD
 0185            TS     LASTYCMD
 0186            CAF    SIX
 0187            TC     WAITLIST
 0188            2CADR  INTLZE
 0189  2         TC     DONEDID
 0190   INTLZE   CAF    BIT2
 0191            EXTEND
 0192            WOR    12              ENABLE RR ERROR COUNTER
 0193  2         TC     TASKOVER
 0194   GOAGN    CS     LASTXCMD
 0195            AD     FORVEL
 0196            TS     OPTXCMD
 0197            CA     FORVEL
 0198            TS     LASTXCMD
 0199            CS     LASTYCMD
 0200            AD     LATVEL
 0201            TS     OPTYCMD
 0202            CA     LATVEL
 0203            TS     LASTYCMD
 0204  2         TC     Q
 0205   ALLDONE  CS     DIDRESET        REMOVE DISPLAY INERTIAL DATA AND ECTR.
 0206            EXTEND
 0207            WAND   12              RESET RR ERROR COUNTER
 0208   DONEDID  TCF    RCSMONIT
 0209   ZERODATA CAF    ZERO
 0210            TS     L
 0211  2         TCF    ZDATA2
 0212   ARTOA    DEC    .20469          ALT DUE TO ALTRATE FOR .96 SEC.
 0213  2BITSET   OCT    6004
 0214   DIDRESET OCT    202
P0215  2         IMU INBIT MONITOR - ENTERED EVERY 480 MS BY T4RUPT.
 0216   IMUMON   CA     IMODES30        SEE IF THERE HAS BEEN A CHANGE IN THE
 0217            EXTEND                 RELEVANT BITS OF CHAN 30.
 0218            RXOR   30
 0219            MASK   30RDMSK
 0220            EXTEND
 0221  2         BZF    TNONTEST        NO CHANGE IN STATUS.
 0222            TS     RUPTREG1        SAVE BITS WHICH HAVE CHANGED.
 0223            LXCH   IMODES30        UPDATE IMODES30.
 0224            EXTEND
 0225            RXOR   L
 0226  2         TS     IMODES30
 0227            CS     ONE
 0228            XCH    RUPTREG1
 0229            EXTEND
 0230            BZMF   TLIM            CHANGE IN IMU TEMP.
 0231  2         TCF    NXTIFBIT        BEGIN BIT SCAN.
 0232    -1      AD     ONE             (RE-ENTERS HERE FROM NXTIFAIL.)
 0233   NXTIFBIT INCR   RUPTREG1        ADVANCE BIT POSITION NUMBER.
 0234    +1      DOUBLE
 0235            TS     A               SKIP IF OVERFLOW.
 0236  2         TCF    NXTIFBIT        LOOK FOR BIT.
 0237            XCH    RUPTREG2        SAVE OVERFLOW-CORRECTED DATA.
 0238            INDEX  RUPTREG1        SELECT NEW VALUE OF THIS BIT.
 0239            CAF    BIT14
 0240            MASK   IMODES30
 0241            INDEX  RUPTREG1
 0242  2         TC     IFAILJMP
 0243   NXTIFAIL CCS    RUPTREG2        PROCESS ANY ADDITIONAL CHANGES.
 0244  2         TCF    NXTIFBIT -1
 0245   TNONTEST CS     IMODES30        AFTER PROCESSING ALL CHANGES, SEE IF IT
 0246            MASK   BIT7            IS TIME TO ACT ON A TURN-ON SEQUENCE.
 0247            CCS    A
 0248  2         TCF    C33TEST         NO - EXAMINE CHANNEL 33.
 0249            CAF    BIT8            SEE IF FIRST SAMPLE OR SECOND.
 0250            MASK   IMODES30
 0251            CCS    A
 0252  2         TCF    PROCTNON        REACT AFTER SECOND SAMPLE.
 0253            CAF    BIT8            IF FIRST SAMPLE, SET BIT TO REACT NEXT
 0254            ADS    IMODES30        TIME.
 0255            TCF    C33TEST
P0256  2         PROCESS IMU TURN-ON REQUESTS AFTER WAITING 1 SAMPLE FOR ALL SIG
 0257  9NALS TO ARRIVE.
 0258   PROCTNON CS     BITS7&8
 0259            MASK   IMODES30
 0260            TS     IMODES30
 0261            MASK   BIT14           SEE IF TURN-ON REQUEST.
 0262            CCS    A
 0263  2         TCF    OPONLY          OPERATE ON ONLY.
 0264            CS     IMODES30        IF TURN-ON REQUEST, WE SHOULD HAVE IMU
 0265            MASK   BIT9            OPERATE.
 0266            CCS    A
 0267  2         TCF    +3
 0268            TC     ALARM           ALARM IF NOT.
 0269  2         OCT    213
 0270    +3      TC     CAGESUB
 0271            CAF    90SECS
 0272            TC     WAITLIST
 0273            2CADR  ENDTNON
 0274  2         TCF    C33TEST
 0275   RETNON   CAF    90SECS
 0276  2         TC     VARDELAY
 0277   ENDTNON  CS     BIT2            RESET TURN-ON REQUEST FAIL BIT.
 0278            MASK   IMODES30
 0279            XCH    IMODES30
 0280            MASK   BIT2            IF IT WAS OFF, SEND ISS DELAY COMPLETE.
 0281            EXTEND
 0282  2         BZF    ENDTNON2
 0283            CAF    BIT14           IF IT WAS ON AND TURN-ON REQUEST NOW
 0284            MASK   IMODES30        PRESENT, RE-ENTER 90 SEC DELAY IN WL.
 0285            EXTEND
 0286  2         BZF    RETNON
 0287            CS     STATE           IF IT IS NOT ON NOW, SEE IF A PROG WAS
 0288            MASK   IMUSEFLG        WAITING.
 0289            CCS    A
 0290            TCF    TASKOVER
 0291            TC     POSTJUMP
 0292  2         CADR   IMUBAD          UNSUCCESSFUL TURN-ON.
 0293   ENDTNON2 CAF    BIT15           SEND ISS DELAY COMPLETE.
 0294            EXTEND
 0295  2         WOR    12
 0296  2UNZ2     TC     ZEROICDU
 0297            CS     BITS4&5         REMOVE ZERO AND COARSE.
 0298            EXTEND
 0299  2         WAND   12
 0300            CAF    3SECS           ALLOW 3 SECS FOR COUNTER TO FIND GIMBAL.
 0301  2         TC     VARDELAY
 0302   ISSUP    CS     OCT54           REMOVE CAGING, IMU FAIL INHIBIT, AND
 0303            MASK   IMODES30        ICDUFAIL INHIBIT FLAGS.
 0304  2         TS     IMODES30
 0305  2         TC     SETISSW         ISS WARNING MIGHT HAVE BEEN INHIBITED.
 0306            CS     BIT15           REMOVE IMU DELAY COMPLETE DISCRETE.
 0307            EXTEND
 0308  2         WAND   12
 0309            CAF    BIT11           DONT ENABLE PROG ALARM ON PIP FAIL FOR
 0310            TC     WAITLIST        ANOTHER 10 SECS.
 0311            2CADR  PFAILOK
 0312            CS     STATE           SEE IF ANYONE IS WAITING FOR THE IMU AT
 0313            MASK   IMUSEFLG        IMUZERO. IF SO, WAKE THEM UP.
 0314            CCS    A
 0315  2         TCF    TASKOVER
 0316            TC     POSTJUMP
 0317  2         CADR   ENDIMU
 0318   OPONLY   CAF    IMUSEFLG        IF OPERATE ON ONLY, ZERO THE COUNTERS
 0319            MASK   STATE           UNLESS SOMEONE IS USING THE IMU.
 0320            CCS    A
 0321  2         TCF    C33TEST
 0322  2         TC     CAGESUB2        SET TURNON FLAGS.
 0323            CAF    BIT5
 0324            EXTEND
 0325  2         WOR    12
 0326            CAF    BIT6            WAIT 300 MS FOR AGS TO RECEIVE SIGNAL.
 0327            TC     WAITLIST
 0328            2CADR  UNZ2
 0329            TCF    C33TEST
P0330  2         MONITOR CHANNEL 33 FLIP-FLOP INPUTS.
 0331   C33TEST  CA     IMODES33        SEE IF RELEVANT CHAN 33 BITS HAVE
 0332            MASK   33RDMSK
 0333            TS     L               CHANGED.
 0334            CAF    33RDMSK
 0335            EXTEND
 0336            WAND   33              RESETS FLIP-FLOP INPUTS.
 0337            EXTEND
 0338            RXOR   L
 0339            EXTEND
 0340  2         BZF    GLOCKMON        ON NO CHANGE.
 0341            TS     RUPTREG1        SAVE BITS WHICH HAVE CHANGED.
 0342            LXCH   IMODES33
 0343            EXTEND
 0344            RXOR   L
 0345  2         TS     IMODES33        UPDATED IMODES33.
 0346            CAF    ZERO
 0347            XCH    RUPTREG1
 0348            DOUBLE
 0349  2         TCF    NXTIBT +1       SCAN FOR BIT CHANGES.
 0350    -1      AD     ONE
 0351   NXTIBT   INCR   RUPTREG1
 0352    +1      DOUBLE
 0353            TS     A               (CODING IDENTICAL TO CHAN 30).
 0354  2         TCF    NXTIBT
 0355            XCH    RUPTREG2
 0356            INDEX  RUPTREG1        GET NEW VALUE OF BIT WHICH CHANGED.
 0357            CAF    BIT13
 0358            MASK   IMODES33
 0359            INDEX  RUPTREG1
 0360  2         TC     C33JMP
 0361   NXTFL33  CCS    RUPTREG2        PROCESS POSSIBLE ADDITIONAL CHANGES.
 0362            TCF    NXTIBT -1
P0363  2         MONITOR FOR GIMBAL LOCK.
 0364   GLOCKMON CCS    CDUZ
 0365            TCF    GLOCKCHK        SEE IF MAGNITUDE OF MGA IS GREATER THAN
 0366            TCF    SETGLOCK        70 DEGREES.
 0367            TCF    GLOCKCHK
 0368  2         TCF    SETGLOCK
 0369   GLOCKCHK AD     -70DEGS
 0370            EXTEND
 0371  2         BZMF   SETGLOCK -1     NO LOCK.
 0372            CAF    BIT6            GIMAL LOCK.
 0373  2         TCF    SETGLOCK
 0374    -1      CAF    ZERO
 0375   SETGLOCK AD     DSPTAB +11D     SEE IF PRESENT STATE OF GIMBAL LOCK LAMP
 0376            MASK   BIT6            AGREES WITH DESIRED STATE BY HALF ADDING
 0377            EXTEND                 THE TWO.
 0378  2         BZF    GLOCKOK         OK AS IS.
 0379            MASK   DSPTAB +11D     IF OFF, DONT TURN ON IF IMU BEING CAGED.
 0380            CCS    A
 0381  2         TCF    GLAMPTST        TURN OFF UNLESS LAMP TEST IN PROGRESS.
 0382            CAF    BIT6
 0383            MASK   IMODES30
 0384            CCS    A
 0385  2         TCF    GLOCKOK
 0386   GLINVERT CS     DSPTAB +11D     INVERT GIMBAL LOCK LAMP.
 0387            MASK   BIT6
 0388            AD     BIT15           TO INDICATE CHANGE IN DSPTAB +11D.
 0389            XCH    DSPTAB +11D
 0390            MASK   OCT37737
 0391            ADS    DSPTAB +11D
 0392  2         TCF    GLOCKOK
 0393   GLAMPTST TC     LAMPTEST        TURN OFF UNLESS LAMP TEST IN PROGRESS.
 0394            TCF    GLOCKOK
 0395  2         TCF    GLINVERT
 0396   -70DEGS  DEC    -.38888         -70 DEGREES SCALED IN HALF-REVOLUTIONS.
 0397   OCT37737 OCT    37737
P0398  2         SUBROUTINES TO PROCESS INBIT CHANGES. NEW VALUE OF BIT ARRIVES
 0399  9IN A, EXCEPT FOR TLIM.
 0400   TLIM     MASK   POSMAX          REMOVE BIT FROM WORD OF CHANGES AND SET
 0401  2         TS     RUPTREG2        DSKY TEMP LAMP ACCORDINGLY.
 0402            CCS    IMODES30
 0403            TCF    TEMPOK
 0404  2         TCF    TEMPOK
 0405            CAF    BIT4            TURN ON LAMP.
 0406            EXTEND
 0407            WOR    11
 0408  2         TCF    NXTIFAIL
 0409   TEMPOK   TC     LAMPTEST        IF TEMP NOW OK, DONT TURN OFF LAMP IF
 0410  2         TCF    NXTIFAIL        LAMP TEST IN PROGRESS.
 0411            CS     BIT4
 0412            EXTEND
 0413            WAND   11
 0414  2         TCF    NXTIFAIL
 0415   ITURNON  CAF    BIT2            IF DELAY REQUEST HAS GONE OFF
 0416            MASK   IMODES30        PREMATURELY, DO NOT PROCESS ANY CHANGES
 0417            CCS    A               UNTIL THE CURRENT 90 SEC WAIT EXPIRES.
 0418  2         TCF    NXTIFAIL
 0419            CAF    BIT14           SEE IF JUST ON OR OFF.
 0420            MASK   IMODES30
 0421            EXTEND
 0422  2         BZF    ITURNON2        IF JUST ON.
 0423            CAF    BIT15
 0424            EXTEND                 SEE IF DELAY PRESENT DISCRETE HAS BEEN
 0425            RAND   12              SENT. IF SO, ACTION COMPLETE.
 0426            EXTEND
 0427            BZF    +2
 0428  2         TCF    NXTIFAIL
 0429            CAF    BIT2            IF NOT, SET BIT TO INDICATE REQUEST NOT
 0430            ADS    IMODES30        PRESENT FOR FULL DURATION.
 0431            TC     ALARM
 0432            OCT    207
 0433  2         TCF    NXTIFAIL
 0434   ITURNON2 CS     BIT7            SET BIT 7 TO INITIATE WAIT OF 1 SAMPLE.
 0435            MASK   IMODES30
 0436            AD     BIT7
 0437            TS     IMODES30
 0438  2         TCF    NXTIFAIL
 0439   IMUCAGE  CCS    A               NO ACTION IF GOING OFF.
 0440  2         TCF    NXTIFAIL
 0441            CS     OCT71000        TERMINATE ICDU AND GYRO PULSE TRAINS.
 0442            EXTEND
 0443  2         WAND   14
 0444  2         TC     CAGESUB
 0445            CAF    ZERO            ZERO COMMAND OUT-COUNTERS.
 0446            TS     CDUXCMD
 0447            TS     CDUYCMD
 0448            TS     CDUZCMD
 0449  2         TS     GYROCMD
 0450            CS     OCT1700         HAVING WAITED AT LEAST 27 MCT FROM
 0451            EXTEND                 GYRO PULSE TRAIN TERMINATION, WE CAN
 0452  2         WAND   14              DE-SELECT THE GYROS.
 0453  2         TCF    NXTIFAIL
 0454   IMUOP    EXTEND
 0455  2         BZF    IMUOP2
 0456            CS     STATE           IF GOING OFF, ALARM IF PROG USING IMU.
 0457            MASK   IMUSEFLG
 0458            CCS    A
 0459  2         TCF    NXTIFAIL
 0460            TC     ALARM
 0461            OCT    214
 0462  2         TCF    NXTIFAIL
 0463   IMUOP2   CAF    BIT2            SEE IF FAILED ISS TURN-ON SEQ IN PROG.
 0464            MASK   IMODES30
 0465            CCS    A
 0466            TCF    NXTIFAIL        IF SO, DONT PROCESS UNTIL PRESENT 90
 0467  2         TCF    ITURNON2        SECONDS EXPIRES.
 0468   PIPFAIL  CCS    A               SET BIT10 IN IMODES30 SO ALL ISS WARNING
 0469            CAF    BIT10           INFO IS IN ONE REGISTER.
 0470            XCH    IMODES30
 0471            MASK   -BIT10
 0472  2         ADS    IMODES30
 0473  2         TC     SETISSW
 0474            CS     IMODES30        IF PIP FAIL DOESNT LIGHT ISS WARNING, DO
 0475            MASK   BIT1            A PROGRAM ALARM IF IMU OPERATING BUT NOT
 0476            CCS    A               CAGED OR BEING TURNED ON.
 0477  2         TCF    NXTFL33
 0478            CA     IMODES30
 0479            MASK   OCT1720
 0480            CCS    A
 0481  2         TCF    NXTFL33         ABOVE CONDITION NOT MET.
 0482            TC     ALARM
 0483            OCT    212
 0484  2         TCF    NXTFL33
 0485   DNTMFAST CCS    A               DO PROG ALARM IF TM TOO FAST.
 0486  2         TCF    NXTFL33
 0487            TC     ALARM
 0488            OCT    1105
 0489  2         TCF    NXTFL33
 0490   UPTMFAST CCS    A               SAME AS DNLINK TOO FAST WITH DIFFERENT
 0491  2         TCF    NXTFL33         ALARM CODE.
 0492            TC     ALARM
 0493            OCT    1106
 0494            TCF    NXTFL33
P0495  2         CLOSED SUBROUTINES FOR IMU MONITORING.
 0496   SETISSW  CAF    OCT15           SET ISS WARNING USING THE FAIL BITS IN
 0497            MASK   IMODES30        BITS 13, 12, AND 10 OF IMODES30 AND THE
 0498            EXTEND                 FAILURE INHIBIT BITS IN POSITIONS
 0499            MP     BIT10           4, 3, AND 1.
 0500            CA     IMODES30
 0501            EXTEND
 0502            ROR    L               0 INDICATES FAILURE.
 0503            COM
 0504            MASK   OCT15000
 0505            CCS    A
 0506  2         TCF    ISSWON          FAILURE.
 0507   ISSWOFF  CAF    BIT1            DONT TURN OFF ISS WARNING IF LAMP TEST
 0508            MASK   IMODES33        IN PROGRESS.
 0509            CCS    A
 0510  2         TC     Q
 0511            CS     BIT1
 0512            EXTEND
 0513            WAND   11
 0514  2         TC     Q
 0515   ISSWON   CAF    BIT1
 0516            EXTEND
 0517            WOR    11
 0518  2         TC     Q
 0519   CAGESUB  CS     BITS6&15        SET OUTBITS AND INTERNAL FLAGS FOR
 0520            EXTEND                 SYSTEM TURN-ON OR CAGE. DISABLE THE
 0521            WAND   12              ERROR COUNTER AND REMOVE IMU DELAY COMP.
 0522            CAF    BITS4&5         SEND ZERO AND COARSE.
 0523            EXTEND
 0524  2         WOR    12
 0525   CAGESUB2 CS     OCT75           SET FLAGS TO INDICATE CAGING OR TURN-ON,
 0526            MASK   IMODES30        AND TO INHIBIT ALL ISS WARNING INFO.
 0527            AD     OCT75
 0528  2         TS     IMODES30
 0529  2         TC     Q
 0530   IMUFAIL  EQUALS SETISSW
 0531   ICDUFAIL EQUALS SETISSW
P0532  2         JUMP TABLES AND CONSTANTS.
 0533   IFAILJMP TCF    ITURNON         CHANNEL 30 DISPATCH.
 0534            TCF    IMUFAIL
 0535            TCF    ICDUFAIL
 0536            TCF    IMUCAGE
 0537   30RDMSK  OCT    76400           (BIT 10 NOT SAMPLED HERE).
 0538  2         TCF    IMUOP
 0539   C33JMP   TCF    PIPFAIL         CHANNEL 33 DISPATCH.
 0540            TCF    DNTMFAST
 0541  2         TCF    UPTMFAST
R0542            SUBROUTINE TO SKIP IF LAMP TEST NOT IN PROGRESS.
 0543   LAMPTEST CS     IMODES33        BIT 1 OF IMODES33 = 1 IF LAMP TEST IN
 0544            MASK   BIT1            PROGRESS.
 0545            CCS    A
 0546            INCR   Q
 0547  2         TC     Q
 0548   33RDMSK  EQUALS PRIO16
 0549   OCT15    OCT    15
 0550   BITS4&5  OCT    30
 0551   OCT54    OCT    54
 0552   OCT75    OCT    75
 0553   BITS7&8  OCT    300
 0554   OCT1720  OCT    1720
 0555   OCT1700  OCT    1700
 0556   OCT15000 EQUALS PRIO15
 0557   OCT71000 OCT    71000
 0558   BITS6&15 OCT    40040
 0559  2-BIT10   OCT    -1000
 0560   90SECS   DEC    9000
 0561  2120MS    DEC    12
 0562   GLOCKOK  EQUALS RCSMONIT
 0563   NOIMUMON EQUALS GLOCKOK
P0564  2         RR INBIT MONITOR.
 0565   RRAUTCHK CA     RADMODES        SEE IF CHANGE IN RR AUTO MODE BIT.
 0566            EXTEND
 0567            RXOR   33
 0568            MASK   BIT2
 0569            EXTEND
 0570  2         BZF    RRCDUCHK
 0571            LXCH   RADMODES        UPDATE RADMODES.
 0572            EXTEND
 0573            RXOR   L
 0574            TS     RADMODES
 0575            MASK   BIT2            SEE IF JUST ON.
 0576            CCS    A
 0577  2         TCF    RROFF           OFF.
 0578            CAF    BIT7            IF JUST ON AND SOME PROGRAM IS USING THE
 0579            MASK   STATE           RR, DONT ZERO THE CDUS.
 0580            CCS    A
 0581  2         TCF    RRCDUCHK
 0582            CS     OCT10001        SET BITS TO INDICATE ZERO AND TURNON
 0583            MASK   RADMODES        IN PROGRESS.
 0584            AD     OCT10001
 0585  2         TS     RADMODES
 0586            CAF    ONE
 0587            TC     WAITLIST
 0588            2CADR  RRTURNON
 0589  2         TCF    NORRGMON
 0590  2OCT10001 OCT    10001
 0591   RROFF    CS     STATE           IF SOMEONE WAS USING THE RR, DISPLAY AN
 0592            MASK   BIT7            ALARM IF THE RR GOES OUT OF AUTO MODE.
 0593            CCS    A
 0594  2         TCF    RRCDUCHK
 0595            TC     ALARM
 0596            OCT    514
P0597  2         CHECK FOR RR CDU FAIL.
 0598   RRCDUCHK CA     RADMODES        LAST SAMPLED BIT IN RADMODES.
 0599            EXTEND
 0600            RXOR   30
 0601            MASK   BIT7
 0602            EXTEND
 0603  2         BZF    RRGIMON
 0604            CAF    BIT2            IF RR NOT IN AUTO MODE, DONT CHANGE BIT
 0605            MASK   RADMODES        7 OF RADMODES. IF THIS WERE NOT DONE,
 0606            CCS    A               THE TRACKER FAIL MIGHT COME ON WHEN
 0607  2         TCF    NORRGMON        JUST READING LR DATA.
 0608            CAF    BIT7            SET BIT 7 OF RADMODES FOR SETTRKF.
 0609            LXCH   RADMODES        UPDATE RADMODES.
 0610            EXTEND
 0611            RXOR   L
 0612  2         TS     RADMODES
 0613   TRKFLCDU TC     SETTRKF         UPDATE TRACKER FAIL LAMP ON DSKY.
P0614            THE RR GIMBAL LIMIT MONITOR IS ENABLED WHENEVER THE RR IS IN TH
 0615  9E AUTO MODE EXCEPT WHEN THE RR CDUS ARE
R0616   BEING ZEROED, OR DURING A REMODE OR MONITOR REPOSITION OPERATION. THE LA
 0617  9TTER IS INITIATED BY THIS MONITOR WHEN
R0618   THE GIMBALS EXCEED THE LIMITS FOR THE CURRENT MODE. A ROUTINE IS INITIAT
 0619  9ED TO DRIVE THE GIMBALS TO T = 0 AND
R0620  2S = 0 IF IN MODE 1 AND T = 180 WITH S = -90 FOR MODE 2.
 0621   RRGIMON  CAF    OCT32002        INHIBITED BY REMODE, ZEROING, MONITOR,
 0622            MASK   RADMODES        OR RR NOT IN AUTO.
 0623            CCS    A
 0624  2         TCF    NORRGMON
 0625            TC     RRLIMCHK        SEE IF ANGLES IN LIMITS.
 0626  2         ADRES  OPTY
 0627  2         TCF    MONREPOS
 0628  2         TCF    NORRGMON        (ADDITIONAL CODING MAY GO HERE).
 0629   MONREPOS CAF    BIT11           SET FLAG TO SHOW REPOSITION IN PROGRESS.
 0630  2         ADS    RADMODES
 0631            CS     OCT20002        DISABLE TRACKER AND ERROR COUNTER.
 0632            EXTEND
 0633  2         WAND   12
 0634            CAF    TWO
 0635            TC     WAITLIST
 0636            2CADR  DORREPOS
 0637  2         TCF    NORRGMON
 0638   OCT32002 OCT    32002
 0639   OCT20002 OCT    20002
P0640  2PROGRAM NAME: GPMATRIX          MOD. NO. 0  DATE: OCTOBER 20, 1966
R0641  2AUTHOR: JONATHAN D. ADDELSTON (ADAMS ASSOCIATES)
R0642   THIS PROGRAM CALCULATES ALL THE SINGLE-PRECISION MATRIX ELEMENTS WHICH A
 0643  9RE USED BY LEM DAP TO TRANSFORM VECTORS
R0644   FROM GIMBAL TO PILOT (BODY) AXES AND BACK AGAIN.  THESE ELEMENTS ARE USE
 0645  9D EXCLUSIVELY BY BASIC LANGUAGE ROUTINES
R0646  2AND THEREFORE ARE NOT ARRAYED FOR USE BY INTERPRETIVE PROGRAMS.
R0647   CALLING SEQUENCE: GPMATRIX IS ALWAYS EXECUTED 4 TIMES A SECOND BY T4RUPT
 0648  9 PROGRAM.  IT IS LISTED EXPLICITLY TWICE
R0649  2IN THE T4JUMP TABLE, BUT IT ALSO OCCURS AFTER RRAUTCHK (TWICE).
R0650  2SUBROUTINES CALLED: SPSIN, SPCOS.
R0651  2NORMAL EXIT MODE: CONTROL IS ALWAYS TRANSFERRED TO DBSELECT.
R0652   ALARM/ABORT MODE: THERE ARE NO REAL ALARMS OR ABORTS.  HOWEVER, WHEN THE
 0653  9 MIDDLE GIMBAL ANGLE NEARS GIMBAL LOCK,
R0654   A DIVISION BY COS(MG) W2LL CAUSE OVERFLOW (I.E. A BAD QUOTIENT).  THIS C
 0655  99NDITION IS PREVENTED BY TESTING COS(MG)
R0656  2AND SUBSTITUTING POSMAX/NEGMAX FOR THE INCALCULABLE QUANTITITIES.
R0657   INPUT: CDUX,CDUY,CDUZ.          OUTPUT: M11,M21,M31,M22,M32,MR12,MR13.
R0658  2                                        (ALSO MR22=M22,MR23=M32)
 0659  9AM DOES NOT DETECT IT.
R0660  2*** WARNING ** IT DIES ON DV OVERFLOW.
R0661  2AOG = CDUX, AIG = CDUY, AMG = CDUZ: MNEMONIC IS: OIM = XYZ
R0662      *       *    SIN(MG)        0         1  *
R0663      M   =   *    COS(MG)COS(OG) SIN(OG)   0  *
R0664  2    GP     *   -COS(MG)SIN(OG) COS(OG)   0  *
R0665      *       *  0    COS(OG)/COS(MG)        -SIN(OG)/COS(MG)         *
R0666      M   =   *  0    SIN(OG)                 COS(OG)                 *
R0667  2    PG     *  1   -SIN(MG)COS(OG)/COS(MG)  SIN(MG)SIN(OG)/COS(MG)  *
 0668   GPMATRIX CAE    CDUZ            SINGLE ENTRY POINT
 0669            TC     SPSIN           SIN(CDUZ) = SIN(MG)
 0670  2         TS     M11             SCALED AT 1
 0671            CAE    CDUZ
 0672            TC     SPCOS           COS(CDUZ) = COS(MG)
 0673  2         TS     COSMG           SCALED AT 1 (ONLY A FACTOR)
 0674            CAE    CDUX
 0675            TC     SPSIN           SIN(CDUX) = SIN(OG)
 0676  2         TS     M22             SCALED AT 1 (ALSO IS MR22)
 0677            CS     M22
 0678            EXTEND
 0679            MP     COSMG           -SIN(OG)COS(MG)
 0680            TS     M31             SCALED AT 1
 0681            CAE    CDUX
 0682            TC     SPCOS           COS(CDUX) = COS(OG)
 0683  2         TS     M32             SCALED AT 1 (ALSO IS MR23)
 0684            EXTEND
 0685            MP     COSMG           COS(OG)COS(MG)
 0686  2         TS     M21             SCALED AT 1
 0687            CAE    COSMG           TEST FOR GIMBAL LOCK (OVERFLOW) REGION
 0688            AD     NEG1/2          BY TESTING MIDDLE GIMBAL ANGLE FOR
 0689            EXTEND                 VALUES EQUAL TO OR GREATER THAN 60 DEGS.
 0690  2         BZMF   GPGLOCK
 0691            CAE    M32
 0692            EXTEND
 0693            MP     BIT14           SCALE FOR DIVISION
 0694            EXTEND
 0695            DV     COSMG           COS(OG)/COS(MG)
 0696  2         TS     MR12            SCALED AT 2
 0697            CS     M22
 0698            EXTEND
 0699            MP     BIT14           SCALE FOR DIVISION
 0700            EXTEND
 0701            DV     COSMG           -SIN(OG)/COS(MG)
 0702  2         TCF    MR13STOR
 0703   GPGLOCK  CCS    M32             SINCE DIVISION BY COS(MG) MIGHT CREATE
 0704            CAF    POSMAX
 0705            TCF     +2             OVERFLOW (I.E. A NUMBER GREATER THAN 2)
 0706            CAF    NEGMAX
 0707  2         TS     MR12            USE THE VALUE SGN(NUMERATOR)*POSMAX AS
 0708            CCS    M22
 0709            CAF    POSMAX          THE CLOSEST APPROXIMATION
 0710            TCF     +2
 0711            CAF    NEGMAX
 0712   MR13STOR TS     MR13            SCALED AT 2
P0713   THE FOLLOWING SECTION TESTS THE ATTITUDE HOLD BIT TO DETERMINE WHICH DEA
P0714  2PROGRAM NAME: DB SELECT         MOD. NO. 1  DATE: OCTOBER 24, 1966
R0715  2AUTHOR: JONATHAN D. ADDELSTON (ADAMS ASSOCIATES)
R0716   THIS PROGRAM SETS THE ERASABLE REGISTER DB TO ONE OF THE THREE VALUES:
R0717            1) O.3 DEGREES IF IN ATTITUDE HOLD MODE OR IF IN AUTO WITH THE
 0718  9DEADBAND SELECT BIT OF DAPBOOLS SET
R0719               TO MINIMUM.
R0720            2) 5.0 DEGREES IF IN AUTO WITH DEADBAND SELECT BIT SET TO MAXIM
 0721  9UM.
R0722            3) 1.0 DEGREES IF IN POWERED FLIGHT (ASCENT OR DESCENT) AND OVE
 0723  9RRIDING ANY SETTITING OF SCSMODE OR THE
R0724  2            DEADBAND SELECT BIT.  (*** SEE COMMENT AFTER CODING. ***)
R0725  2***** NOTICE *****
R0726   THE ABOVE CAPABILITY FULFILLS ALL THE KNOWN DEADBAND REQUIREMENTS FOR AS
 0727  9206, AS208B, AND AS278 (GIVEN THE
R0728  2APPROPRIATE MISSION PROGRAMS).
R0729   (ALSO FOR MANNED FLIGHTS A DSKY ENTRY MUST BE SET UP TO SET THE DEADBAND
 0730  9 SELECT BIT OF DAPBOOLS. - NOT DONE AS
R0731  2OF 10/24/66.)
R0732   ***** DEADBAND SELECT BIT IS BIT13 OF DAPBOOLS. *****
R0733            0: MEANS MINIMUM DEADBAND
R0734  2         1: MEANS MAXIMUM DEADBAND
R0735  2CALLING SEQUENCE: CONTROL FALLS THROUGH FROM GPMATRIX. (4 TIMES/SECOND)
R0736  2SUBROUTINES CALLED: NONE.
R0737  2NORMAL EXIT MODE: CONTROL IS ALWAYS TRANSFERRED TO UP/DOWN.
R0738  2ALARM/ABORT MODE: NONE.
R0739  2INPUT: BIT13/CHNL11,BIT13/CHNL31,BIT13/DAPBOOLS.  (SPOOKY, ISN'T IT?)
R0740  2OUTPUT: DB (SCALED AT PI RADIANS).     (NO DEBRIS EXCEPT A)
 0741   DBSELECT CAF    BIT13           ATTITUDE HOLD BIT OF CHANNEL 31
 0742            EXTEND                 0 MEANS ATTITUDE HOLD
 0743            RAND   31              1 MEANS EITHER OFF OR AUTO
 0744            EXTEND
 0745  2         BZF    ATTHLDDB        (ATTITUDE HOLD BRANCH)
 0746            CS     DAPBOOLS        DEADBAND SELECT BIT OF DAPBOOLS
 0747            MASK   BIT13           0 MEANS MINIMUM DEADBAND
 0748            CCS    A               1 MEANS MAXIMUM DEADBAND
 0749  2         TCF    ATTHLDDB        (MINIMUM DEADBAND BRANCH)
 0750            CAF    DBMAXUM         SET MAXIMUM DEADBAND
 0751  2         TCF     +2
 0752   ATTHLDDB CAF    DBATTHLD        SET MINUMUM (ATTITUDE HOLD) DEADBAND
 0753  2         TS     DB
R0754  2***** IMPORTANT NOTICE *****
R0755   FOR EFFICIENCY, THE OVERRIDING 1 DEGREE DEADBAND DURING POWERED FLIGHT I
 0756  9S NOT TESTED FOR ABOVE.  THE PROGRAM
R0757   FOLLOWING (I.E. UP/DOWN) PERFORMS THIS FUNCTION AFTER THE APPROPRIATE TE
 0758  9STS.  THEREFORE, DB MAY TRANSIENTLY  BEP
R0759   INVALID, BUT THE DAP CANNOT USE IT THEN DUE TO T4RUPT MODE.
P0760  2PROGRAM NAME: UP/DOWN           MOD. NO. 1  DATE: OCTOBER 25, 1966
R0761  2AUTHOR: JONATHAN D. ADDELSTON (ADAMS ASSOCIATES)
R0762   THIS PROGRAM MONITORS THE STAGE OF THE LEM AND THE ENGINE ON BIT IN ORDE
 0763  9R TO DETERMINE WHEN ASCENT, DESCENT, AND
R0764  2COAST PHASES MUST BE SET UP FOR THE DAP.  (DONE 4 TIMES A SECOND.)
R0765  2CALLING SEQUENCE: NONE.         SUBROUTINES CALLED: WAITLIST.
R0766  2NORMAL EXIT MODE: CONTROL IS ALWAYS TRANSFERRED TO ENDDAPT4.
R0767  2ALARM/ABORT MODE: NONE.
R0768  2INPUT: BIT2/CHNL30,BIT13/CHNL11,BIT8/DAPBOOLS.
R0769   OUTPUT:  A) ASCENT COAST:
R0770                   1) BIT8/DAPBOOLS SET TO ZERO, MEANING COAST.
R0771                   2) MINIMPDB AND DBMINIMP SET TO 0.3 DEGREES.
R0772            B) ASCENT BURN:
R0773                   1) INITIALIZATION PASS:
R0774                          I) BIT8/DAPBOOLS SET FROM 0 TO 1, MEANING THAT TH
 0775  9E AOSTASK HAS BEEN STARTED UP AND THAT
R0776                             INITIALIZATION HAS OCCURRED.
R0777                         II) MINIMPDB SET TO -DB.
R0778                        III) DBMINIMP SET TO ZERO.
R0779                         IV) SUMRATEQ AND SUMRATER ZEROED FOR FIRST TWO SEC
 0780  9OND AOSTASK SAMPLE PERIOD.
R0781                          V) KCOEFCTR ZEROED TO RECORD INITIAL TIME.
R0782                         VI) OMEGAQ AND OMEGAR RECORDED IN OLDWFORQ AND OLD
 0783  9WFORR AS LAST OMEGA VECTOR FOR AOSTASK.
R0784                        VII) AOSTASK SET IN WAITLIST FOR TWO SECONDS.
R0785                       VIII) DB SET TO DBAUTO.
R0786                         IX) ****** CHECKOUT ONLY **** IXXTASK, IYYTASK, AN
 0787  9D IZZTASK SET IN WAITLIST FOR TEN MS.
R0788                   2) NORMAL PASS VOID.
R0789            C) DESCENT COAST:
R0790                   1) BIT2/DAPBOOLS SET TO 1, MEANING THAT TRIM GIMBAL CONT
 0791  9ROL OF DESCENT IS IMPOSSIBLE SINCE
R0792                      DESCENT ENGINE OFF.
R0793                   2) AOSQTERM AND AOSRTERM ZEROED.
R0794            D) DESCENT BURN:
R0795                   1) DB SET TO DBAUTO.
R0796                   2) BIT2/DAPBOOLS CANNOT NOW BE ZEROED (EVEN THOUGH THE D
 0797  9ESCENT ENGINE IS ON), SINCE IT IS NOT
R0798  2                   NECESSARILY TRUE THAT THIS IMPLIES AN OPERATIVE TRIM
 0799  9GIMBAL SYSTEM.
 0800   UP/DOWN  CAF    BIT2            STAGE VERIFY BIT OF CHANNEL 30: INVERTED
 0801            EXTEND                 0 MEANS ASCENT STAGE
 0802            RAND   30              1 MEANS DESCENT STAGE
 0803            CCS    A
 0804  2         TCF    DESCLEM         (DESCENT STAGE BRANCH)
 0805   ASCLEM   CAF    BIT13           ENGINE ON BIT OF CHANNEL 11
 0806            EXTEND                 0 MEANS OFF
 0807            RAND   11              1 MEANS ON
 0808            CCS    A
 0809  2         TCF    ASCDAP          (ASCENT BURN BRANCH)
 0810   ASCCOAST CS     BIT8            SET BIT8 OF DAPBOOLS TO COAST DAP LOGIC
 0811            MASK   DAPBOOLS        LEM IS STAGED FOR ASCENT, BUT THE ASCENT
 0812  2         TS     DAPBOOLS        ENGINE IS NOT ON.
 0813            CAF    DBATTHLD        FOR ASCENT COAST SET BOTH MINIMUM PULSE
 0814            TS     MINIMPDB        DEADBANDS TO THE DESCENT PHASE VALUE OF
 0815  2         TS     DBMINIMP        0.3 DEGREES SCALED AT PI RADIANS.
 0816  2         TCF    ENDDAPT4        (END OF UP/DOWN)
 0817   ASCDAP   CAF    BIT8            CHECK AOSTASK BIT OF DAPBOOLS
 0818            MASK   DAPBOOLS        IF 0, SET BIT AND INITIATE WAITLIST TASK
 0819            CCS    A               IF 1, THEN TASK LOOP ALREADY BEGUN
 0820  2         TCF    ENDDAPT4        (END OF UP/DOWN)
 0821            CAF    DBAUTO          SINCE ASCENT ENGINE IS ON -
 0822  2         TS     DB              SET DEADBAND TO 1.0 DEGREES
 0823            CAF    BIT8            SET BIT TO INDICATE AOSTASK SET UP AND
 0824  2         ADS    DAPBOOLS        ASCENT LOGIC.  BIT CLEARLY NOT SET YET.
 0825            CS     DB              MODIFY THE TJETLAW FOR ASCENT:
 0826            TS     MINIMPDB        (IN ONE EQUATION DELETE MINIMPDB AND
 0827            CAF    ZERO            SHIFT THE SWITCHING CURVE TO THE ORIGIN)
 0828  2         TS     DBMINIMP        MINIMPDB = -DB, DBMINIMP = 0
 0829            CAF    ZERO            INITIALIZE SUM RATES
 0830            TS     SUMRATEQ
 0831            TS     SUMRATER
 0832            TS     KCOEFCTR        INITIALIZE TIME COUNTER
 0833            CAE    OMEGAQ          CREATE OLD OMEGAQ
 0834            TS     OLDWFORQ
 0835            CAE    OMEGAR          CREATE OLD OMEGAR
 0836  2         TS     OLDWFORR
R0837  2***** EVENTUALLY, USE 2SECWLT4 FROMM FIXED-FIXED AND NEW NAME. *****
 0838            CAF    2SECWLT4        SET UP AOSTASK TO BEGIN IN 2 SECONDS
 0839            TC     WAITLIST        IT THEN SETS UP A LOOP ON WAITLIST FOR
 0840            2CADR  AOSTASK         2 SECOND INTERVALS AND CHECKS FOR THE
A0841  2                                SHUTDOWN CONDITION IN BIT8 OF DAPBOOLS
R0842  2************************************************************************
 0843  9****************************************
R0844  2REMOVE THIS AND THE TASKS WHEN THE INERTIA ESTIMATOR WORKS.
 0845            CAF    ONE             *** SPECIAL DAP CHECKOUT SEQUENCE ***
 0846            TC     WAITLIST        THESE THREE CALLS TO WAITLIST BEGIN A
 0847            2CADR  IXXTASK         COMPLICATED PROCEDURE TO DECREMENT THE
 0848            CAF    ONE             INERTIA MATRIX DIAGONAL ELEMENTS (EACH
 0849            TC     WAITLIST        SCALED AT 2(+18) SLUG FEET(2) ) BY ONE
 0850            2CADR  IYYTASK         BIT AS SOON AS APPROPRIATE BY A NOMINAL
 0851            CAF    ONE             LINEAR APPROXIMATION TO INERTIAL CHANGE.
 0852            TC     WAITLIST
 0853            2CADR  IZZTASK         *** NOT TO BE USED IN MISSIONS ***
R0854  2************************************************************************
 0855  9****************************************
 0856  2         TCF    ENDDAPT4        (END OF UP/DOWN)
 0857   DESCLEM  CAF    BIT13           ENGINE ON BIT OF CHANNEL 11
 0858            EXTEND                 0 MEANS OFF
 0859            RAND   11              1 MEANS ON
 0860            CCS    A
 0861  2         TCF    DESCDAP         (DESCENT BURN BRANCH)
 0862   DESCOAST CS     BIT2            SET BIT2 OF DAPBOOLS TO INDICATE THAT
 0863            MASK   DAPBOOLS        TRIM GIMBAL CANNOT BE USED SINCE THE
 0864            AD     BIT2            STAGE IS DESCENT, BUT THE ENGINE IS NOT
 0865  2         TS     DAPBOOLS        ON.
 0866            CAF    ZERO            ZERO TRIM GIMBAL OFFSET ACCELERATION
 0867            TS     AOSQTERM        TERMS IN THE DESCENT RATE DERIVATION
 0868  2         TS     AOSRTERM        SINCE THE THRUST IS ZERO (ENGINE OFF).
 0869  2         TCF    ENDDAPT4        (END OF UP/DOWN)
 0870   DESCDAP  CAF    DBAUTO          SINCE DESCENT ENGINE IS ON -
 0871  2         TS     DB              SET DEADBAND TO 1.0 DEGREES
 0872  2         TCF    ENDDAPT4        (END OF UP/DOWN)
 0873  4         TCF    ENDDAPT4
 0874   2SECWLT4 DEC    200             2 SECONDS WAITLIST DT
 0875   DBMAXUM  DEC    0.02778         5.0 DEGREES SCALED AT PI RADIANS
 0876   DBAUTO   DEC    0.00555         1.0 DEGREES SCALED AT PI RADIANS
 0877  4DBATTHLD DEC    0.00167         0.3 DEGREES SCALED AT PI RADIANS
 0878   NORRGMON EQUALS GPMATRIX
 0879   ENDDAPT4 EQUALS RESUME
L      2IMU MODE SWITCHING ROUTINES
 0001            SETLOC ENDT4FF
 0002  2         EBANK= COMMAND
R0003  2         FIXED-FIXED ROUTINES.
 0004   ZEROICDU CAF    ZERO            ZERO ICDU COUNTERS.
 0005            TS     CDUX
 0006            TS     CDUY
 0007            TS     CDUZ
 0008  2         TC     Q
 0009  23SECS    DEC    300
 0010   ENDIMODF EQUALS
P0011  2         IMU ZEROING ROUTINE.
 0012  2         BANK   13
 0013   IMUZERO  INHINT                 ROUTINE TO ZERO ICDUS.
 0014            CS     IMUSEFLG        SET INDICATION THAT A MISSION OR TEST
 0015            MASK   STATE           PROGRAM IS USING THE IMU.
 0016            AD     IMUSEFLG
 0017  2         TS     STATE
 0018            TC     CAGETSTQ        IF IMU COMING UP, TURN-ON PROGRAM WILL
 0019  2         TCF    MODEEXIT        DO ALL THE WORK.
 0020            CS     BITS3&4         INHIBIT ICDUFAIL AND IMUFAIL (IN CASE WE
 0021            MASK   IMODES30        JUST CAME OUT OF COARSE ALIGN).
 0022            AD     BITS3&4
 0023  2         TS     IMODES30
 0024            CS     BITS4&6         SEND ZERO ENCODE WITH COARSE AND ERROR
 0025            EXTEND                 COUNTER DISABLED.
 0026  2         WAND   12
 0027            CAF    BIT5
 0028            EXTEND
 0029  2         WOR    12
 0030            CAF    BIT6            WAIT 320 MS TO GIVE AGS ADEQUATE TIME TO
 0031            TC     WAITLIST        RECEIVE ITS PULSE TRAIN.
 0032            2CADR  IMUZERO2
 0033            CS     IMODES30        SEE IF IMU OPERATING AND ALARM IF NOT.
 0034            MASK   BIT9
 0035            CCS    A
 0036  2         TCF    MODEEXIT
 0037            TC     ALARM
 0038  2         OCT    210
 0039   MODEEXIT RELINT                 GENERAL MODE-SWITCHING EXIT.
 0040  8         TCF    SWRETURN
 0041   IMUZERO2 TC     CAGETSTQ        POSSIBLY SWITCH TO TURN-ON PROGRAM.
 0042  2         TCF    TASKOVER
 0043            TC     ZEROICDU        ZERO COUNTERS.
 0044            CS     BIT5            REMOVE ZERO DISCRETE.
 0045            EXTEND
 0046  2         WAND   12
 0047            CAF    3SECSM          WAIT FOR COUNTERS TO SYNCRONIZE.
 0048  2         TC     VARDELAY
 0049   IMUZERO3 TC     CAGETSTQ
 0050  2         TCF    TASKOVER
 0051            CS     BITS3&4         REMOVE IMUFAIL AND ICDUFAIL INHIBIT.
 0052            MASK   IMODES30
 0053  2         TS     IMODES30
 0054            TC     IBNKCALL        SET ISS WARNING IF EITHER OF ABOVE ARE
 0055  2         CADR   SETISSW         PRESENT.
 0056            TCF    ENDIMU
P0057  2         IMU COARSE ALIGN MODE.
 0058   IMUCOARS CAF    BIT4            SEND COARSE ALIGN ENABLE DISCRETE
 0059            INHINT
 0060            EXTEND
 0061  2         WOR    CHAN12
 0062            CS     BIT4            INHIBIT IMU FAIL.
 0063            MASK   IMODES30
 0064            AD     BIT4
 0065  2         TS     IMODES30
 0066            CAF    SIX
 0067            TC     WAITLIST
 0068            2CADR  COARS
 0069  2         TCF    MODEEXIT
 0070   COARS    TC     CAGETEST
 0071            CAF    BIT6            ENABLE ALL THREE ISS CDU ERROR COUNTERS
 0072            EXTEND
 0073  2         WOR    CHAN12
 0074            CAF    TWO             SET CDU INDICATOR
 0075  2COARS1   TS     CDUIND
 0076            INDEX  CDUIND          COMPUTE THETAD - THETAA IN 1:S
 0077            CA     THETAD            COMPLEMENT FORM
 0078            EXTEND
 0079            INDEX  CDUIND
 0080            MSU    CDUX
 0081            EXTEND
 0082            MP     BIT13           SHIFT RIGHT 2
 0083            XCH    L               ROUND
 0084            DOUBLE
 0085            TS     ITEMP1
 0086            TCF    +2
 0087  2         ADS    L
 0088            INDEX  CDUIND          DIFFERENCE TO BE COMPUTED
 0089            LXCH   COMMAND
 0090            CCS    CDUIND
 0091  2         TC     COARS1
 0092            CAF    TWO             MINIMUM OF 4 MS WAIT
 0093  8         TC     VARDELAY
 0094   COARS2   TC     CAGETEST        DONT CONTINUE IF CAGED.
 0095            TS     ITEMP1          SETS TO +0.
 0096            CAF    TWO             SET CDU INDICATOR
 0097  2 +3      TS     CDUIND
 0098            INDEX  CDUIND
 0099            CCS    COMMAND         NUMBER OF PULSES REQUIRED
 0100            TC     COMPOS          GREATER THAN MAX ALLOWED
 0101            TC     NEXTCDU +1
 0102            TC     COMNEG
 0103  2         TC     NEXTCDU +1
 0104   COMPOS   AD     -COMMAX         COMMAX = MAX NUMBER OF PULSES ALLOWED
 0105            EXTEND                   MINUS ONE
 0106            BZMF   COMZERO
 0107            INDEX  CDUIND
 0108            TS     COMMAND         REDUCE COMMAND BY MAX NUMBER OF PULSES
 0109  2         CS     -COMMAX-          ALLOWED
 0110   NEXTCDU  INCR   ITEMP1
 0111            INDEX  CDUIND
 0112  2         TS     CDUXCMD         SET UP COMMAND REGISTER.
 0113            CCS    CDUIND
 0114  2         TC     COARS2 +3
 0115            CCS    ITEMP1          SEE IF ANY PULSES TO GO OUT.
 0116  2         TCF    SENDPULS
 0117            TC     FIXDELAY        WAIT FOR GIMBALS TO SETTLE.
 0118  8         DEC    150
 0119            CAF    TWO             AT END OF COMMAND, CHECK TO SEE THAT
 0120   CHKCORS  TS     ITEMP1          GIMBALS ARE WITHIN 2 DEGREES OF THETAD.
 0121            INDEX  A
 0122            CA     CDUX
 0123            EXTEND
 0124            INDEX  ITEMP1
 0125            MSU    THETAD
 0126            CCS    A
 0127            TCF    COARSERR
 0128            TCF    CORSCHK2
 0129  2         TCF    COARSERR
 0130   CORSCHK2 CCS    ITEMP1
 0131            TCF    CHKCORS
 0132            TS     GCOMP           ZERO GYRO COMPENSATION REGISTERS IN
 0133            TS     GCOMP +1        PREPARATION FOR COMPENSATION.
 0134            TS     GCOMP +2
 0135            TS     GCOMP +3
 0136            TS     GCOMP +4
 0137  2         TS     GCOMP +5
 0138  2         TCF    ENDIMU          END OF COARSE ALIGNMENT.
 0139   COARSERR AD     COARSTOL        2 DEGREES.
 0140            EXTEND
 0141  2         BZMF   CORSCHK2
 0142            TC     ALARM           COARSE ALIGN ERROR.
 0143  2         OCT    211
 0144  2         TCF    IMUBAD
 0145  8COARSTOL DEC    -.01111         2 DEGREES SCALED AT HALF-REVOLUTIONS.
 0146   COMNEG   AD     -COMMAX
 0147            EXTEND
 0148            BZMF   COMZERO
 0149            COM
 0150            INDEX  CDUIND
 0151            TS     COMMAND
 0152            CA     -COMMAX-
 0153  2         TC     NEXTCDU
 0154   COMZERO  CAF    ZERO
 0155            INDEX  CDUIND
 0156            XCH    COMMAND
 0157  2         TC     NEXTCDU
 0158   SENDPULS CAF    13,14,15
 0159            EXTEND
 0160            WOR    CHAN14
 0161            CAF    600MS
 0162            TCF    COARS2 -1       AND THEN TO VARDELAY.
P0163  2         IMU FINE ALIGN MODE SWITCH.
 0164   IMUFINE  INHINT
 0165  2         TC     CAGETSTJ        SEE IF IMU BEING CAGED.
 0166            CS     BITS4-6         RESET ZERO, COARSE, AND ECTR ENABLE.
 0167            EXTEND
 0168  2         WAND   12
 0169            CAF    BIT10           IMU FAIL WAS INHIBITED DURING THE
 0170            TC     WAITLIST        PRESUMABLY PRECEDING COARSE ALIGN. LEAVE
 0171            2CADR  IFAILOK         IT ON FOR THE FIRST 5 SECS OF FINE ALIGN
 0172            CAF    90SEC           GYRO RE-CENTERING TIME.
 0173            TC     WAITLIST
 0174            2CADR  IMUFINED
 0175  2         TCF    MODEEXIT
 0176   IMUFINED TC     CAGETEST        SEE THAT NO ONE HAS CAGED THE IMU.
 0177  2         TCF    ENDIMU
 0178   IFAILOK  TC     CAGETSTQ        ENABLE IMU FIAL UNLESS IMU BEING CAGED.
 0179  2         TCF    TASKOVER        IT IS.
 0180            CAF    BIT4            DONT RESET IMU FAIL INHIBIT IF SOMEONE
 0181            EXTEND                 HAS GONE INTO COARSE ALIGN.
 0182            RAND   12
 0183            CCS    A
 0184  2         TCF    TASKOVER
 0185            CS     BIT4
 0186   PFAILOK2 MASK   IMODES30
 0187            TS     IMODES30
 0188  2         TCF    TASKOVER
 0189   PFAILOK  TC     CAGETSTQ        ENABLE PIP FAIL PROG ALARM.
 0190  2         TCF    TASKOVER
 0191            CS     BIT5
 0192            TCF    PFAILOK2
P0193  2         ROUITNES TO INITIATE AND TERMINATE PROGRAM USE OF THE PIPAS. NO
 0194  9 IMUSTALL REQUIRED IN EITHER CASE.
 0195   PIPUSE   TC     CAGETSTQ        DONT ENABLE PIPA FAIL IF IMU BEING CAGED
 0196  2         TCF    SWRETURN
 0197            INHINT
 0198            CAF    ZERO            ZERO COUNTERS.
 0199            TS     PIPAX
 0200            TS     PIPAY
 0201  2         TS     PIPAZ
 0202            CS     BIT1            IF PIPA FAILS FROM NOW ON (UNTIL
 0203            MASK   IMODES30        PIPFREE), LIGHT ISS WARNING.
 0204  2         TS     IMODES30
 0205   PIPFREE2 TC     IBNKCALL        ISS WARNING MIGHT COME ON NOW.
 0206  2         CADR   SETISSW         (OR GO OFF ON PIPFREE).
 0207  2         TCF    MODEEXIT
 0208   PIPFREE  INHINT                 PROGRAM DONE WITH PIPAS. DONT LIGHT
 0209            CS     BIT1            ISS WARNING.
 0210            MASK   IMODES30
 0211            AD     BIT1
 0212  2         TS     IMODES30
 0213            MASK   BIT10           IF PIP FAIL ON, DO PROG ALSRM AND RESET
 0214            CCS    A               ISS WARNING.
 0215  2         TCF    MODEEXIT
 0216            TC     ALARM
 0217  2         OCT    212
 0218  2         INHINT
 0219            TCF    PIPFREE2
P0220            THE FOLLOWING ROUTINE TORQUES THE IRIGS ACCORDING TO DOUBLE PRE
 0221  9CISION INPUTS IN THE SIX REGISTERS
R0222   BEGINNING AT THE ECADR ARRIVING IN A. THE MINIMUM SIZE OF ANY PULSE TRAI
 0223  9N IS 16 PULSES (.25 CDU COUNTS). THE
R0224  2UNSENT PORTION OF THE COMMAND IS LEFT INTACT IN THE INPUT COMMAND REGIST
 0225  9ERS.
 0226  2         EBANK= 1400            VARIABLE, ACTUALLY.
 0227   IMUPULSE TS     MPAC +5         SAVE ARRIVING ECADR.
 0228  2         TC     CAGETSTJ        DONT PROCEED IF IMU BEING CAGED.
 0229            CCS    LGYRO           SEE IF GYROS BUSY.
 0230  2         TC     GYROBUSY        SLEEP.
 0231            TS     MPAC +2
 0232            CAF    BIT6            ENABLE THE POWER SUPPLY.
 0233            EXTEND
 0234  2         WOR    14
 0235            CAF    FOUR
 0236   GWAKE2   INHINT                 (IF A JOB WAS PUT TO SLEEP, THE POWER
 0237            TC     WAITLIST        SUPPLY IS LEFT ON BY THE WAKING JOB).
 0238            2CADR  STRTGYRO
 0239            CA     MPAC +5         SET UP EBANK, SAVING CALLER'S EBANK FOR
 0240            XCH    EBANK           RESTORATION ON RETURN.
 0241            XCH    MPAC +5
 0242            TS     LGYRO           RESERVES GYROS.
 0243            MASK   LOW8
 0244  2         TS     ITEMP1
 0245            CAF    TWO             FORCE SIGN AGREEMENT ON INPUTS.
 0246   GYROAGRE TS     MPAC +3
 0247            DOUBLE
 0248            AD     ITEMP1
 0249            TS     MPAC +4
 0250            EXTEND
 0251            INDEX  A
 0252            DCA    1400
 0253            DXCH   MPAC
 0254            TC     TPAGREE
 0255            DXCH   MPAC
 0256            INDEX  MPAC +4
 0257  2         DXCH   1400
 0258            CCS    MPAC +3
 0259  2         TCF    GYROAGRE
 0260            CA     MPAC +5         RESTORE CALLER'S EBANK.
 0261            TS     EBANK
 0262            TCF    MODEEXIT
P0263  2         ROUTINES TO ALLOW TORQUING BY ONLY ONE JOB AT A TIME.
 0264   GYROBUSY EXTEND                 SAVE RETURN 2FCADR.
 0265            DCA    BUF2
 0266            DXCH   MPAC
 0267   REGSLEEP CAF    LGWAKE
 0268  2         TCF    JOBSLEEP
 0269   GWAKE    CCS    LGYRO           WHEN AWAKENED, SEE IF GYROS STILL BUSY.
 0270  2         TCF    REGSLEEP        IF SO, SLEEP SOME MORE.
 0271            TS     MPAC +2
 0272            EXTEND
 0273            DCA    MPAC
 0274            DXCH   BUF2            RESTORE SWRETURN INFO.
 0275            CAF    ONE
 0276  2         TCF    GWAKE2
 0277   LGWAKE   CADR   GWAKE
P0278  2         GYRO-TORQUING WAITLIST TASKS.
 0279   STRTGYRO CS     GDESELCT        DE-SELECT LAST GYRO.
 0280            EXTEND
 0281  2         WAND   14
 0282  2         TC     CAGETEST
 0283   STRTGYR2 CA     LGYRO           JUMP ON PHASE COUNTER IN BITS 13-14.
 0284            EXTEND
 0285            MP     BIT4
 0286            INDEX  A
 0287            TCF    +1
 0288            TC     GSELECT         =0. DO Y GYRO.
 0289  2         OCT    00202
 0290            TC     GSELECT         =1. DO Z GYRO.
 0291  2         OCT    00302
 0292            TC     GSELECT -2      =2. DO X GYRO.
 0293  2         OCT    00100
 0294            CAF    ZERO            =3. DONE
 0295            TS     LGYRO
 0296            CAF    LGWAKE          WAKE A POSSIBLE SLEEPING JOB.
 0297  2         TC     JOBWAKE
 0298            CAF    BIT2            DONT RESET POWER SUPPLY IF BIT SET
 0299            MASK   IMODES33        (ONLY DURING GYRO TORQUE SCALE FACTOR
 0300            CCS    A               TEST).
 0301  2         TCF    NORESET
 0302            CCS    LOCCTR          IF A JOB WAS AWAKENED, DONT RESET GYRO
 0303  2         TCF    NORESET         ENABLE.
 0304  2         TCF    NORESET
 0305            CS     BIT6            IF NO JOB AWAKENED, RESET GYRO ENABLE.
 0306            EXTEND
 0307  2         WAND   14
 0308  8NORESET  TCF    IMUFINED
 0309    -2      CS     FOUR            SPECIAL ENTRY TO REGRESS LGYRO FOR X.
 0310  2         ADS    LGYRO
 0311   GSELECT  INDEX  Q               SELECT GYRO.
 0312            CAF    0               PACKED WORD CONTAINS GYRO SELECT BITS
 0313            TS     ITEMP4          AND INCREMENT TO LGYRO.
 0314            MASK   SEVEN
 0315            AD     BIT13
 0316            ADS    LGYRO
 0317            TS     EBANK
 0318            MASK   LOW8
 0319  2         TS     ITEMP1
 0320            CS     SEVEN
 0321            MASK   ITEMP4
 0322  2         TS     ITEMP4
 0323            EXTEND                 MOVE DP COMMAND TO RUPTREGS FOR TESTING.
 0324            INDEX  ITEMP1
 0325            DCA    1400
 0326  2         DXCH   RUPTREG1
 0327            CCS    RUPTREG1
 0328            TCF    MAJ+
 0329            TCF    +2
 0330  2         TCF    MAJ-
 0331            CCS    RUPTREG2
 0332            TCF    MIN+
 0333            TCF    STRTGYR2
 0334            TCF    MIN-
 0335  8         TCF    STRTGYR2
 0336   MIN+     AD     -GYROMIN        SMALL POSITIVE COMMAND. SEE IF AT LEAST
 0337            EXTEND                 16 GYRO PULSES.
 0338  2         BZMF   STRTGYR2
 0339   MAJ+     EXTEND                 DEFINITE POSITIVE OUTPUT.
 0340            DCA    GYROFRAC
 0341  2         DAS    RUPTREG1
 0342            CA     ITEMP4          SELECT POSITIVE TORQUING FOR THIS GYRO.
 0343            EXTEND
 0344  2         WOR    14
 0345            CAF    LOW7            LEAVE NUMBER OF POSSIBLE 8192 AUGMENTS
 0346            MASK   RUPTREG2        TO INITIAL COMMAND IN MAJOR PART OF LONG
 0347            XCH    RUPTREG2        TERM STORAGE AND TRUNCATED FRACTION
 0348   GMERGE   EXTEND                 IN MINOR PART. THE MAJOR PART WILL BE
 0349            MP     BIT8            COUNTED DOWN TO ZERO IN THE COURSE OF
 0350            TS     ITEMP2          PUTTING OUT THE ENTIRE COMMAND.
 0351            CA     RUPTREG1
 0352            EXTEND
 0353            MP     BIT9
 0354            TS     RUPTREG1
 0355            CA     L
 0356            EXTEND
 0357            MP     BIT14
 0358  2         ADS    ITEMP2          INITIAL COMMAND.
 0359            EXTEND                 SEE IF MORE THAN ONE PULSE TRAIN NEEDED
 0360            DCA    RUPTREG1        (MORE THAN 16383 PULSES).
 0361            AD     MINUS1
 0362            CCS    A
 0363            TCF    LONGGYRO
 0364  2-GYROMIN OCT    -177            MAY BE ADJUSTED TO SPECIFY MINIMUM CMD.
 0365  2         TCF    +4
 0366            CAF    BIT14
 0367            ADS    ITEMP2
 0368  2         CAF    ZERO
 0369    +4      INDEX  ITEMP1
 0370  8         DXCH   1400
 0371            CA     ITEMP2          ENTIRE COMMAND.
 0372   LASTSEG  TS     GYROCMD
 0373            EXTEND
 0374            MP     BIT10           WAITLIST DT
 0375            AD     THREE           TRUNCATION AND PHASE UNCERTAINTIES.
 0376            TC     WAITLIST
 0377            2CADR  STRTGYRO
 0378   GYROEXIT CAF    BIT10           TURN ON GYRO ACTIVITY TO START TRAIN.
 0379            EXTEND
 0380            WOR    14
 0381  2         TCF    TASKOVER
 0382   LONGGYRO INDEX  ITEMP1
 0383            DXCH   1400            INITIAL COMMAND OUT PLUS N AUGMENTS OF
 0384            CAF    BIT14           8192. INITIAL COMMAND IS AT LEAST 8192.
 0385            AD     ITEMP2
 0386  2         TS     GYROCMD
 0387   AUG3     EXTEND                 GET WAITLIST DT TO TIME WHEN TRAIN IS
 0388            MP     BIT10           ALMOST OUT.
 0389            AD     NEG3
 0390            TC     WAITLIST
 0391            2CADR  8192AUG
 0392  2         TCF    GYROEXIT
 0393  28192AUG  TC     CAGETEST
 0394            CA     LGYRO           ADD 8192 PULSES TO GYROCMD
 0395            TS     EBANK
 0396            MASK   LOW8
 0397  2         TS     ITEMP1
 0398            INDEX  ITEMP1          SEE IF THIS IS THE LAST AUG.
 0399            CCS    1400
 0400  2         TCF    AUG2            MORE TO COME.
 0401            CAF    BIT14
 0402            ADS    GYROCMD
 0403  2         TCF    LASTSEG +1
 0404   AUG2     INDEX  ITEMP1
 0405            TS     1400
 0406            CAF    BIT14
 0407            ADS    GYROCMD
 0408  8         TCF    AUG3            COMPUTE DT.
 0409   MIN-     AD     -GYROMIN        POSSIBLE NEGATIVE OUTPUT.
 0410            EXTEND
 0411  2         BZMF   STRTGYR2
 0412   MAJ-     EXTEND                 DEFINITE NEGATIVE OUTPUT.
 0413            DCS    GYROFRAC
 0414  2         DAS    RUPTREG1
 0415            CA     ITEMP4          SELECT NEGATIVE TORQUING FOR THIS GYRO.
 0416            AD     BIT9
 0417            EXTEND
 0418  2         WOR    14
 0419            CS     RUPTREG1        SET UP RUPTREGS TO FALL INTO GMERGE.
 0420            TS     RUPTREG1        ALL NUMBERS PUT INTO GYROCMD ARE
 0421            CS     RUPTREG2        POSITIVE - BIT9 OF CHAN 14 DETERMINES
 0422            MASK   LOW7            THE SIGN OF THE COMMAND.
 0423            COM
 0424            XCH    RUPTREG2
 0425            COM
 0426  2         TCF    GMERGE
 0427  2GDESELCT OCT    1700            TURN OFF SELECT AND ACTIVITY BITS.
 0428   GYROFRAC 2DEC   .215 B -21
P0429  2         IMU MODE SWITCHING ROUTINES COME HERE WHEN ACTION COMPLETE.
 0430   ENDIMU   EXTEND                 MODE IS BAD IF CAGE HAS OCCURED OR IF
 0431            READ   11              ISS WARNING IS ON.
 0432            MASK   BIT1
 0433            CCS    A
 0434  2         TCF    IMUBAD
 0435  2IMUGOOD  TCF    GOODEND         WITH C(A) = 0.
 0436   IMUBAD   CAF    ZERO
 0437  2         TCF    BADEND
 0438   CAGETEST CAF    BIT6            SUBROUTINE TO TERMINATE IMU MODE
 0439            MASK   IMODES30        SWITCH IF IMU HAS BEEN CAGED.
 0440            CCS    A
 0441            TCF    IMUBAD          DIRECTLY.
 0442  2         TC     Q               WITH C(A) = +0.
 0443   CAGETSTQ CS     IMODES30        SKIP IF IMU NOT BEING CAGED.
 0444            MASK   BIT6
 0445            CCS    A
 0446            INCR   Q
 0447  2         TC     Q
 0448   CAGETSTJ CS     IMODES30        IF DURING MODE SWITCH INITIALIZATION
 0449            MASK   BIT6            IT IS FOUND THAT THE IMU IS BEING CAGED,
 0450            CCS    A               SET IMUCADR TO -0 TO INDICATE OPERATION
 0451  2         TC     Q               COMPLETE BUT FAILED. RETURN IMMEDIATELY
 0452            CS     ZERO            TO SWRETURN.
 0453            TS     IMUCADR
 0454            TCF    MODEEXIT
P0455            GENERALIZED MODE SWITCHING TERMINATION. ENTER AT GOODEND FOR SU
 0456  9CCESSFUL COMPLETION OF AN I/O OPERATION
R0457  2OR AT BADEND FOR A N UNSUCCESSFUL ONE. C(A) OR ARRIVAL =0 FOR IMU, 1 FOR
 0458  9 AOT, AND 2 FOR RADARS.
 0459   BADEND   TS     RUPTREG2        DEVICE INDEX.
 0460            CS     ZERO            FOR FAILURE.
 0461  2         TCF    GOODEND +2
 0462   GOODEND  TS     RUPTREG2
 0463  2         CS     ONE             FOR SUCCESS.
 0464            TS     RUPTREG3
 0465            INDEX  RUPTREG2        SEE IF USING PROGRAM ASLEEP.
 0466            CCS    MODECADR
 0467            TCF    +2              YES - WAKE IT UP.
 0468  2         TCF    ENDMODE         IF 0, PROGRAM NOT IN YET.
 0469            CAF    ZERO            WAKE SLEEPING PROGRAM.
 0470            INDEX  RUPTREG2
 0471            XCH    MODECADR
 0472  2         TC     JOBWAKE
 0473            CS     RUPTREG3        ADVANCE LOC IF SUCCESSFUL.
 0474            INDEX  LOCCTR
 0475  2         ADS    LOC
 0476  2         TCF    TASKOVER
 0477   ENDMODE  CA     RUPTREG3        -0 INDICATES OPERATION COMPLETE BUT
 0478            INDEX  RUPTREG2        UNSUCCESSFUL - -1 INDICATES COMPLETE AND
 0479            TS     MODECADR        SUCCESSFUL.
 0480            TCF    TASKOVER
P0481  2         GENERAL STALLING ROUTINE. USING PROGRAMS COME HERE TO WAIT FOR
 0482  9I/O COMPLETION.
 0483   RADSTALL CAF    TWO             RR AND LR STALL.
 0484  2         TCF    STALL
 0485   AOTSTALL CAF    ONE             AOT.
 0486  2         TC     STALL
 0487  2OPTSTALL EQUALS AOTSTALL
 0488   LOTSTALL EQUALS RADSTALL
 0489  2IMUSTALL CAF    ZERO            IMU.
 0490   STALL    INHINT
 0491            TS     RUPTREG2        SAVE DEVICE INDEX.
 0492            INDEX  A               SEE IF OPERATION COMPLETE.
 0493            CCS    MODECADR
 0494            TCF    MODABORT        ALLOWABLE STATES ARE +0, -1, AND -0.
 0495            TCF    MODESLP         OPERATION INCOMPLETE.
 0496  2         TCF    MODEGOOD        COMPLETE AND GOOD IF = -1.
 0497   MG2      INDEX  RUPTREG2        COMPLETE AND FAILED IF -0. RESET TO +0.
 0498            TS     MODECADR        RETURN TO CALLER.
 0499  2         TCF    MODEEXIT
 0500   MODEGOOD CCS    A               MAKE SURE INITIAL STATE -1.
 0501  2         TCF    MODABORT
 0502            INCR   BUF2            IF SO, INCREMENT RETURN ADDRESS AND
 0503  2         TCF    MG2             RETURN IMMEDIATELY, SETTING CADR = +0.
 0504   MODESLP  TC     MAKECADR        CALL FROM SWITCHABLE FIXED ONLY.
 0505            INDEX  RUPTREG2
 0506            TS     MODECADR
 0507  2         TCF    JOBSLEEP
 0508   MODABORT TC     ABORT           TWO PROGRAMS USING SAME DEVICE.
 0509            OCT    1210
P0510  2         CONSTANTS FOR MODE SWITCHING ROUTINES
 0511   BITS3&4  OCT    14
 0512   BITS4&6  OCT    00050
 0513   BITS4-6  OCT    00070
 0514   IMUSEFLG EQUALS BIT8            INTERPRETER SWITCH 7.
 0515  213,14,15 OCT    70000
 0516   -COMMAX  DEC    -191
 0517   -COMMAX- DEC    -192
 0518   600MS    DEC    60
 0519   3SECSM   EQUALS 3SECS
 0520  290SEC    DEC    9000
 0521   ENDIMODS EQUALS
L       IMU COMPENSATION PACKAGE
 0001            BANK   7
 0002  2         EBANK= NBDX
R0003   PROGRAM DESCRIPTION- IMU COMPENSATION (LEM)
 0004  9DATE- 30 AUG 66
R0005   MOD NO- 0
 0006  9LOG SECTION- IMU COMPENSATION PACKAGE
R0007  2MOD BY- GILBERT
 0008  9ASSEMBLY- SUNBURST REVISION 13
R0009   FUNCTIONAL DESCRIPTION
R0010         THE IMU COMPENSATION PACKAGE IS DESIGNED TO COMPENSATE FOR PIPA BI
 0011  9AS AND SCALE FACTOR ERROR AND AT THE
R0012   SAME TIME ACCUMULATE GYRO TORQUING COMMANDS NECESSARY TO COMPENSATE FOR
 0013  9THE ASSOCIATED BIAS AND ACCELERATION-
R0014   CAUSED GYRO DRIFTS. 1/PIPA MUST BE CALLED AT LEAST EVERY 2.55 SECONDS DU
 0015  9E TO SCALING CONSIDERATIONS.
R0016  2SPECIFICALLY, THE CORRECTION IS
R0017         PIPA  = (1 + SCALE FACTOR ERROR)PIPA  - (BIAS)(DELTAT)
R0018  2          C                               I
R0019   WHERE PIPA  IS THE COMPENSATED DATA OBTAINED FROM THE SAMPLED DATA PIPA
R0020  2          C                                                            I
R0021   THE COMPENSATED DATA IS THEN USED TO COMPUTE THE IRIG TORQUING NECESSARY
 0022  9 TO CANCEL THE NBD, ADIA, AND ADSRA
R0023   GYRO COEFFICIENTS.
R0024  2SPECIFICALLY, THE COMPUTATIONS ARE
R0025         XIRIG     -(ADIAX)(PIPAX ) + (ADSRAX)(PIPAY ) - (NBDX)(DELTAT)
R0026                                 C                  C
R0027         YIRIG     -(ADIAY)(PIPAY ) + (ADSRAY)(PIPAZ ) - (NBDY)(DELTAT)
R0028                                 C                  C
R0029         ZIRIG     -(ADIAZ)(PIPAZ ) - (ADSRAZ)(PIPAY ) + (NBDZ)(DELTAT)
R0030  2                              C                  C
R0031   THIS COMPENSATION IS SUMMED INTO THE GCOMP REGISTERS AND WHEN THE MAGNIT
 0032  9UDE OF ANY IRIG COMMAND EXCEEDS 2
R0033  2PULSES, THE COMMANDS ARE SENT TO THE GYROS.
R0034   DURING FREE-FALL PHASES OF A FLIGHT NBDX, NBDY, AND NBDZ ARE THE ONLY RE
 0035  9LEVANT COEFFICIENTS. THESE BIAS TERMS
R0036   WILL BE INTEGRATED BY ROUTINE NBDONLY APPROXIMATELY EVERY 81.93 SECONDS
 0037  9FOLLOWING AN EXECUTIVE CALL BY THE DUMMY
R0038   TASK OF THE WAITLIST PROGRAM. NBDONLY IS ENABLED WHEN BIT 15 OF FLAGWRD2
 0039  9 IS SET TO INDICATE FREE-FALL. DURING
R0040  2THIS TIME 1/PIPA IS NOT CALLED.
R0041   LASTBIAS IS CALLED VIA EXECUTIVE WHEN MAKING THE TRANSITION FROM FREE-FA
 0042  9LL TO A PIPA READING MODE. THE NBD TERMS
R0043   ARE COMPENSATED FOR FROM THE LAST NBDONLY CALL UP TO PIPA ZEROING. PRERE
 0044  9AD WILL THEN ENABLE 1/PIPA AT ITS
R0045  2REGULAR INTERVAL. THE DRIFT FLAG MUST BE DOWN JUST PRIOR TO LASTBIAS. GY
 00455 9ROCOMPASS NEVER CALLS LASTBIAS.
R0046   SCALING CONSIDERATIONS
R0047  2                           UNITS              MAX. VALUE     INTERNAL UN
 0048  9ITS AND SCALING
R0049         PIPA BIAS            (CM)/(SEC)(SEC)    3.125          (PIPA PULSE
 0050  9S)/(CS) X 2(-5)
R0051         PIPA SCALE FACTOR    P.P.M.             1953.125       (PPM) X 2(-
 0052  99)
R0053         NBD                  MERU               128.74604      (GYRO PULSE
 0054  9S)/(CS) X 2(-5)
R0055         ADIA                 (MERU)/(G)         630.36633      (GYRO PULSE
 0056  9S)/(PIPA PULSE) X 2(-6)
R0057  8      ADSRA                (MERU)/(G)         630.36633      (GYRO PULSE
 0058  9S)/(PIPA PULSE) X 2(-6)
R0059   CONVERSION TABLE
R0060         1 PIPA PULSE = 1.00 (CM)/(SEC)(SEC)          1 ERU = 7.29209817 X
 0061  910(-5) (RAD)/(SEC)
R0062         1 ERU = 15.04104488 (ARCSEC)/(SEC)           1 (CM)/(SEC)(SEC) = .
 0063  901 (PIPA PULSES)/(CS)
R0064         1 GYRO PULSE = .61798096 ARCSEC              1 MERU = .0024272592
 0065  9(GYRO PULSES)/(CS)
R0066  2      1 G = 979.24 (CM)/(SEC)(SEC)  (AMR)          1 (MERU)/(G) = .00014
 0067  94787174 (GYRO PULSES)/(PIPA PULSE)
R0068   REFERENCES
R0069  2      AGC PROGRAMMING MEMO NO. 12, I.S.S. MEMO NO. 247, I.S.S. MEMO NO.
 0070  9328, I.S.S. MEMO NO. 339
R0071   CALLING SEQUENCE
R0072         L      TC     BANKCALL
R0073         L+1    CADR   1/PIPA
R0074  2      L+2                       RETURNS HERE
R0075   NORMAL EXIT MODES
R0076  2      AT L+2 OF CALLING SEQUENCE
R0077   ALARM OR ABORT MODES
R0078  2      ENDOFJOB
R0079   ERASABLE INITIALIZATION REQUIRED (CONSECUTIVE LOCATIONS)
R0080         PBIASX    PIPAX BIAS
R0081         PIPASCFX  PIPAX SCALE FACTOR ERROR
R0082         PBIASY    PIPAY BIAS
R0083         PIPASCFY  PIPAY SCALE FACTOR ERROR
R0084         PBIASZ    PIPAZ BIAS
R0085         PIPASCFZ  PIPAZ SCALE FACTOR ERROR
R0086         NBDX      X IRIG BIAS DRIFT
R0087         NBDY      Y IRIG BIAS DRIFT
R0088         NBDZ      Z IRIG BIAS DRIFT
R0089         ADIAX     IRIG ACCELERATION SENSITIVE DRIFT ALONG THE X INPUT AXIS
R0090         ADIAY     IRIG ACCELERATION SENSITIVE DRIFT ALONG THE Y INPUT AXIS
R0091         ADIAZ     IRIG ACCELERATION SENSITIVE DRIFT ALONG THE Z INPUT AXIS
R0092         ADSRAX    IRIG ACCELERATION SENSITIVE DRIFT ALONG THE X SPIN REFER
 0093  9ENCE AXIS
R0094         ADSRAY    IRIG ACCELERATION SENSITIVE DRIFT ALONG THE Y SPIN REFER
 0095  9ENCE AXIS
R0096         ADSRAZ    IRIG ACCELERATION SENSITIVE DRIFT ALONG THE Z SPIN REFER
 0097  9ENCE AXIS
R00975 2      GCOMP     GYRO COMPENSATION PULSES (SET = ZERO FOR 1ST PASS)
R0098   INPUT
R0099         1/PIPADT - DELTA TIME SCALED AT (CS) X 2(+8)
R0100  2      DELVX, DELVY, DELVZ - PIPA READINGS IN THE MAJOR PARTS - MINOR PAR
 0101  9TS IRRELEVANT
R0102   OUTPUT
R0103         DELVX, DELVY, DELVZ - PIPA COUNTS SCALED 2(+14) COMPENSATED FOR PI
 0104  9PA BIAS AND SCALE FACTOR ERROR
R0105  2      GCOMP - 3 DP LOCATIONS CONTAINING GYRO PULSES TO COMPENSATE FOR NB
 0106  9D, ADIA, AND ADSRA COEFFICIENTS
R0107   DEBRIS
R0108         CENTRALS - A,L,Q
R0109  8      OTHER - BUF - BUF +2, VBUF - VBUF +2, GCOMPSW
 0110   1/PIPA   CAF    LGCOMP          SAVE EBANK OF CALLING PROGRAM
 0111            XCH    EBANK
 01112 2         TS     MODE
 01113           CAF    FOUR            PIPAZ, PIPAY, PIPAX
 01114 2         TS     BUF +2
 0112            INDEX  A
 0113            CA     DELVX           CONTAINS PREVIOUS PIPA READING
 0114  2         TS     VBUF            TEMPORARY - MINOR PARTS IRRELEVANT
 0115            INDEX  BUF +2
 0116            CS     PIPABIAS        (PIPA PULSES)/(CS) X 2(-5)             *
 0117            EXTEND
 0118            MP     1/PIPADT        (CS) X 2(+8)  NOW (PIPA PULSES) X 2(+3)*
 0119            EXTEND                                                        *
 0120            MP     BIT4            SCALE 2(-3)      SHIFT LEFT 3          *
 0121  2         LXCH   VBUF +1         (PIPA PULSES) X 2(0)   FRACTIONAL PULSE*
 0122            INDEX  BUF +2
 0123            CA     PIPASCF         (P.P.M.) X 2(-9)
 0124            EXTEND
 0125            MP     VBUF            (PIPA PULSES) X 2(+14)
 0126            LXCH   VBUF +2         SAVE FOR FRACTIONAL COMPUTATION
 0127            EXTEND
 0128            MP     BIT6            SCALE 2(+9)    NOW PIPA PULSES X 2(+14)
 0129  2         DAS    VBUF            (PIPAI) - (NBD)(DELTAT) - HI(PIPAI)(SFE)
 0130            CA     VBUF +2         NOW MINOR PART
 0131            EXTEND
 0132            MP     BIT6            SCALE 2(+9)    SHIFT RIGHT 9
 0133            TS     L
 0134            CAF    ZERO
 0135  2         DAS    VBUF            (PIPAI) - (NBD)(DELTAT) - (PIPAI)(SFE)
 0136            EXTEND
 0137            DCA    VBUF            RESTORE COMPENSATED PIPA READING
 0138            INDEX  BUF +2
 0139  2         DXCH   DELVX
 0140            CCS    BUF +2          PIPAZ, PIPAY, PIPAX
 0141            AD     NEG1
 0142            TCF    1/PIPA +4
 0143  8         NOOP                   LESS THAN ZERO IMPOSSIBLE
 0144   IRIGCOMP TS     GCOMPSW         INDICATE COMMANDS 2 PULSES OR LESS
 0145  2         TS     BUF             INDEX COUNTER - IRIGX, IRIGY, IRIGZ
 0146   IRIGX    EXTEND
 0147            DCS    DELVX           (PIPA PULSES) X 2(+14)
 0148            DXCH   MPAC
 0149            CA     ADIAX           (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0150  2         TC     GCOMPSUB        -(ADIAX)(PIPAX)   (GYRO PULSES) X 2(+14)
 0151            EXTEND
 0152            DCS    DELVY           (PIPA PULSES) X 2(+14)
 0153            DXCH   MPAC
 0154            CS     ADSRAX          (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0155  2         TC     GCOMPSUB        +(ADSRAX)(PIPAY)  (GYRO PULSES) X 2(+14)
 0156            CS     NBDX            (GYRO PULSES)/(CS) X 2(-5)
 0157  2         TC     DRIFSTUB        -(NBDX)(DELTAT)   (GYRO PULSES) X 2(+14)
 0158   IRIGY    EXTEND
 0159            DCS    DELVY           (PIPA PULSES) X 2(+14)
 0160            DXCH   MPAC
 0161            CA     ADIAY           (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0162  2         TC     GCOMPSUB        -(ADIAY)(PIPAY)   (GYRO PULSES) X 2(+14)
 0163            EXTEND
 0164            DCS    DELVZ           (PIPA PULSES) X 2(+14)
 0165            DXCH   MPAC
 0166            CS     ADSRAY          (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0167  2         TC     GCOMPSUB        +(ADSRAY)(PIPAZ)  (GYRO PULSES) X 2(+14)
 0168            CS     NBDY            (GYRO PULSES)/(CS) X 2(-5)
 0169  2         TC     DRIFSTUB        -(NBDY)(DELTAT)   (GYRO PULSES) X 2(+14)
 0170   IRIGZ    EXTEND
 0171            DCS    DELVY           (PIPA PULSES) X 2(+14)
 0172            DXCH   MPAC
 0173            CA     ADSRAZ          (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0174  2         TC     GCOMPSUB        -(ADSRAZ)(PIPAY   (GYRO PULSES) X 2(+14)
 0175            EXTEND
 0176            DCS    DELVZ           (PIPA PULSES) X 2(+14)
 0177            DXCH   MPAC
 0178            CA     ADIAZ           (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0179  2         TC     GCOMPSUB        -(ADIAZ)(PIPAZ)   (GYRO PULSES) X 2(+14)
 0180            CA     NBDZ            (GYRO PULSES)/(CS) X 2(-5)
 0181  8         TC     DRIFSTUB        +(NBDZ)(DELTAT)   (GYRO PULSES) X 2(+14)
 0182            CCS    GCOMPSW         ARE GYRO COMMANDS GREATER THAN 2 PULSES
 0183            TCF    +2              YES
 0184  2         TCF    IRIG1           NO
 0185            INHINT
 0186            CAF    PRIO35          SEND OUT GYRO TORQUING COMMANDS
 0187            TC     NOVAC
 0188            2CADR  1/GYRO
 0189            RELINT
 01892  IRIG1    CA     MODE            SET EBANK FOR RETURN
 01893           TS     EBANK
 01895 7         TCF    SWRETURN
 0190   GCOMPSUB XCH    MPAC            ADIA OR ADSRA COEFFICIENT ARRIVES IN A
 0191            EXTEND                 C(MPAC) = (PIPA PULSES) X 2(+14)
 0192            MP     MPAC            (GYRO PULSES)/(PIPA PULSE) X 2(-6)     *
 0193  2         DXCH   VBUF            NOW = (GYRO PULSES) X 2(+8)            *
 0194            CA     MPAC +1         MINOR PART PIPA PULSES
 0195            EXTEND
 0196            MP     MPAC            ADIA OR ADSRA
 0197            TS     L
 0198            CAF    ZERO
 0199  2         DAS    VBUF            NOW = (GYRO PULSES) X 2(+8)            *
 0200            CA     VBUF            PARTIAL RESULT - MAJOR
 0201            EXTEND
 0202            MP     BIT9            SCALE 2(+6)      SHIFT RIGHT 6         *
 0203            INDEX  BUF             RESULT = (GYRO PULSES) X 2(+14)
 0204  2         DAS    GCOMP           HI(ADIA)(PIPAI)  OR  HI(ADSRA)(PIPAI)
 0205            CA     VBUF +1         PARTIAL RESULT - MINOR
 0206            EXTEND
 0207            MP     BIT9            SCALE 2(+6)      SHIFT RIGHT 6         *
 0208            TS     L
 0209            CAF    ZERO
 0210            INDEX  BUF             RESULT = (GYRO PULSES) X 2(+14)
 0211  2         DAS    GCOMP           (ADIA)(PIPAI)  OR  (ADSRA)(PIPAI)
 0212  8         TC     Q
 0213   DRIFSTUB EXTEND
 0214  2         QXCH   BUF +1
 0215            EXTEND                 C(A) = NBD    (GYRO PULSES)/(CS) X 2(-5)
 0216            MP     1/PIPADT        (CS) X 2(+8)   NOW (GYRO PULSES) X 2(+3)
 0217            LXCH   MPAC +1         SAVE FOR FRACTIONAL COMPENSATION
 0218            EXTEND
 0219            MP     BIT4            SCALE 2(+11)     SHIFT RIGHT 11
 0220            INDEX  BUF
 0221  2         DAS    GCOMP           HI(NBD)(DELTAT)   (GYRO PULSES) X 2(+14)
 0222            CA     MPAC +1         NOW MINOR PART
 0223            EXTEND
 0224            MP     BIT4            SCALE 2(+11)     SHIFT RIGHT 11
 0225            TS     L
 0226            CAF    ZERO
 0227            INDEX  BUF             ADD IN FRACTIONAL COMPENSATION
 0228  2         DAS    GCOMP           (NBD)(DELTAT)     (GYRO PULSES) X 2(+14)
 0229   DRFTSUB2 CAF    TWO             PIPAX, PIPAY, PIPAZ
 0230            AD     BUF
 0231            XCH    BUF
 0232            INDEX  A
 0233            CCS    GCOMP           ARE GYRO COMMANDS 1 PULSE OR GREATER
 0234            TCF    +2              YES
 0235  2         TC     BUF +1          NO
 0236            MASK   COMPCHK         DEC -1
 0237            CCS    A               ARE GYRO COMMANDS GREATER THAN 2 PULSES
 0238            TS     GCOMPSW         YES - SET GCOMPSW POSITIVE
 0239  8         TC     BUF +1          NO
 0240   1/GYRO   CAF    FOUR            PIPAZ, PIPAY, PIPAX
 0241  2         TS     BUF
 0242            INDEX  BUF             SCALE GYRO COMMANDS FOR IMUPULSE
 0243            CA     GCOMP +1        FRACTIONAL PULSES
 0244            EXTEND
 0245            MP     BIT8            SHIFT RIGHT 7
 0246            INDEX  BUF
 0247  2         TS     GCOMP +1        FRACTIONAL PULSES SCALED
 0248            CAF    ZERO            SET GCOMP = 0 FOR DAS INSTRUCTION
 0249            INDEX  BUF
 0250            XCH    GCOMP           GYRO PULSES
 0251            EXTEND
 0252            MP     BIT8            SHIFT RIGHT 7
 0253            INDEX  BUF
 0254  2         DAS    GCOMP           ADD THESE TO FRACTIONAL PULSES ABOVE
 0255            CCS    BUF             PIPAZ, PIPAY, PIPAX
 0256            AD     NEG1
 0257            TCF    1/GYRO +1
 0258  2LGCOMP   ECADR  GCOMP           LESS THAN ZERO IMPOSSIBLE
 0259            CAF    LGCOMP
 0260            TC     BANKCALL
 0261            CADR   IMUPULSE        CALL GYRO TORQUING ROUTINE
 0262            TC     BANKCALL
 0263            CADR   IMUSTALL        WAIT FOR PULSES TO GET OUT
 0264  2         TCF    ENDOFJOB        TEMPORARY
 0265   GCOMP1   CAF    FOUR            PIPAZ, PIPAY, PIPAX
 0266  2         TS     BUF
 0267            INDEX  BUF             RESCALE
 0268            CA     GCOMP +1
 0269            EXTEND
 0270            MP     BIT8            SHIFT MINOR PART LEFT 7 - MAJOR PART = 0
 0271            INDEX  BUF
 0272  2         LXCH   GCOMP +1        BITS 8-14 OF MINOR PART WERE = 0
 0273            CCS    BUF             PIPAZ, PIPAY, PIPAX
 0274            AD     NEG1
 0275            TCF    GCOMP1 +1
 0276   COMPCHK  DEC    -1              LESS THAN ZERO IMPOSSIBLE
 0277  8         TCF    ENDOFJOB
 0278   NBDONLY  CA     TIME1           (CS) X 2(+14)
 0279            XCH    1/PIPADT        PREVIOUS TIME
 0280            COM
 0281            AD     1/PIPADT
 0282   NBD2     CCS    A               CALCULATE ELAPSED TIME
 0283            AD     ONE             NO TIME1 OVERFLOW
 0284            TCF    NBD3            RESTORE TIME DIFFERENCE AND JUMP
 0285            TCF    +2              TIME1 OVERFLOW
 0286  2         TCF    ENDOFJOB        IF ELAPSED TIME = 0  (DIFFERENCE = -0)
 0287            COM                    CALCULATE ABSOLUTE DIFFERENCE
 0288  2         AD     POSMAX
 0289   NBD3     EXTEND                 C(A) = DELTAT    (CS) X 2(+14)
 0290            MP     BIT10           SHIFT RIGHT 5
 0291            DXCH   VBUF
 0292            EXTEND
 0293            DCA    VBUF
 0294  2         DXCH   MPAC            DELTAT NOW SCALED (CS) X 2(+19)
 0295            CAF    ZERO
 0296            TS     GCOMPSW         INDICATE COMMANDS 2 PULSES OR LESS
 0297  2         TS     BUF             PIPAX, PIPAY, PIPAZ
 0298            CS     NBDX            (GYRO PULSES)/(CS) X 2(-5)
 0299  2         TC     FBIASSUB        -(NBDX)(DELTAT)   (GYRO PULSES) X 2(+14)
 0300            EXTEND
 0301            DCS    VBUF
 0302            DXCH   MPAC            DELTAT SCALED (CS) X 2(+19)
 0303            CA     NBDY            (GYRO PULSES)/(CS) X 2(-5)
 0304  2         TC     FBIASSUB        -(NBDY)(DELTAT)   (GYRO PULSES) X 2(+14)
 0305            EXTEND
 0306            DCS    VBUF
 0307            DXCH   MPAC            DELTAT SCALED (CS) X 2(+19)
 0308            CS     NBDZ            (GYRO PULSES)/(CS) X 2(-5)
 0309  2         TC     FBIASSUB        +(NBDZ)(DELTAT)   (GYRO PULSES) X 2(+14)
 0310            CCS    GCOMPSW         ARE GYRO COMMANDS GREATER THAN 2 PULSES
 0311            TCF    1/GYRO          YES
 0312  8         TCF    ENDOFJOB        NO
 0313   FBIASSUB XCH    Q
 0314  2         TS     BUF +1
 0315            CA     Q               NBD SCALED (GYRO PULSES)/(CS) X 2(-5)
 0316            EXTEND
 0317            MP     MPAC            DELTAT SCALED (CS) X 2(+19)
 03175           INDEX  BUF
 0318  2         DAS    GCOMP           HI(NBD)(DELTAT)   (GYRO PULSES) X 2(+14)
 0319            CA     Q               NOW FRACTIONAL PART
 0320            EXTEND
 0321            MP     MPAC +1
 0322            TS     L
 0323            CAF    ZERO
 03235           INDEX  BUF
 0324  2         DAS    GCOMP           (NBD)(DELTAT)     (GYRO PULSES) X 2(+14)
 0325  6         TCF    DRFTSUB2        CHECK MAGNITUDE OF COMPENSATION
 0326   LASTBIAS XCH    1/PIPADT        NEW 1/PIPADT VALUE SCALED (CS) X 2(+14)
 0327            COM
 0328            AD     MPAC            C(TIME1) AT PIPAI = 0 SCALED 2(+14)
 0329  6         TCF    NBD2
 0340   GCOMPZER CAF    LGCOMP           ROUTINE TO ZERO GCOMP BEFORE FIRST
 0341            XCH    EBANK            CALL TO 1/PIPA
 0342  2         TS     MODE
 0343            CAF    ZERO
 0344            TS     GCOMP
 0345            TS     GCOMP +1
 0346            TS     GCOMP +2
 0347            TS     GCOMP +3
 0348            TS     GCOMP +4
 0349  2         TS     GCOMP +5
 0350            CA     MODE
 0351            TS     EBANK
 0352            TCF    SWRETURN         RETURN TO CALLER
L       AOTMARK
 0001  2         SETLOC ENDIMODS
 0002            EBANK= AOTAZ
 0003   AOTMARK  INHINT
 0004            TS     RUPTREG2        BIT14=INFLIGHT  0=NONFLIGHT
 0005            CCS    MARKSTAT        ARE MARKS BUTTONS IN USE
 0006            TC     +2              MARKS BUTTONS NOT AVAILABLE
 0007            TC     MKVAC           FIND A VAC AREA
 0008            TC     ALARM
 0009            OCT    00105
 0010  2         TC     ENDOFJOB
 0011   MKVAC    CCS    VAC1USE
 0012            TC     MKVACFND
 0013            CCS    VAC2USE
 0014            TC     MKVACFND
 0015            CCS    VAC3USE
 0016            TC     MKVACFND
 0017            CCS    VAC4USE
 0018            TC     MKVACFND
 0019            CCS    VAC5USE
 0020            TC     MKVACFND
 0021            TC     ABORT           VAC AREAS OCCUPIED
 0022  2         OCT    01207
 0023   MKVACFND AD     TWO
 0024            TS     MARKSTAT
 0025            CAF    ZERO
 0026            TS     XYMARK          INITIALIZE MARK ID REGISTER
 0027            INDEX  MARKSTAT
 0028  2         TS     0 -1            SHOW VAC OCCUPIED
 0029            CA     RUPTREG2
 0030  2         ADS    MARKSTAT
 0031            CAF    PRIO32
 0032            TC     NOVAC
 0033            2CADR  GETMKS
 0034  2         TC     MODEEXIT
 0035   MKRELEAS CAF    ZERO
 0036            XCH    MARKSTAT        SET MARKSTAT  ZERO
 0037            CCS    A
 0038            INDEX  A
 0039            TS     0               SHOW VAC AREA AVAILABLE
 0040  8         TC     SWRETURN
 0041   GETMKS   CAF    ZERO
 0042            TS     XYMARK
 0043            CAF    BIT14           FIND IF IN-FLIGHT OR NON-FLIGHT
 0044            MASK   MARKSTAT
 0045            CCS    A
 0046            TC     MKVB53          IN-FLIGHT
 0047            CS     BIT11           NON-FLIGHT, SET Y MARK =1
 0048            MASK   MARKSTAT
 0049            AD     BIT11
 0050            TS     MARKSTAT
 0051            CAF    VB51            REQUEST X MARK
 0052            TC     +2
 0053   MKVB53   CAF    VB53            REQUEST X AND Y MARKS
 0054            TC     NVSBWAIT
 0055            TC     FLASHON
 0056            TC     ENDIDLE
 0057            TC     GETMKS +1
 0058  2         TC     GETMKS +1
 0059   MKCHEK   CAF    BIT10           WAS X MARK MADE
 0060            MASK   MARKSTAT
 0061            CCS    A
 0062            TC     +2              X MARK MADE-LOOK AT Y MARK
 0063            TC     MKALARM
 0064            CAF    BIT11
 0065            MASK   MARKSTAT
 0066            CCS    A
 0067  2         TC     GETDET          BOTH MARKS MADE-SHOW ACCEPT-GET DETENT
 0068   MKALARM  TC     ALARM           IF EITHER MARK IS MISSING AFTER ENTER
 0069            OCT    111
 0070            CS     PRIO17          SET BITS 10,11,12,13 TO ZERO IN MARKSTAT
 0071            MASK   MARKSTAT
 0072            TS     MARKSTAT
 0073  2         TC     GETMKS          GETMKS AGAIN
 0074   GETDET   CS     BIT12
 0075            MASK   MARKSTAT
 0076            AD     BIT12           SET BIT12=1 TO SHOW MARKS ACCEPTED
 0077            TS     MARKSTAT
 0078   DETVB21  CAF    V21N43E
 0079            TC     NVSBWAIT
 0080            TC     ENDIDLE
 0081            TC     DETVB21
 0082  2         TC     DETVB21
 0083            CS     OCT3
 0084            MASK   DETCODE
 0085            CCS    A
 0086            TC     DETVB21         BAD CODE, REQUEST AGAIN
 0087            TC     +3              LOOKS GOOD BUT COULD BE ZERO
 0088            TC     +1
 0089            TC     DETVB21
 0090            CAF    OCT3
 0091            MASK   DETCODE         SEE IF ZERO
 0092            CCS    A
 0093            TC     +2              GOOD CODE-STORE ANGLES
 0094  2         TC     DETVB21         ZERO-BAD CODE-REQUEST AGAIN
 0095            CAF    LOW9
 0096            MASK   MARKSTAT
 0097            TS     BASVAC          STORE VAC AREA ADDRESS
 0098            INDEX  DETCODE
 0099            CA     AOTEL -1
 0100            INDEX  BASVAC
 0101            TS     9D              STORE ELV ANGLE IN VAC +9
 0102            INDEX  DETCODE
 0103            CA     AOTAZ -1
 0104            INDEX  BASVAC
 0105  2         TS     8D              STORE AZIMUTH IN VAC +8
 0106            CAF    BIT14           IN-FLIGHT OR NON-FLIGHT
 0107            MASK   MARKSTAT
 0108            CCS    A
 0109            TC     MKOUT           IN-FLIGHT, NO MORE DATA NEEDED
 0110  2         TC     ROTVB24         NON-FLIGHT, GET ROTATION ANGLES
 0111   ROTVB24  CAF    V24N42E         REQUEST RETICLE ROTATION ANGLES
 0112            TC     NVSBWAIT
 0113            TC     ENDIDLE
 0114            TC     ROTVB24
 0115  2         TC     ROTVB24
 0116            CAF    LOW9
 0117            MASK   MARKSTAT
 0118            TS     BASVAC
 0119            CA     DSPTEM2         YROT
 0120            INDEX  BASVAC
 0121            TS     3               STORE Y RETICLE ROT ANGLE IN VAC +3
 0122            CA     DSPTEM2 +1      SROT
 0123            INDEX  BASVAC
 0124  2         TS     5               STORE SPIRAL ROT ANGLE VAC +5
 0125   MKOUT    CAF    LOW9
 0126            MASK   MARKSTAT
 0127  2         TS     MARKSTAT        SET HI5 ZERO
 0128            INHINT
 0129            CAF    ONE
 0130            TC     WAITLIST
 0131            2CADR  ENDMARKS
 0132  2         TC     ENDOFJOB
 0133   ENDMARKS CAF    ONE
 0134  8         TCF    GOODEND
 0135   MARKRUPT TS     BANKRUPT
 0136            CA     CDUY            STORE CDU DATA AND TIME IN TEMP
 0137            TS     RUPTSTOR +2
 0138            CA     CDUZ
 0139            TS     RUPTSTOR +4
 0140            CA     CDUX
 0141            TS     RUPTSTOR +6
 0142            EXTEND
 0143            DCA    TIME2
 0144  2         DXCH   RUPTSTOR
 0145            XCH    Q
 0146  2         TS     QRUPT
 0147            CAF    OCT34           SEE IF X OR Y MARK OR MKREJECT
 0148            EXTEND
 0149            RAND   NAVKEYIN
 0150            CCS    A
 0151            TC     +2              ITS A LIVE ONE-CHECK FOR ACCEPT
 0152  2         TC     SOMEKEY         SOME OTHER KEY
 0153            CAF    BIT12           HAVE MARKS BEEN ACCEPTED
 0154            MASK   MARKSTAT
 0155            CCS    A
 0156  2         TC     RESUME          MARKS MADE AND ACCEPTED - DO NOTHING
 0157            CCS    MARKSTAT        ARE MARKS BEING ACCEPTED
 0158            TC     FINDKEY
 0159            TC     ALARM           MARKS NOT BEING ACCEPTED
 0160            OCT    112
 0161  2         TC     RESUME
 0162   FINDKEY  CAF    BIT5
 0163            EXTEND
 0164            RAND   NAVKEYIN        CHANNEL 16
 0165            CCS    A
 0166            TC     MKREJ           ITS A MARK REJECT
 0167            CAF    BIT4
 0168            EXTEND
 0169            RAND   NAVKEYIN
 0170            CCS    A
 0171            TC     YMKRUPT         ITS A Y MARK
 0172            CAF    BIT3
 0173            EXTEND
 0174            RAND   NAVKEYIN
 0175            CCS    A
 0176            TC     XMKRUPT         ITS AN X MARK
 0177   SOMEKEY  CAF    OCT140          NOT MARK OR MARK REJECT
 0178            EXTEND
 0179            RAND   NAVKEYIN
 0180            EXTEND
 0181  2         BZF    +3              IF NO INBITS.
 0182            TC     POSTJUMP        IF DESCENT BITS.
 0183  2         CADR   DESCBITS
 0184    +3      TC     ALARM
 0185            OCT    113
 0186  2         TC     RESUME
 0187   XMKRUPT  CAF    ZERO
 0188            TS     ITEMP1
 0189            CAF    BIT10
 0190            TC     +4
 0191   YMKRUPT  CAF    ONE
 0192            TS     ITEMP1
 0193            CAF    BIT11
 0194  2         TS     XYMARK          SET MARK ID
 0195            MASK   MARKSTAT
 0196            CCS    A
 0197            TC     +2              MARK MADE BUT NOT DESIRED
 0198            TC     VACSTOR         MARK DESIRED AND MADE-STORE CDUS
 0199            TC     ALARM
 0200            OCT    114
 0201  2         TC     REMARK          RENEW REQUEST
 0202   VACSTOR  CAF    LOW9            STORE TIME AND CDUS IN VAC AREA
 0203            MASK   MARKSTAT
 0204            TS     ITEMP2
 0205            EXTEND
 0206            DCA    RUPTSTOR
 0207            INDEX  ITEMP2
 0208            DXCH   0               STORE TIME1 AND TIME2 IN VAC
 0209            CA     ITEMP2
 0210            ADS    ITEMP1
 0211            CA     RUPTSTOR +2
 0212            INDEX  ITEMP1
 0213            TS     2
 0214            CA     RUPTSTOR +4
 0215            INDEX  ITEMP1
 0216            TS     4
 0217            CA     RUPTSTOR +6
 0218            INDEX  ITEMP1
 0219  2         TS     6
 0220            CAF    BIT13
 0221            AD     XYMARK
 0222            COM
 0223            MASK   MARKSTAT
 0224            AD     XYMARK          SET MARK MADE BIT IN MARKSTAT=1
 0225            TS     MARKSTAT        AND SET BIT13 ZERO TO SHOW MARK
 0226  8         TC     REMARK          MADE BEFORE A REJECT - GO REMARK
 0227   REMARK   CAF    ZERO
 0228            TS     MKDEX           MKDEX=0
 0229            CAF    BIT11           LOOK A Y MARK
 0230            MASK   MARKSTAT
 0231            CCS    A
 0232            TC     +3              Y MARK MADE
 0233            CAF    BIT8            Y MARK REQUIRED
 0234  2         TS     MKDEX
 0235            CAF    BIT10           LOOK AT X MARK
 0236            MASK   MARKSTAT
 0237            CCS    A
 0238            TC     MKJOB
 0239            CAF    BIT7            X MARK REQUIRED
 0240  2         ADS    MKDEX
 0241   MKJOB    CAF    PRIO32
 0242            TC     NOVAC           ENTER JOB TO PASTE VERB
 0243            2CADR  CHANGVB
 0244            CA     RUPTREG4
 0245            INDEX  LOCCTR
 0246            TS     MPAC
 0247  2         TC     RESUME
 0248   CHANGVB  CCS    MPAC
 0249            TC     SHOWVB
 0250            CAF    VB21N30E
 0251            TC     SHOWVB +2
 0252   SHOWVB   CAF    VB50
 0253            AD     MPAC
 0254            TS     NVTEMP
 0255            CA     CADRSTOR        NVSUB CLOBBERS THIS-USE LOC AS TEMP
 0256            TS     LOC
 0257            TC     NVSUB +3
 0258   VB51     OCT    5100
 0259            CA     LOC             RESTORE CADRSTOR
 0260            TS     CADRSTOR
 0261  2         TC     ENDOFJOB
 0262   MKREJ    CAF    BIT14           IN-FLIGHT OR NON-FLIGHT
 0263            MASK   MARKSTAT
 0264            CCS    A
 0265            TC     REJIN           IN-FLIGHT
 0266            CAF    BIT10           NON-FLIGHT, SEE IF X MARK MADE
 0267            MASK   MARKSTAT
 0268            CCS    A
 0269            TC     REJECT2         XMARK MADE-REJECT IT
 0270  2         TC     REJALARM        X MARK NOT MADE-ALARM-NO MARKS TO REJ
 0271   REJIN    CAF    PRIO3           WERE IN-FLIGHT MARKS MADE
 0272            MASK   MARKSTAT
 0273            CCS    A
 0274            TC     REJECT          MARKS MADE-REJECT ONE
 0275   REJALARM TC     ALARM           NO MARKS MADE TO REJECT-GET MARKS
 0276            OCT    115
 0277            TC     REJECT2
 0278   REJECT   CS     BIT13           SHOW MKREJECT AND SEE MARK MADE
 0279            MASK   MARKSTAT        SINCE LAST REJECT
 0280            AD     BIT13
 0281            XCH    MARKSTAT
 0282            MASK   BIT13
 0283            CCS    A
 0284            TC     REJECT2         ANOTHER REJECT
 0285            CS     XYMARK          MARK MADE SINCE LAST REJECT-REJECT IT
 0286            MASK   MARKSTAT
 0287            TS     MARKSTAT
 0288  2         TC     REMARK          GO REQUEST MARKS
 0289   REJECT2  CS     PRIO3           NO MARKS SINCE LAST REJECT SO SET
 0290            MASK   MARKSTAT        MARKSTAT TO WANT X AND Y MARKS
 0291            XCH    MARKSTAT
 0292            MASK   BIT14           IN-FLIGHT OR NON-FLIGHT
 0293            CCS    A
 0294            TC     REMARK          IN-FLIGHT, GO GET MARKS
 0295            CAF    BIT11           NON-FLIGHT, STILL REQUEST X MARK ONLY
 0296            ADS    MARKSTAT
 0297  2         TC     REMARK          GO GET X MARK
 0298   OCT3     EQUALS THREE
 0299   OCT34    OCT    00034
 0300   OCT140   OCT    00140
 0301   V21N43E  OCT    2143
 0302   V24N42E  OCT    2442
 0303   VB53     OCT    5300
 0304   MKDEX    EQUALS RUPTREG4
 0305   DETCODE  EQUALS XYMARK
 0306   BASVAC   EQUALS Q
 0307   VB21N30E OCT    2130
 0308   VB50     OCT    5000
 0309   ENDAMODS EQUALS
L0001  2RADAR LEAD-IN ROUTINES
 0001            SETLOC ENDIMODF
 0002  2         EBANK= RRRET
R0003            THE FOLLOWING SUBROUTINE RETURNS TO CALLER + 2 IF THE ABSOLUTE
 0004  9VALUE OF C(A) IS GREATER THAN THE
R0005  2NEGATIVE OF THE NUMBER AT CALLER +1. OTHERWISE IT RETURNS TO CALLER +3.
 0006  9MAY BE CALLED IN RUPT OR UNDER EXEC.
 0007   MAGSUB   EXTEND
 0008            BZMF   +2
 0009            TCF    +2
 0010  2         COM
 0011            INDEX  Q
 0012            AD     0
 0013            EXTEND
 0014            BZMF   +3
 0015            INDEX  Q               ABS(A) G CONST
 0016  2         TC     1
 0017   MAGLESS  INDEX  Q               ABS(A) LEQ CONST
 0018            TC     2
P0019            THE FOLLOWING SUBROUTINE CHECKS RR GIMBAL ANGLES TO SEE IF THEY
 0020  9 ARE IN THE LIMITS OF THE CURRENT MODE.
R0021  2CALLING SEQUENCE IS AS FOLLOWS:
A0022            TC     RRLIMCHK        (WITH INTERRUPT INHIBITED).
A0023  2         ADRES  T,S             (IN UNSWITCHED E OR CURRENT EBANK).
R0024  2         RETURN IS TO CALLER +2 IF NOT IN LIMITS AND TO CALLER +3 IF SO.
 0025   RRLIMCHK INDEX  Q               READ GIMBAL ANGLES INTO ITEMP STORAGE.
 0026            CAF    0
 0027            INCR   Q
 0028            EXTEND
 0029            INDEX  A
 0030            DCA    0
 0031            DXCH   ITEMP1
 0032  2         LXCH   Q               L(CALLER +2) TO L.
 0033            CAF    BIT12           SEE WHICH MODE RR IS IN.
 0034            MASK   RADMODES
 0035            CCS    A
 0036  2         TCF    MODE2CHK
 0037            CA     ITEMP1          MODE 1 IS DEFINED AS
 0038            TC     MAGSUB              1. ABS(T) L 70 DEGS.
 0039            DEC    -.30555             2. ABS(S + 5.5 DEGS) L 64.5 DEGS
 0040  2         TC     L                       (SHAFT LIMITS AT +59, -70 DEGS)
 0041            CAF    5.5DEGS
 0042            AD     ITEMP2          S
 0043            TC     MAGSUB
 0044            DEC    -.35833         64.5 DEGS
 0045            TC     L
 0046  2         TC     RRLIMOK         IN LIMITS.
 0047   MODE2CHK CAF    82DEGS          MODE 2 IS DEFINED AS
 0048            AD     ITEMP2              1. ABS(T) G 110 DEGS
 0049            TC     MAGSUB              2. ABS(S + 82 DEGS) L 57 DEGS
 0050            DEC    -.31667                 (SHAFT LIMITS AT -25, -139 DEGS)
 0051  2         TC     L
 0052            CA     ITEMP1
 0053            TC     MAGSUB
 0054  2         DEC    -.61111         110 DEGS
 0055   RRLIMOK  INDEX  L
 0056  2         TC     L               ( = TC 1)
 00565  5.5DEGS  DEC    .03056
 0057   5DEGS    DEC    .02777          SCALED IN HALF-REVOLUTIONS.
 0058   82DEGS   DEC    .45556
P0059  2         THE FOLLOWING ROUTINE UPDATES THE TRACKER FAIL LAMP ON THE DSKY
 0060  9. IF EITHER:
R0061            1. N SAMPLES OF RR DATA COULD NOT BE OBTAINED FROM 2N TRIES
R0062            2. N SAMPLES OF LR DATA COULD NOT BE TAKEN IN 2N TRIES WITH EIT
 0063  9HER THE ALT OR VEL INFORMATION.
R0064  2         3. RR CDU FAILED WITH RR IN AUTO MODE AND RR CDU NOT BEING ZERO
 0065  9ED.
 0066   SETTRKF  CAF    BIT1            NO ACTION IF DURING LAMP TEST.
 0067            MASK   IMODES33
 0068            CCS    A
 0069  2         TC     Q
 0070            CAF    13,7,2          SEE IF CDU FAILED.
 0071            MASK   RADMODES
 0072            EXTEND
 0073  2         BZF    TRKFLON         CONDITION 3 ABOVE.
 0074            CS     RADMODES        SEE IF LR FAILED.
 0075            MASK   8,5
 0076            EXTEND
 0077  2         BZF    TRKFLON         CONDITION 2 ABOVE.
 0078            CAF    BIT4            SEE IF RR DATA FAILED.
 0079            MASK   RADMODES
 0080            CCS    A
 0081   TRKFLON  CAF    BIT8
 0082            AD     DSPTAB +11D     HALF ADD DESIRED AND PRESENT STATES.
 0083            MASK   BIT8
 0084            EXTEND
 0085  2         BZF    TCQ             NO CHANGE.
 0086            TS     L               INVERT BIT 8 AND SET BIT 15.
 0087            CA     DSPTAB +11D     CANT USE LXCH DSPTAB +11D (RESTART PROB)
 0088            EXTEND
 0089            RXOR   L
 0090            MASK   POSMAX
 0091            AD     BIT15
 0092            TS     DSPTAB +11D
 0093  2         TC     Q
 0094   13,7,2   OCT    10102
 0095  28,5      OCT    00220
 0096   ENDRMODF EQUALS
P0097  2         TURNON SEQUENCE TO ZERO THE CDUS AND DETERMINE THE RR MODE.
 0098  2         BANK   10
 0099   RRTURNON TC     RRZEROSB
 0100            TC     FIXDELAY        WAIT 1 SEC BEFORE REMOVING TURN ON FLAG
 0101            DEC    100             SO A MONITOR REPOSITION WONT ALARM.
 0102            CS     BIT1
 0103            MASK   RADMODES
 0104            TS     RADMODES
 0105            CS     STATE           SEE IF SOMEONE IS WAITING TO USE THE RR.
 0106            MASK   RRUSEFLG
 0107            CCS    A
 0108  2         TCF    TASKOVER
 0109            TCF    ENDRADAR        CHECK RR CDU FAIL BEFORE EXIT.
P0110  2         CLOSED SUBROUTINE TO ZERO THE RR CDUS.
 0111   RRZEROSB EXTEND
 0112            QXCH   RRRET
 0113            CAF    BIT1            BIT 13 OF RADMODES MUST BE SET BEFORE
 0114            EXTEND                 COMING HERE.
 0115            WOR    12
 0116            TC     FIXDELAY
 0117  2         DEC    2
 0118            CAF    ZERO
 0119            TS     OPTY
 0120            TS     OPTX
 0121            CS     ONE             REMOVE ZEROING BIT.
 0122            EXTEND
 0123            WAND   12
 0124            TC     FIXDELAY
 0125  2         DEC    300
 0126            CS     BIT13           REMOVE ZEROING IN PROCESS BIT.
 0127            MASK   RADMODES
 0128  2         TS     RADMODES
 0129            CA     OPTY
 0130            TC     MAGSUB
 0131            DEC    -.5
 0132  2         TCF    +3              IF MODE 2.
 0133            CAF    ZERO
 0134            TCF    +2
 0135            CAF    BIT12
 0136            XCH    RADMODES
 0137            MASK   -BIT12
 0138  2         ADS    RADMODES
 0139  2         TC     SETTRKF         TRACKER LAMP MIGHT GO ON NOW.
 0140  2         TC     RRRET           DONE.
 0141   -BIT12   EQUALS -1/8            IN SPROOT
P0142  2         SEQUENCE OF TASKS TO DRIVE THE RR TO A SAFE POSITION.
 0143  2DORREPOS TC     SETRRECR        SET UP RR CDU ERROR COUNTERS.
 0144            CAF    BIT1            DO AN ALARM UNLESS RR JUST TURNED ON.
 0145            MASK   RADMODES
 0146            CCS    A
 0147  2         TCF    +3
 0148            TC     ALARM
 0149            OCT    501
 0150            TC     FIXDELAY
 0151  2         DEC    2
 0152            CAF    BIT12           MANEUVER TRUNNION ANGLE TO NOMINAL POS.
 0153            MASK   RADMODES
 0154            CCS    A
 0155            CAF    BIT15           0 FOR MODE 1 AND 180 FOR MODE 2.
 0156  2         TC     RRTONLY
 0157            CAF    BIT12           NOW PUT SHAFT IN RIGHT POSITION.
 0158            MASK   RADMODES
 0159            CCS    A
 0160            CS     HALF            -90 FOR MODE 2.
 0161  2         TC     RRSONLY
 0162   REPOSRPT CS     BIT11           RETURNS HERE FROM RR1AXIS IF REMODE
A0163                                   REQUESTED DURING REPOSITION.
 0164            MASK   RADMODES        REMOVE REPOSITION BIT.
 0165            TS     RADMODES
 0166            MASK   BIT10           SEE IF SOMEONE IS WAITING TO DESIGNATE.
 0167            CCS    A
 0168            TCF    BEGDES
 0169            CS     BIT2            IF NO FURTHER ANTENNA CONTROL REQUIRED,
 0170            EXTEND                 REMOVE ERROR COUNTER ENABLE.
 0171            WAND   12
 0172  2         TCF    TASKOVER
 0173   SETRRECR CAF    BIT2            SET UP RR ERROR COUNTERS.
 0174            EXTEND
 0175  2         WOR    12
 0176            CAF    ZERO
 0177            TS     LASTYCMD
 0178            TS     LASTXCMD
 0179            TC     Q
P0180            GENERAL REMODING SUBROUTINE. DRIVES TRUNION TO 0 (180), THEN DR
 0181  9IVES SHAFT TO -45, AND FINALLY DRIVES
R0182   TRUNNION TO -130 (-50) BEFORE INITIATING 2-AXIS CONTROL. ALL RE-MODING I
 0183  9ONE WITH SINGLE AXIS ROTATIONS (RR1AXIS)
 0184   REMODE   CAF    BIT12           DRIVE TRUNNION TO 0 (180).
 0185            MASK   RADMODES        (ERROR COUNTER ALREADY ENABLED)
 0186            CCS    A
 0187            CAF    BIT15
 0188  2         TC     RRTONLY
 0189            CAF    -45DEGSR
 0190  2         TC     RRSONLY
 0191            CS     RADMODES
 0192            MASK   BIT12
 0193            CCS    A
 0194            CAF    -80DEGSR        GO TO T = -130 (-50).
 0195            AD     -80DEGSR
 0196  2         TC     RRTONLY
 0197  2         TC     RMODINV
 0198            CS     BIT14           END OF REMODE.
 0199            MASK   RADMODES
 0200  2         TS     RADMODES
 0201  2         TC     STDESIG         BEGIN 2-AXIS CONTROL.
 0202   -45DEGSR OCT    70000
 02025  -50DEGSR DEC    -.27778
 0203  2-80DEGSR DEC    -.44444
 0204   RMODINV  LXCH   RADMODES        INVERT THE MODE STATUS.
 0205            CAF    BIT12
 0206            EXTEND
 0207            RXOR   L
 0208            TS     RADMODES
 0209            TC     Q
P0210  2         SUBROUTINES FOR DOING SINGLE AXIS RR MANEUVERS FOR REMODE AND R
 0211  9EPOSITION. DRIVES TO WITHIN 1 DEGREE.
 0212   RRTONLY  TS     RDES            DESIRED TRUNION ANGLE.
 0213            CAF    ZERO
 0214  2         TCF    RR1AXIS
 0215   RRSONLY  TS     RDES            SHAFT COMMANDS ARE UNRESOLVED SINCE THIS
 0216  2         CAF    ONE             ROUTINE ENTERED ONLY WHEN T = 0 OR 180.
 0217   RR1AXIS  TS     RRINDEX
 0218            EXTEND
 0219            QXCH   RRRET
 0220  2         TCF    RR1AX2
 0221   NXTRR1AX TC     FIXDELAY
 0222  2         DEC    50              2 SAMPLES PER SECOND.
 0223   RR1AX2   CS     RADMODES        IF SOMEONE REQUESTES AS DESIGNATE WHICH
 0224            MASK   PRIO22          REQUIRES A REMODE AND A REPOSITION IS IN
 0225            EXTEND                 PROGRESS, INTERRUPT IT AND START THE
 0226  2         BZF    REPOSRPT        REMODE IMMEDIATELY.
 0227            CA     RDES
 0228            EXTEND
 0229            INDEX  RRINDEX
 0230            MSU    OPTY
 0231            TS     Q               SAVE ERROR SIGNAL.
 0232            EXTEND
 0233            MP     RRSPGAIN        TRIES TO NULL .7 OF ERROR OVER NEXT .5
 0234            TS     L
 0235            CA     Q               SEE IF WITHIN 1 DEGREE.
 0236            TC     MAGSUB
 0237  2         DEC    -.00555         SCALED IN HALF-REVS.
 0238            TCF    +2              NO.
 0239  2         TC     RRRET           RETURN TO CALLER.
 0240            CCS    RRINDEX         COMMAND FOR OTHER AXIS IS ZERO.
 0241            TCF    +2              SETTING A TO 0.
 0242            XCH    L
 0243  2         DXCH   TANG
 0244  2         TC     RROUT
 0245  2         TCF    NXTRR1AX        COME BACK IN .5 SECONDS.
 0246   RRSPGAIN DEC    .59062          NULL .7 ERROR IN .5 SEC.
P0247            THE FOLLOWING ROUTINE RECEIVES RR GYRO COMMANDS IN TANG,+1 IN E
 0248  9RROR COUNTER SCALING. RROUT LIMITS THEM
R0249  2AND GENERATES COMMANDS TO THE CDU TO ADJUST THE ERROR COUNTERS TO THE DE
 0250  9SIRED VALUES. RUPT MUST BE INHIBITED.
 0251   RROUT    LXCH   Q               SAVE RETURN.
 0252            CAF    ONE             LOOP TWICE.
 0253   RROUT2   TS     ITEMP2
 0254            INDEX  A
 0255            CA     TANG
 0256  2         TS     ITEMP1          SAVE SIGN OF COMMAND FOR LIMITING.
 0257            TC     MAGSUB          SEE IF WITHIN LMITS.
 0258   -RRLIMIT DEC    -384
 0259  2         TCF    RROUTLIM        LIMIT COMMAND TO MAG OF 384.
 0260   SETRRCTR CA     ITEMP1          COUNT OUT DIFFERENCE BETWEEN DESIRED
 0261            INDEX  ITEMP2          STATE AND PRESENT STATE AS RECORDED IN
 0262            XCH    LASTYCMD        LASTYCMD AND LASTXCMD
 0263            COM
 0264            AD     ITEMP1
 0265            INDEX  ITEMP2
 0266  2         TS     OPTYCMD
 0267            CCS    ITEMP2          PROCESS BOTH INPUTS.
 0268  2         TCF    RROUT2
 0269            CAF    PRIO6           ENABLE COUNTERS.
 0270            EXTEND
 0271  2         WOR    14
 0272  2         TC     L               RETURN.
 0273   RROUTLIM CCS    ITEMP1          LIMIT COMMAND TO ABS VAL OF 384.
 0274            CS     -RRLIMIT
 0275            TCF    +2
 0276            CA     -RRLIMIT
 0277            TS     ITEMP1
 0278            TCF    SETRRCTR +1
P0279  2         ROUTINE TO ZERO THE RR CDUS AND DETERMINE THE ANTENNA MODE.
 0280   RRZERO   INHINT
 0281            CS     RRUSEFLG        SET FLAG TO SHOW SOMEONE USING THE RR.
 0282            MASK   STATE
 0283            AD     RRUSEFLG
 0284  2         TS     STATE
 0285            CAF    BIT1            SEE IF RR COMING UP. IF SO, TURNON
 0286            MASK   RADMODES        PROGRAM WILL DO THE WORK.
 0287            CCS    A
 0288  2         TCF    ROADBACK
 0289            CAF    BIT11           SEE IF MONITOR REPOSITION IN PROGRESS.
 0290            MASK   RADMODES        IF SO, DONT RE-ZERO CDUS.
 0291            CCS    A
 0292  2         TCF    RADNOOP         (IMMEDIATE TASK TO RGOODEND).
 0293            CS     BIT13           SET FLAG TO SHOW ZEROING IN PROGRESS.
 0294            MASK   RADMODES
 0295            AD     BIT13
 0296  2         TS     RADMODES
 0297            CAF    ONE
 0298            TC     WAITLIST
 0299            2CADR  RRZ2
 0300            CS     RADMODES        SEE IF IN AUTO MODE.
 0301            MASK   BIT2
 0302            CCS    A
 0303            TCF    ROADBACK
 0304            TC     ALARM           AUTO DISCRETE NOT PRESENT - TRYING
 0305            OCT    510
 0306   ROADBACK RELINT
 0307  2         TCF    SWRETURN
 0308   RRZ2     TC     RRZEROSB        COMMON TO TURNON AND RRZERO.
 0309            TCF    ENDRADAR
 0310   RRUSEFLG EQUALS BIT7
 0311   LOKONFLG EQUALS BIT5
P0312            STABLE-MEMBER RR DESIGNATE ROUTINE. DESIGNATE TO A SM LOS VECTO
 0313  9R (HALF-UNIT) IN RRTARGET. REMODES IF
R0314  2REQUIRED. RETURNS TO CALLER IF MANEUVER REQUIRED FOR DES AND SKIPS IF IT
 0315  9 CAN BE DONE IN PRESENT VEH ATTITUDE.
 0316   RRDESSM  STQ    CLEAR
 0317                   DESRET
 0318                   RRNBSW
 0319            RTB    SSP             READ CDUS FOR SMNB.
 0320                   READCDUS
 0321                   S1
 0322                   20D
 0323            STOVL  20D
 0324                   RRTARGET
 0325            STCALL 32D
 0326  2                SMNB
 0327            CALL                   GET RR GIMBAL ANGLES IN PRESENT AND
 0328                   RRANGLES        ALTERNATE MODE.
 0329  2         EXIT
 0330            INHINT
 0331            TC     RRLIMCHK
 0332            ADRES  MODEA           CONFIGURATION FOR CURRENT MODE.
 0333  2         TCF    TRYSWS
 0334   OKDESSM  INCR   DESRET          INCREMENT SAYS NO VEHICLE MANEUVER REQ.
P0335            AT THIS POINT WE ARE READY TO BEGIN DESIGNATION. THE TARGET IS
 0336  9STORED AS A HALF-UNIT VECTOR IN RRTARGET
R0337   WITH RRNBSW SET IF IT IS REFERRED TO NAV BASE AXES. LOKONSW IS SET IF LO
 0338  9CKON IS DESIRED. BIT14 OF RADMODES IS
R0339   SET IF A REMODE IS REQUIRED. AT THIS TIME, THE ANTENNA MAY BE IN A MONIT
 0340  9OR REPOSITION OPERATION. IN THIS
R0341   CASE, IF A REMODE IS REQUIRED IT MAY HAVE ALREADY BEGUN BUT IT ANY CASE
 0342  9THE REPOSITION WILL BE INTERRUPTED.
R0343  2OTHERWISE, THE REPOSITION WILL BE COMPLETED BEFORE 2-AXIS DESIGNATION BE
 0344  9GINS.
 0345   STARTDES CAF    MAXTRIES        ALLOW 30 SECS.
 0346  2         TS     DESCOUNT
 0347            CAF    BIT10           SHOW DESIGNATE REQUIRED.
 0348            ADS    RADMODES
 0349            MASK   BIT11           SEE IF REPOSITION IN PROGRESS.
 0350            CCS    A
 0351  2         TCF    DESRETRN        ECTR ALREADY SET UP.
 0352  2         TC     SETRRECR        SET UP ERROR COUNTERS.
 0353            CAF    TWO
 0354            TC     WAITLIST
 0355            2CADR  BEGDES
 0356   DESRETRN RELINT                 RETURN VIA DESRET
 0357    +1      CA     DESRET
 0358  2         TCF    BANKJUMP
 0359   MAXTRIES DEC    60
P0360  2         SEE IF RRDESSM CAN BE ACCOMPLISHED AFTER A REMODE.
 0361   TRYSWS   TC     RMODINV         (NOTE RUPT INHIBIT)
 0362            TC     RRLIMCHK        TRY DIFFERENT MODE.
 0363            ADRES  MODEB
 0364  2         TCF    NODESSM         VEHICLE MANEUVER REQUIRED.
 0365            TC     RMODINV         RESET BIT12
 0366            CAF    BIT14           SET FLAG FOR REMODE.
 0367  2         ADS    RADMODES
 0368  2         TCF    OKDESSM
 0369   NODESSM  TC     RMODINV         RE-INVERT MODE AND RETURN WITHOUT IN-
 0370            TCF    DESRETRN        CREMENTING DESRET
P0371            DESIGNATE TO SPECIFIC RR GIMBAL ANGLES (INDEPENDENT OF VEHICLE
 0372  9MOTION). ENTER WITH DESIRED ANGLES IN
R0373  2TANG AND TANG +1.
 0374   RRDESNB  STQ    EXIT            ENTER IN INTERP. - EXIT IN BASIC.
 0375  2                DESRET
 0376            INHINT                 SEE IF CURRENT MODE OK.
 0377            TC     RRLIMCHK
 0378            ADRES  TANG
 0379  2         TCF    TRYSWN          SEE IF IN OTHER MODE.
 0380   OKDESNB  RELINT
 0381  2         TC     INTPRET
 0382            CALL                   GET LOS IN NB COORDS.
 0383                   RRNB
 0384  2         STORE  RRTARGET
 0385            SET    EXIT
 0386  2                RRNBSW
 0387            INHINT
 0388  2         TCF    STARTDES
 0389   TRYSWN   TC     RMODINV         SEE IF OTHER MODE WILL DO.
 0390            TC     RRLIMCHK
 0391            ADRES  TANG
 0392  2         TCF    NODESNB         NOT POSSIBLE.
 0393            TC     RMODINV
 0394            CAF    BIT14           CALL FOR REMODE.
 0395            ADS    RADMODES
 0396  2         TCF    OKDESNB
 0397   NODESNB  CAF    BIT1            CALL FOR ERROR RETURN.
 0398            TC     WAITLIST
 0399            2CADR  RDBADEND
 0400            TC     RMODINV
 0401            TC     ALARM           BAD GIMBAL ANGLE INPUTS.
 0402            OCT    502
 0403            TCF    DESRETRN +1     ALARM DID A RELINT.
P0404  2         WAITLIST TASKS TO RUN RR DESIGNATION.
 0405   BEGDES   CAF    BIT14           ENTER HERE FROM STARTDES OR REPOSRPT.
 0406            MASK   RADMODES        SEE IF REMODE REQUIRED.
 0407            CCS    A
 0408            TCF    REMODE
 0409  2         TCF    STDESIG
 0410   DESLOOP  TC     FIXDELAY        2 SAMPLES PER SECOND.
 0411  2         DEC    50
 0412   STDESIG  CAF    BIT11           ENTRY FROM BEGDES AND REMODE.
 0413            MASK   RADMODES        SEE IF GIMBAL LIMIT MONITOR HAS FOUND US
 0414            CCS    A               OUT OF BOUNDS. IF SO, THIS BIT SHOWS A
 0415  2         TCF    BADDES          REPOSITION TO BE IN PROGRESS.
 0416            CCS    RADMODES        SEE IF CONTINUOUS DESIGNATE WANTED.
 0417            TCF    +3              IF SO, DONT CHECK BIT 10 TO SEE IF IN
 0418            TCF    +2              LIMITS BUT GO RIGHT TO FINDVAC ENTRY.
 0419  2         TCF    MOREDES +1
 0420            CS     RADMODES        IF NON-CONTINUOUS, SEE IF END OF
 0421            MASK   BIT10           PROBLEM (DATA GOOD IF LOCK-ON WANTED OR
 0422            CCS    A               WITHIN LIMITS IF NOT). IF SO, EXIT AFTER
 0423  2         TCF    ENDRADAR        CHECKING RR CDU FAIL.
 0424            CCS    DESCOUNT        SEE IF TIME LIMIT HAS EXPIRED.
 0425  2         TCF    MOREDES
 0426            TC     ALARM           OUT OF TIME.
 0427            OCT    503
 0428            CS     B14+B2          IF OUT OF TIME, REMOVE ECR ENABLE + TRKR
 0429            EXTEND
 0430            WAND   12
 0431   BADDES   CS     BIT10           REMOVE DESIGNATE FLAG.
 0432            MASK   RADMODES
 0433            TS     RADMODES
 0434  2         TCF    RDBADEND
 0435   MOREDES  TS     DESCOUNT
 0436            CAF    PRIO26          UPDATE GYRO TORQUE COMMANDS.
 0437            TC     FINDVAC
 0438            2CADR  DODES
 0439  2         TCF    DESLOOP
 0440   B14+B2   OCT    20002
P0441  2         CALCULATE GYRO TORQUE COMMANDS.
 0442   DODES    EXTEND
 0443            DCA    OPTY
 0444  2         DXCH   TANG
 0445  2         TC     INTPRET
 0446            VLOAD                  MOVE TARGET VECTOR TO 32D.
 0447                   RRTARGET
 0448  2         STORE  32D
 0449            BON    RTB             DO STABLE-MEMBER TO NAVBASE TRANSFORMA-
 0450                   RRNBSW          TION IF TARGET IN SM COORDS. OTHERWISE,
 0451                   DONBRD          IN NB COORDS ALREADY.
 0452  2                READCDUS
 0453            SSP
 0454                   S1
 0455                   20D             LOC OF ICDUS.
 0456            STCALL 20D
 0457  8                SMNB
 0458   DONBRD   SETPD  SLOAD           DO NAVBASE TO RADAR DISH TRANSFORMATION.
 0459                   0
 0460                   TANG +1
 0461            RTB    PUSH            SHAFT COMMAND = V(32D).(COS(S), 0,
 0462                   CDULOGIC             (-SIN(S)).
 0463            SIN    PDDL            SIN(S) TO 0 AND COS(S) TO 2.
 0464            COS    PUSH
 0465            DMP    PDDL
 0466                   32D
 0467                   36D
 0468            DMP    BDSU
 0469                   0
 0470            STADR
 0471  2         STORE  TANG +1         SHAFT COMMAND
 0472            SLOAD  RTB
 0473                   TANG
 0474                   CDULOGIC
 0475            PUSH   COS             COS(T) TO 4.
 0476            PDDL   SIN
 0477            PUSH   DMP             SIN(T) TO 6.
 0478                   2
 0479            SL1    PDDL            DEFINE VECTOR U = (SIN(T)SIN(S))
 0480                   4                                 (COS(T)      )
 0481            PDDL   DMP                               (SIN(T)COS(S))
 0482                   6
 0483                   0
 0484            SL1    VDEF
 0485            DOT    EXIT            DOT U WITH LOS TO GET TRUNNION COMMAND.
 0486                   32D
P0487            AT THIS POINT WE HAVE A ROTATION VECTOR IN DISH AXES LYING IN T
 0488  9HE TS PLANE. CONVERT THIS TO A
R0489  2COMMANDED RATE AND ENABLE THE TRACKER IF WE ARE WITHIN 1 DEGREE OF THE T
 0490  9ARGET.
 0491            CS     MPAC            DOT WAS NEGATIVE OF DESIRED ANGLE.
 0492  2         TS     TANG
 0493            CS     RADMODES        A RELAY IN THE RR REVERSES POLARITY OF
 0494            MASK   BIT12           THE SHAFT COMMANDS IN MODE 2 SO THAT A
 0495            CCS    A               POSITIVE TORQUE APPLIED TO THE SHAFT
 0496  2         TCF    +3              GYRO CAUSES A POSITIVE CHANGE IN THE
 0497            CS     TANG +1         SHAFT ANGLE. COMPENSATE FOR THIS SWITCH
 0498  2         TS     TANG +1         BY CHANGING THE POLARITY OF OUR COMMAND.
 0499            CAF    ZERO
 0500            TS     MPAC +1
 0501  2         CAF    ONE
 0502   RRSCALUP TS     MPAC
 0503            INDEX  A
 0504            CA     TANG            TRUNNION COMPONENT OF ROTATION.
 0505            EXTEND
 0506            MP     RDESGAIN        SCALING ON INPUT ANGLE WAS 4 RADIANS.
 0507            INDEX  MPAC
 0508            XCH    TANG            MAKE EACH COMPONENT LESS THAN .7 DEGREES
 0509            TC     MAGSUB          BEFORE SENDING TRACK ENABLE.
 0510            DEC    -.00305
 0511  2         INCR   MPAC +1         IF OUT OF BOUNDS.
 0512            CCS    MPAC
 0513            TCF    RRSCALUP
P0514  2         SEE IF TRACKER SHOULD BE ENABLED OR DISABLED.
 0515  2         INHINT
 0516            CCS    RADMODES        IF CONTINUOUS DESIGNATE WANTED, PUT OUT
 0517            TCF    +3              COMMANDS WITHOUT CHECKING MAGNITUDE OF
 0518            TCF    +2              ERROR SIGNALS.
 0519  2         TCF    TRKOFF
 0520            CCS    MPAC +1         SEE IF BOTH AXES WERE WITHIN .7 DEGS.
 0521  2         TCF    TRKOFF
 0522            CS     STATE           IF WITHIN LIMITS AND NO LOCK-ON WANTED,
 0523            MASK   LOKONFLG        PROBLEM IS FINISHED.
 0524            CCS    A
 0525  2         TCF    RRDESDUN
 0526            CAF    BIT14           ENABLE THE TRACKER.
 0527            EXTEND
 0528  2         WOR    12
 0529            CAF    BIT4            SEE IF DATA GOOD RECEIVED YET.
 0530            EXTEND
 0531            RAND   33
 0532            CCS    A
 0533  2         TCF    DORROUT
 0534   RRDESDUN CS     BIT10           WHEN PROBLEM DONE, REMOVE BIT 10 SO NEXT
 0535            MASK   RADMODES        WAITLIST TASK WE WILL GO TO RGOODEND.
 0536  2         TS     RADMODES
 0537            CS     BIT2
 0538            EXTEND
 0539            WAND   12
 0540  2         TCF    ENDOFJOB        WITH ECTR DISABLED.
 0541   TRKOFF   CS     BIT14
 0542            EXTEND
 0543  2         WAND   12
 0544   DORROUT  CS     RADMODES        PUT OUT COMMAND UNLESS MONITOR
 0545            MASK   BIT11           REPOSITION HAS TAKEN OVER.
 0546            CCS    A
 0547  2         TC     RROUT
 0548  2         TCF    ENDOFJOB
 0549   RDESGAIN DEC    .53624          TRIES TO NULL .5 ERROR IN .5 SEC.
P0550  2RADAR READ INITIALIZATION
R0551  4RADAR DATA ARE READ BY A BANKCALL FOR THE APPROPRIATE LEAD-IN BELOW.
 0552   LRALT    TC     INITREAD -1     ONE SAMPLE PER READING.
 0553  2ALLREAD  OCT    17
 0554   LRVELZ   TC     INITREAD
 0555  2         OCT    16
 0556   LRVELY   TC     INITREAD
 0557            OCT    15
 0558   LRVELX   TC     INITREAD
 0559  2         OCT    14
 0560   RRRDOT   TC     INITREAD -1
 0561  2         OCT    12
 0562   RRRANGE  TC     INITREAD -1
 0563  8         OCT    11
 0564    -1      CAF    ONE             ENTRY TO TAKE ONLY 1 SAMPLE.
 0565  2INITREAD INHINT
 0566            TS     TIMEHOLD        GET DT OF MIDPOINT OF NOMINAL SAMPLING
 0567            EXTEND                 INTERVAL (ASSUMES NO BAD SAMPLES WILL BE
 0568            MP     BIT3            ENCOUNTERED).
 0569  2         DXCH   TIMEHOLD
 0570            CCS    A
 0571            TS     NSAMP
 0572            AD     ONE
R0573            INSERT FOLLOWING INSTRUCTION TO GET 2N TRIES FOR N SAMPLES.
A0574            DOUBLE
 0575  2         TS     SAMPLIM
 0576            CAF    DGBITS          READ CURRENT VALUE OF DATA GOOD BITS.
 0577            EXTEND
 0578            RAND   33
 0579  2         TS     OLDATAGD
 0580            CS     ALLREAD
 0581            EXTEND
 0582  2         WAND   13              REMOVE ALL RADAR BITS
 0583            INDEX  Q
 0584            CAF    0
 0585            EXTEND
 0586  2         WOR    13              SET NEW RADAR BITS
 0587            EXTEND
 0588            DCA    TIME2
 0589  2         DAS    TIMEHOLD        TIME OF NOMINAL MIDPOINT.
 0590            CAF    ZERO
 0591            TS     L
 0592            DXCH   SAMPLSUM
 0593  2         TCF    ROADBACK
 0594   DGBITS   OCT    230
P0595  2RADAR RUPT READER
R0596  2THIS ROUTINE STARTS FROM A RADARUPT. IT READS THE DATA $ LOTS MORE.
 0597   RADAREAD TS     BANKRUPT
 0598            EXTEND
 0599  2         QXCH   QRUPT
 0600   ANGLREAD EXTEND
 0601            DCA    OPTY
 0602  2         DXCH   OPTYHOLD        SAVE RAW CDU ANGLES
 0603   TRYCOUNT CCS    SAMPLIM
 0604            TCF    PLENTY
 0605            TCF    NOMORE
 0606            TC     ALARM
 0607            OCT    520
 0608  2         TC     RESUME
 0609   NOMORE   TC     ALARM
 0610            OCT    521
 0611   BADRAD   CS     ONE
 0612            TS     SAMPLIM
 0613  2         TC     RDBADEND -2
 0614   PLENTY   TS     SAMPLIM
 0615            CAF    BIT3
 0616            EXTEND
 0617            RAND   13              TO FIND OUT WHICH RADAR
 0618            EXTEND
 0619  2         BZF    RENDRAD
 0620   LRPOSCHK CA     RADMODES        SEE IF LR IN DESIRED POSITION.
 0621            EXTEND
 0622            RXOR   33
 0623            MASK   BIT6
 0624            EXTEND
 0625  2         BZF    VELCHK
 0626            TC     ALARM
 0627            OCT    522
 0628  2         TC     BADRAD
 0629   VELCHK   CAF    BIN3            = 00003 OCT
 0630            EXTEND
 0631            RXOR   13
 0632            MASK   BIN3
 0633            EXTEND
 0634  2         BZF    LRHEIGHT        TAKE A LR RANGE READING
 0635            CAF    POSMAX
 0636            MASK   RNRAD
 0637            AD     LVELBIAS
 0638            TS     L
 0639            CAE    RNRAD
 0640            DOUBLE
 0641            MASK   BIT1
 0642  2         DXCH   ITEMP3
 0643            CAF    BIT8            DATA GOOD ISNT CHECKED UNTIL AFTER READ-
 0644            TC     DGCHECK         ING DATA SO SOME RADAR TESTS WILL WORK
A0645  2                                INDEPENDENT OF DATA GOOD.
 0646            CCS    NSAMP
 0647            TC     NOEND
 0648   GOODRAD  CS     ONE
 0649            TS     SAMPLIM
 0650            CS     ITEMP1          WHEN ENOUGH GOOD DATA HAS BEEN GATHERED,
 0651            MASK   RADMODES        RESET DATA FAIL FLAGS FOR SETTRKF.
 0652            TS     RADMODES
 0653            TC     SETTRKF         LAMP MIGHT GO OFF IF DATA JUST GOOD.
 0654  2         TC     RGOODEND -2
 0655   NOEND    TS     NSAMP
 0656   RESAMPLE CCS    SAMPLIM         SEE IF ANY MORE TRIES SHOULD BE MADE.
 0657            TCF    +2
 0658            TCF    DATAFAIL        N SAMPLES NOT AVAILABLE.
 0659            CAF    BIT4            RESET ACTIVITY BIT.
 0660            EXTEND
 0661            WOR    13              RESET ACTIVITY BIT
 0662  4         TC     RESUME
 0663   LRHEIGHT CAF    BIT5
 0664  2         TS     ITEMP1          (POSITION OF DATA GOOD BIT IN CHAN 33)
 0665            CAF    BIT9
 0666  2         TC     SCALECHK -1
 0667   RENDRAD  CAF    BIT11           MAKE SURE ANTENNA HAS NOT GONE OUT OF
 0668            MASK   RADMODES        LIMITS.
 0669            CCS    A
 0670  2         TCF    BADRAD
 0671            CS     RADMODES        BE SURE RR CDU HASNT FAILED.
 0672            MASK   BIT7
 0673            CCS    A
 0674  2         TCF    BADRAD
 0675            CAF    BIT12           DONT ACCEPT RR DATA IF TRUNNION MORE
 0676            MASK   RADMODES        THAN 55 DEGREES FROM NOMINAL POSITION.
 0677            CCS    A
 0678            CAF    BIT15           180 FOR MODE 2 - 0 FOR MODE 1.
 0679            EXTEND
 0680            MSU    OPTY
 0681            TC     MAGSUB
 0682            DEC    -.30555         55 DEGS AT HALF-REVS.
 0683  2         TCF    BADRAD
 0684            CAF    BIT4            SEE IF DATA HAS BEEN GOOD.
 0685  2         TS     ITEMP1          (POSITION OF DATA GOOD BIT IN CHAN 33)
 0686            CAF    BIT1            SEE IF RR RDOT.
 0687            EXTEND
 0688            RAND   13
 0689            TS     Q               FOR LATER TESTING.
 0690            CCS    A
 0691            TCF    +2
 0692            TCF    RADIN           NO SCALE CHECK FOR RR RDOT.
 0693            CAF    BIT3
 0694  2         TS     L
 0695   SCALECHK EXTEND
 0696            RAND   33              SCALE STATUS NOW
 0697            XCH    L
 0698            MASK   RADMODES        SCALE STATUS BEFORE
 0699            EXTEND
 0700            RXOR   01              SEE IF THEY DIFFER
 0701            CCS    A
 0702  2         TC     SCALCHNG        THEY DIFFER
 0703   RADIN    CAF    POSMAX
 0704            MASK   RNRAD
 0705  2         TS     ITEMP4
 0706            CAE    RNRAD
 0707            DOUBLE
 0708            MASK   BIT1
 0709  2         TS     ITEMP3
 0710            CCS    Q               SEE IF RR RDOT.
 0711  2         TCF    SCALADJ         NO, BUT SCALE CHANGING MAY BE NEEDED.
 0712            EXTEND                 IF RR RANGE RATE, THROW OUT BIAS.
 0713            DCS    RDOTBIAS
 0714   DASAMPL  DAS    ITEMP3
 0715   DGCHECK2 CA     ITEMP1          SEE THAT DATA HAS BEEN GOOD BEFORE AND
 0716            TC     DGCHECK +1      AFTER TAKING SAMPLE.
 0717  2         TC     GOODRAD
 0718   SCALCHNG LXCH   RADMODES
 0719            AD     BIT1
 0720            EXTEND
 0721            RXOR   01
 0722            TS     RADMODES
 0723            CAF    DGBITS          UPDATE LAST VALUE OF DATA GOOD BITS.
 0724            EXTEND
 0725            RAND   33
 0726            TS     OLDATAGD
 0727            TCF    BADRAD
P0728  2         THE FOLLOWING ROUTINE INCORPORATES RR RANGE AND LR ALT SCALE IN
 0729  9FORMATION AND LEAVES DATA AT LO SCALE.
 0730   SCALADJ  CCS    L               L HAS SCALE INBIT FOR THIS RADAR.
 0731            TCF    +2              ON HIGH SCALE.
 0732  2         TCF    DGCHECK2
 0733            DXCH   ITEMP3
 0734            DDOUBL
 0735            DDOUBL
 0736            DDOUBL
 0737  2         DXCH   ITEMP3
 0738            CAF    BIT3            SEE IF LR OR RR.
 0739            EXTEND
 0740            RAND   13
 0741            EXTEND                 IF RR, NO MORE ACTION REQUIRED.
 0742  2         BZF    DGCHECK2
 0743            CAF    LRRATIO         IF LR, CONVERT TO LO SCALING.
 0744            EXTEND
 0745            MP     ITEMP4
 0746            TS     ITEMP4
 0747            CAF    ZERO            (SO SUBSEQUENT DAS WILL BE OK)
 0748            XCH    ITEMP3
 0749            EXTEND
 0750            MP     LRRATIO
 0751  8         TCF    DASAMPL
 0752   DGCHECK  TS     ITEMP1          UPDATE DATA GOOD BIT IN OLDATAGD AND
 0753            EXTEND                 MAKE SURE IT WAS ON BEFORE AND AFTER THE
 0754            RAND   33              SAMPLE WAS TAKEN BEFORE RETURNING. IF
 0755            TS     L               NOT, GOES TO RESAMPLE TO TRY AGAIN. IF
 0756            CS     ITEMP1          MAX NUMBER OF TRIES HAS BEEN REACHED,
 0757            MASK   OLDATAGD        THE BIT CORRESPONDING TO THE DATA GOOD
 0758            AD     L               WHICH FAILED TO APPEAR IS IN ITEMP1 AND
 0759            XCH    OLDATAGD        CAN BE USED TO SET RADMODES WHICH VIA
 0760            MASK   ITEMP1          SETTRKF SETS THE TRACKER FAIL LAMP.
 0761            AD     L
 0762            CCS    A               SHOULD BOTH BE ZERO.
 0763            TC     RESAMPLE
 0764            DXCH   ITEMP3          IF DATA GOOD BEFORE AND AFTER, ADD TO
 0765            DAS    SAMPLSUM        ACCUMULATION.
 0766  2         TC     Q
 0767   DATAFAIL CS     ITEMP1          IN THE ABOVE CASE, SET RADMODES BIT
 0768            MASK   RADMODES        SHOWING SOME RADAR DATA FAILED.
 0769            AD     ITEMP1
 0770  2         TS     RADMODES
 0771            DXCH   ITEMP3          IF WE HAVE BEEN UNABLE TO GATHER N
 0772  2         DXCH   SAMPLSUM        SAMPLES, USE LAST ONE ONLY.
 0773  2         TC     SETTRKF
 0774  2         TCF    NOMORE
 0775   LRRATIO  DEC    4.9977 B -3
 0776   LVELBIAS DEC    -12000          LANDING RADAR VELOCITY BIAS.
 0777   RDOTBIAS 2DEC   17000           BIAS COUNT FOR RR RANGE RATE
P0778  2THIS ROUTINE CHANGES THE LR POSITION, AND CHECKS THAT IT GOT THERE.
 0779  2LRPOS2   INHINT
 0780            CS     BIT6            DESIRED LR POSITION IS NOW 2.
 0781            MASK   RADMODES
 0782            AD     BIT6
 0783  2         TS     RADMODES
 0784            CAF    BIT7
 0785            EXTEND
 0786            RAND   33              SEE IF ALREADY THERE.
 0787            EXTEND
 0788  2         BZF    RADNOOP
 0789            CAF    BIT13
 0790            EXTEND
 0791  2         WOR    12              COMMAND TO POSITION 2
 0792            CAF    5SECS
 0793            TC     WAITLIST
 0794            2CADR  MAKESURE
 0795  2         TC     ROADBACK
 0796   MAKESURE CS     BIT13           REMOVE LR POSITION COMMAND OUTBIT.
 0797            EXTEND
 0798  2         WAND   12
 0799            CAF    BIT7
 0800            EXTEND
 0801            RAND   33
 0802            EXTEND
 0803  2         BZF    RGOODEND
 0804            TC     ALARM           LR ANTENNA DIDNT MAKE IT.
 0805            OCT    523
 0806  2         TCF    RDBADEND
 0807   RADNOOP  CAF    ONE             NO FURTHER ACTION REQUESTED.
 0808            TC     WAITLIST
 0809            2CADR  RGOODEND
 0810  2         TC     ROADBACK
 0811   5SECS    DEC    5 E2
P0812  2         SEQUENCES TO TERMINATE RR OPERATIONS.
 0813   ENDRADAR CAF    BIT7            PROLOG TO CHECK RR CDU FAIL BEFORE END.
 0814            MASK   RADMODES
 0815            CCS    A
 0816            TCF    RGOODEND
 0817            TCF    RDBADEND
 0818    -2      CS     ZERO            RGOODEND WHEN NOT UNDER WAITLIST CONTROL
 0819  2         TS     RUPTAGN
 0820   RGOODEND CAF    TWO
 0821            TC     POSTJUMP
 0822  2         CADR   GOODEND
 0823    -2      CS     ZERO            RDBADEND WHEN NOT UNDER WAITLIST.
 0824            TS     RUPTAGN
 0825   RDBADEND CAF    TWO
 0826            TC     POSTJUMP
 0827  2         CADR   BADEND
 0828   BIN3     EQUALS THREE
 0829   ENDRMODS EQUALS
L      2RADAR TEST PROGRAMS
 0001            SETLOC ENDRMODS
 0002  2         EBANK= RSTKLOC
R0003  2         RADAR SAMPLING LOOP.
 0004   RADSAMP  CCS    RSAMPDT         TIMES NORMAL ONCE-PER-SECOND SAMPLING.
 0005  2         TCF    +2
 0006  2         TCF    TASKOVER        +0 INSERTED MANUALLY TERMINATES TEST.
 0007            TC     WAITLIST
 0008            2CADR  RADSAMP
 0009            CAF    PRIO25
 0010            TC     NOVAC
 0011            2CADR  DORSAMP
 0012            CAF    1/6             FOR CYCLIC SAMPLING, RTSTDEX =
 0013            EXTEND                 RTSTLOC/6 + RTSTBASE.
 0014            MP     RTSTLOC
 0015            AD     RTSTBASE        0 FOR RR, 2 FOR LR.
 0016  2         TS     RTSTDEX
 0017  2         TCF    TASKOVER
R0018  2         DO THE ACTUAL RADAR SAMPLE.
 0019   DORSAMP  TC     VARADAR         SELECTS VARIABLE RADAR CHANNEL.
 0020            TC     BANKCALL
 0021            CADR   RADSTALL
 0022  2         INCR   RFAILCNT        ADVANCE FAIL COUNTER BUT ACCEPT BAD DATA
 0023   DORSAMP2 INHINT                 YES - UPDATE TM BUFFER.
 0024            DXCH   SAMPLSUM
 0025            INDEX  RSTKLOC
 0026  2         DXCH   RSTACK
 0027            DXCH   OPTYHOLD
 0028            INDEX  RSTKLOC
 0029  2         DXCH   RSTACK +2
 0030            DXCH   TIMEHOLD
 0031            INDEX  RSTKLOC
 0032  2         DXCH   RSTACK +4
 0033            CS     RTSTLOC         CYCLE RTSTLOC.
 0034            AD     RTSTMAX
 0035            EXTEND
 0036            BZF    +3
 0037            CA     RSTKLOC
 0038            AD     SIX
 0039  2         TS     RSTKLOC
 0040            CCS    RSAMPDT         SEE IF TIME TO RE-SAMPLE.
 0041  2         TCF    ENDOFJOB        NO - WAIT FOR T3 (REGULAR SAMPLING).
 0042            TCF    ENDOFJOB        TEST TERMINATED.
 0043  2         TCF    DORSAMP         JUMP RIGHT BACK AND GET ANOTHER SAMPLE.
 0044  21/6      DEC    .17
R0045  2         VARIABLE RADAR DATA CALLER FOR ONE MEASUREMENT ONLY.
 0046   VARADAR  CAF    ONE             WILL BE SENT TO RADAR ROUTINE IN A BY
 0047            TS     BUF2            SWCALL.
 0048            INDEX  RTSTDEX
 0049            CAF    RDRLOCS
 0050  2         TCF    SWCALL          NOT TOUCHING Q.
 0051   RDRLOCS  CADR   RRRANGE         =0
 0052            CADR   RRRDOT          =1
 0053            CADR   LRVELX          =2
 0054            CADR   LRVELY          =3
 0055            CADR   LRVELZ          =4
 0056  2         CADR   LRALT           =5
 0057   ENDRTSTS EQUALS
L      2EXTENDED VERBS
 0001            BANK   11
 0002  2         EBANK= OGC
R0003  2FAN-OUT
 0004   LST2FAN  TC     VBZERO          VB40 ZERO (USED WITH NOUN 20 OR 40 ONLY)
 0005            TC     VBCOARK         VB41 COARSE ALIGN (USED WITH NOUN 20 OR
A0006                                                                   40 ONLY)
 0007            TC     IMUFINEK        VB42 FINE ALIGN IMU
 0008            TC     IMUATTCK        VB43  LOAD IMU ATTITUDE ERROR METERS.
 0009            TC     ALM/END         ILLEGAL VERB.
 0010            TCF    LRPOS2K         VB45 COMMAND LR TO POSITION 2.
 0011            TC     REGRSAMP        VB46 SAMPLE RADAR ONCE PER SECOND
 0012            TC     DOFCSTST        VB47 PERFORM LEM FCS TEST
 0013            TC     GOLOADLV        VB50 PLEASE PERFORM
 0014            TC     GOLOADLV        VB51 PLEASE MARK
 0015            TC     GOLOADLV        VB52 PLEASE MARK Y
 0016            TC     GOLOADLV        VB53 PLEASE MARK X OR Y.
 0017            TC     TORQGYRS        VB54 PULSE TORQUE GYROS
 0018            TC     ALINTIME        VB55 ALIGN TIME
 0019            TC     GOSHOSUM        VB56 PERFORM BANKSUM
 0020            TC     SYSTEST         VB57 PERFORM SYSTEM TEST
 0021            TC     PRESTAND        VB60 PREPARE FOR STANDBY
 0022            TC     POSTAND         VB61 RECOVER FROM STANDBY
 0023            TC     SETUPMSG        VB62 SCAM LEM INBITS
 0024            TCF    AGSINIT         VB63 INITIALIZE AGS
 0025            TCF    ALM/END
 0026            TCF    ALM/END
 0027            TCF    ALM/END
 0028            TCF    ALM/END
 0029            TCF    ALM/END
 0030            TCF    ALM/END
 0031            TCF    ALM/END
 0032            TCF    MINIMP          VERB 73 - RHC USED FOR MINIMUM IMPULSE.
 0033  2         TCF    NOMINIMP        VERB 74 - RHC NOT USED FOR MIN IMPULSE.
 0034            TCF    ALM/END
 0035            TCF    ALM/END
 0036  2         TC     ALM/END
 0037   TESTXACT CAF    BIT3
 0038            MASK   EXTVBACT
 0039            CCS    A
 0040  2         TC     XACTALM
 0041   XACT1    CS     BIT3
 0042            INHINT
 0043            MASK   EXTVBACT
 0044            AD     BIT3
 0045            TS     EXTVBACT
 0046            RELINT
 0047  2         TC     Q
 0048   XACTALM  TC     FALTON
 0049  2         TC     ENDOFJOB
 0050  2TERMEXTV TC     FREEDSP         IF WE GET A TERMINATE INSTEAD OF A LOAD.
 0051   ENDEXTVB TC     XACT0
 0052  2         TC     ENDOFJOB
 0053   XACT0    CS     BIT3
 0054            INHINT
 0055            MASK   EXTVBACT
 0056            TS     EXTVBACT
 0057            RELINT
 0058  4XACT0Q   TC     Q
 0059   ALM/END  TC     FALTON
 0060  4         TC     ENDEXTVB
 0061   VBZERO   TC     OP/INERT
 0062            TC     IMUZEROK        RETURN HERE IF NOUN = ICDU(20)
 0063  2         TC     RRZEROK         RETURN HERE IF NOUN = RCDU(40)
 0065   VBCOARK  TC     OP/INERT
 0066            TC     IMUCOARK        RETURN HERE IF NOUN = ICDU(20)
 0067  2         TC     RRDESNBK        RETURN HERE IF NOUN = RCDU(40)
R0069  2         RETURNS TO L+1 IF IMU, L+2 IF RR, AND L+3 IF OT.
 0070   OP/INERT CS     BIT5            OCT20
 0071            AD     NOUNREG
 0072            EXTEND
 0073  2         BZF    XACT0Q          IF = 20.
 0074            INCR   Q
 0075            AD     RRIMUDIF        = -20 OCT.
 0076            EXTEND
 0077  2         BZF    XACT0Q
 0082  2         TC     ALM/END         ILLEGAL.
 0083   RRIMUDIF OCT    -20
P0085  2KEYBOARD REQUEST TO ZERO IMU ENCODERS
 0086   IMUZEROK TC     TESTXACT        ZERO ENCODERS.
 0087            TC     BANKCALL
 0088  2         CADR   IMUZERO
 0089            TC     BANKCALL        STALL
 0090            CADR   IMUSTALL
 0091  2         TC     +1
 0092            TC     ENDEXTVB
 0093   RRZEROK  TC     TESTXACT
 0094            TC     BANKCALL        ZERO RR CDUS.
 0095  2         CADR   RRZERO
 0096   RWAITK   TC     BANKCALL
 0097            CADR   RADSTALL
 0098            TCF    +1
 0099  2         TCF    ENDEXTVB
 0100   LRPOS2K  TC     TESTXACT        COMMAND LR TO POSITION 2.
 0101            TC     BANKCALL
 0102            CADR   LRPOS2
 0103            TCF    RWAITK
P0104  2KEYBOARD REQUEST TO COARSE ALIGN THE IMU
 0105   IMUCOARK TC     TESTXACT        COARSE ALIGN FROM KEYBOARD.
 0106            TC     GRABWAIT
 0107            CAF    VNLODCDU        CALL FOR THETAD LOAD
 0108            TC     NVSBWAIT
 0109            TC     ENDIDLE         STALL WAITING FOR THE LOAD
 0110            TC     TERMEXTV
 0111  2         TC     ICSDEL          PROCEED - ASK FOR INCREMENTAL LOAD.
 0112   ICORK2   CAF    IMUCOARV        RE-DISPLAY COARSE ALIGN VERB.
 0113            TC     NVSBWAIT
 0114  2         TC     FREEDSP         RELEASE THE DISPLAYS
 0115            TC     BANKCALL        CALL MODE SWITCHING PROG
 0116  2         CADR   IMUCOARS
 0117            TC     BANKCALL        STALL
 0118            CADR   IMUSTALL
 0119            TC     ENDEXTVB
 0120  2         TC     ENDEXTVB
 0121   VNLODCDU OCT    02522
 0122   IMUCOARV OCT    04100
P0123  2         PROVISION FOR COARSE ALIGN TO INCREMENTAL ANGLES.
 0124   ICSDEL   CAF    DELLOAD
 0125            TC     NVSBWAIT        REQUEST LOAD OF DELTA ICDU ANGLES.
 0126            TC     ENDIDLE
 0127            TC     TERMEXTV
 0128            TC     ICORK2          PROCEED WITHOUT DATA HERE TOO.
 0129            TC     INCLOOP         LOOP TO INCREMENT THETAD FROM DSPTEM2.
 0130  2         TC     ICORK2          RE-DISPLAY COARSE ALIGN VERB.
 0131   INCLOOP  XCH    Q               INCREMENTS THETADS IN 2S COMPLEMENT FROM
 0132            TS     MPAC             THREE ANGLE INCREMENTS IN DSPTEM2S.
 0133            CAF    LTHD+2
 0134            TS     BUF             SET UP FOR CDUINC.
 0135  2         CAF    TWO             THREE TIMES THROUGH.
 0136   INCLOOP2 TS     MPAC +1
 0137            INDEX  A
 0138            XCH    DSPTEM2         INCREMENT TO TEM2 FOR CDUINC.
 0139            TC     BANKCALL
 0140            CADR   CDUINC
 0141            CCS    BUF
 0142            TS     BUF
 0143            CCS    MPAC +1
 0144  2         TC     INCLOOP2
 0145  2         TC     MPAC            RETURN WHEN FINISHED.
 0146   DELLOAD  OCT    02523
 0147   LTHD+2   ADRES  THETAD +2
P0148  2KEYBOARD REQUEST TO FINE ALIGN AND GYRO TORQUE IMU
 0149   IMUFINEK TC     TESTXACT        FINE ALIGN WITH GYRO TORQUING.
 0150            TC     GRABWAIT
 0151            CAF    VNLODGYR        CALL FOR LOAD OF GYRO COMMANDS
 0152            TC     NVSBWAIT
 0153            TC     ENDIDLE         HOLD UP FOR THE DATA LOAD
 0154            TC     TERMEXTV
 0155  2         TC     +1              PROCEED WITHOUT A LOAD
 0156            CAF    IMUFINEV        RE-DISPLAY OUR OWN VERB
 0157            TC     NVSBWAIT
 0158  2         TC     FREEDSP         RELEASE DISPLAYS
 0159            TC     BANKCALL        CALL MODE SWITCH PROG
 0160  2         CADR   IMUFINE
 0161            TC     BANKCALL        HIBERNATION
 0162            CADR   IMUSTALL
 0163  2         TC     ENDEXTVB
 0164   FINEK2   CAF    LGYROBIN        PINBALL LEFT COMMANDS IN OGC REGIST5RS
 0165            TC     BANKCALL
 0166  2         CADR   IMUPULSE
 0167            TC     BANKCALL        WAIT FOR PULSES TO GET OUT.
 0168            CADR   IMUSTALL
 0169            TC     ENDEXTVB
 0170  2         TC     ENDEXTVB
 0171   VNLODGYR OCT    02567
 0172   IMUFINEV OCT    04200           FINE ALIGN VERB
P0173  2         DESIGNATE TO DESIRED GIMBAL ANGLES.
 0174   RRDESNBK TC     TESTXACT
 0175            TC     GRABWAIT
 0176            CAF    VNLDRCDU        ASK FOR GIMBAL ANGLES.
 0177            TC     NVSBWAIT
 0178            TC     ENDIDLE         WAIT FOR THE LOAD
 0179            TC     TERMEXTV
 0180  2         TC     +1              PROCEED
 0181            TC     BANKCALL        ASK OP FOR LOCK ON REQUIREMENTS.
 0182  2         CADR   AURLOKON
 0183            CAF    OPTCOARV        RE-DISPLAY OUR OWN VERB
 0184            TC     NVSBWAIT
 0185            INHINT                 FIRE UP JOB TO DO DESIGNATE.
 0186            CAF    PRIO20
 0187            TC     FINDVAC
 0188            2CADR  RRDESK2
 0189  2         TCF    TERMEXTV        FREES DISPLAY.
 0190   VNLDRCDU OCT    2441
 0191  2OPTCOARV EQUALS IMUCOARV        DIFFERENT NOUNS.
 0192  2RRDESK2  TC     INTPRET
 0193            CALL
 0194  2                RRDESNB         RETURNS IN BASIC.
 0195  2         TC     RWAITK
R0196   PLEASE PERFORM VERB AND PLEASE MARK VERB ----- PRESSING ENTER INDICATES
R0197   ACTION REQUESTED HAS BEEN PERFORMED, AND DOES SAME RECALL AS A COMPLETED
R0198   LOAD.  OPERATOR SHOULD DO VB PROCEED WITHOUT DATA IF HE WISHES NOT TO
R0199  2PERFORM THE REQUESTED ACTION.
 0200   GOLOADLV TC     FLASHOFF
 0201            TC     XACT0
 0202            TC     POSTJUMP
 0203            CADR   LOADLV1
P0204  4KEYBOARD REQUEST TO PULSE TORQUE IRIGA
 0205   TORQGYRS TC     TESTXACT        GYRO TORQUING WITH NO MODE-SWITCH.
 0206            TC     GRABWAIT
 0207            CAF    VNLODGYR
 0208            TC     NVSBWAIT
 0209            TC     ENDIDLE
 0210            TC     TERMEXTV
 0211            TC     +1
 0212            CAF    TORQGYRV        RE-DISPLAY OUR OWN VERB
 0213            TC     NVSBWAIT
 0214            TC     FREEDSP
 0215  2         TCF    FINEK2
 0216   LGYROBIN ECADR  DELVX
 0217   TORQGYRV OCT    05400
P0218   ALIGN TIME
 0219   ALINTIME CAF    VNLODDT         USES NVSUBMON. DOES NOT TEST DSPLOCK.
 0220            TS     NVTEMP          DOES NOT KILL MONITOR.
 0221            TC     NVSUBMON
 0222            TC     ENDOFJOB        IN CASE OF ALARM IN LOAD REQUEST SET UP.
 0223            TC     ENDIDLE
 0224            TC     ENDOFJOB        TERMINATE
 0225            TC     ENDOFJOB        PROCEED WITHOUT DATA
 0226   UPDATIME INHINT                 DELTA TIME IS IN DSPTEM1, +1.
 0227            CAF    ZERO
 0228            TS     MPAC    +2      NEEDED FOR TP AGREE
 0229            TS     L               ZERO T1 & 2 WHILE ALIGNING.
 0230            DXCH   TIME2
 0231            DXCH   MPAC
 0232            DXCH   DSPTEM1         INCREMENT.
 0233  2         DAS    MPAC
 0234            TC     TPAGREE         FORCE SIGN AGREEMENT.
 0235            DXCH   MPAC            NEW CLOCK.
 0236            DAS    TIME2
 0237  2         TC     ENDOFJOB
 0238   VNLODDT  OCT    02124           V/N FOR LOAD DELTA TIME
P0243  2         SELECT AND INITIATE DESIRED SYSTEM TEST PROGRAM.
 0244  2         EBANK= QPLACE
 0245   SYSTEST  CCS    MODREG          DEMAND MODE 00.
 0246  2         TCF    XACTALM
 0247            TC     GRABWAIT
 0248   REDO     CAF    LQPL            ASK FOR TEST OPTION (1 - 7).
 0249            TS     MPAC +2
 0250            CAF    TESTNV
 0251            TC     NVSBWAIT
 0252            TC     ENDIDLE
 0253            TC     EJFREE
 0254  2         TC     REDO
 0255            TC     NEWMODEX
 0256  2         OCT    07
 0257            INHINT
 0258            CAF    PRIO20
 0259            TC     FINDVAC
 0260            2CADR  TSELECT
 0261  2         TC     ENDOFJOB        LEAVING DISPLAY GRABBED FOR SYSTEM TEST.
 0262   TSELECT  CAF    LOW5
 0263            MASK   QPLACE          SAFETY PLAY.
 0264            INDEX  A
 0265            CAF    TESTCADR
 0266  2         TC     BANKJUMP
 0267   TESTCADR CADR   ALM/END         0  ILLEGAL
 0268            CADR   IMUTEST         1  GYRO DRIFT TEST
 0269            CADR   IMUBACK         2 REPEAT OF IMUTEST
 0270            CADR   AOTNBIMU        3  IMU ALIGNMENT TEST
 0271            CADR   OPCHK           4  IMU CHECK
 0272            CADR   GYRSFTST        5  GYRO TORQUING TEST
 0273            CADR                    AVAILABLE
 0274            CADR   GTSCPSS         7. OPTIMUM COMPASS
 0275            CADR   SAMODCHK        10 SEMI-AUTOMATIC MODING CHECK
 0276            CADR   SAUTOIFS        11 SEMI-AUTOMATIC INTERFACE TEST
 0277            CADR   AOTANGCK        12 AOT ANGLE CHECK
 0278            CADR   RDRINIT         13 RENDEZVOUS RADAR / ANTENNAE TRACKING
 0279  2         CADR   FSTRSAMP        14 HIGH SPEED RADAR SAMPLING.
 0280            CADR   ZEROERAS
 0281            CADR   DISINDT         DISPLAY INERTIAL DATA TEST.
 0282   TESTNV   OCT    2101
 0283   LQPL     ECADR  QPLACE
 0284   GOSHOSUM TC     POSTJUMP        START ROUTINE TO DISPLAY SUM OF EACH
 0285  2         CADR   SHOWSUM         BANK ON DSKY
 0286   DOFCSTST TC     POSTJUMP
 0287            CADR   FCSSTART
P0288  2         SET UP FOR RADAR SAMPLING.
 0289  2         EBANK= RSTKLOC
 0290   FSTRSAMP CAF    RSTKLIST        HIGH SPEED SAMPLING. SWITCH TO SPECIAL
 0291            TS     DNLSTADR        DOWNLIST.
 0292            CS     ONE             WANTS TM BUFFERING.
 0293  2         TCF    RSAMPTST
 0294   REGRSAMP TC     GRABWAIT
 0295  2         CAF    1SEC+1          SHOWS NO TM BUFFERING.
 0296   RSAMPTST TS     MPAC +2
 0297            INHINT
 0298            CS     LRPOSCAL        INITIALIZE SCALE AND LR POSITION BITS.
 0299            MASK   RADMODES
 0300  2         TS     RADMODES
 0301            CAF    LRPOSCAL
 0302            EXTEND
 0303            RAND   33
 0304  2         ADS    RADMODES
 0305            RELINT
 0306            CAF    LRTSTDEX
 0307            TS     EBANK
 0308            XCH    MPAC +2
 0309            TS     RSAMPDT         HI SPEED NNZ - LO SPEED PNZ.
 0310            CAF    ZERO
 0311            TS     RTSTLOC
 0312            TS     RFAILCNT        ZERO BAD SAMPLE COUNTER.
 0313            CAF    HISPMAX
 0314  2         TS     RTSTMAX
 0315            CAF    RTSTNV
 0316            TC     NVSBWAIT
 0317            TC     ENDIDLE
 0318            TC     EJFREE          ON TERMINATE.
 0319            TCF    RSEMIAUT        PROCEED MEANS SEMI-AUTO SEQUENCING.
 0320   RDRDFREE TC     FREEDSP
 0321            CCS    RSAMPDT         SEE IF HI OR LO SPEED SAMPLING.
 0322  2         TCF    +4
 0323  2LRTSTDEX ECADR  RTSTDEX
 0324            TC     POSTJUMP        EXEC. OTHERWISE, SET UP WAITLIST TIMING.
 0325  2         CADR   DORSAMP
 0326            CAF    SIX             FIND OUT WHICH RADAR WANTED.
 0327            MASK   RTSTDEX
 0328            CCS    A
 0329  2         TCF    LRCYCLE         LANDING RADAR ARE SERIALS 2 - 5.
 0330            TS     RTSTBASE        FOR RR BASE = 0, MAX = 1.
 0331            CAF    SIX
 0332  2         TCF    +4
 0333   LRCYCLE  CAF    TWO             FOR LR BASE = 2, MAX = 3.
 0334            TS     RTSTBASE
 0335  2         CAF    18R
 0336    +4      TS     RTSTMAX
 0337            INHINT
 0338            TC     WAITLIST
 0339            2CADR  RADSAMP
 0340  2         TC     ENDOFJOB
 0341   18R      DEC    18
 0342   HISPMAX  DEC    66
 0343   RTSTNV   OCT    2101
 0344   RSTKLIST GENADR FSTRADTM
 0345   1SEC+1   DEC    101
 0346   LRPOSCAL OCT    444
P0347  2         SEMI-AUTO RADAR TESTING.
 0348   RSEMIAUT INHINT
 0349            CAF    PRIO25          START HI SPEED SAMPLING.
 0350            TC     NOVAC
 0351            2CADR  DORSAMP
 0352            RELINT
 0353            CAF    FIVE            SEQUENCE THROUGH ALL SIX CHANNELS.
 0354  2 -1      TS     RTSTDEX
 0355   33PASTE  CAF    RV33            ON ENTER, SWITCH TO NEXT CHANNEL.
 0356            TC     NVSBWAIT
 0357            TC     FLASHON
 0358            TC     ENDIDLE
 0359            TC     ENDRTST         ON TERMINATE.
 0360            TCF    +2
 0361  2         TCF    33PASTE         DONT ACCEPT DATA.
 0362            CCS    RTSTDEX
 0363  2         TCF    33PASTE -1
 0364   ENDRTST  CAF    ZERO            ENDTEST.
 0365            TS     RSAMPDT
 0366            TC     NEWMODEX
 0367            OCT    0
 0368  2         TC     EJFREE
 0369   RV33     OCT    3300
P0370  2         AGS INITIALIZATION PROGRAM.
 0371   AGSINIT  CCS    AGSWORD         ZERO IF AGS NOT NOW BEING INITIALIZED.
 0372  2         TC     ALM/END         DO IT LATER.
 0373            CA     TIME1
 0374            AD     12SECS
 0375            TS     L
 0376  2         TC     SENDIT
 0377            INHINT                 T1 WILL OVERFLOW, DELAY FOR 12 SECS
 0378            CA     12SECS
 0379            TS     AGSWORD
 0380            TC     WAITLIST
 0381            2CADR  AGSJOB
 0382  2         TC     ENDOFJOB
 0383   AGSJOB   CAF    PRIO30          ENTER AGSINIT JOB VIA EXEC
 0384            TC     NOVAC
 0385            2CADR  SENDIT
 0386  2         TC     TASKOVER
 0387   SENDIT   INHINT
 0388            CAF    LAGSLIST        SWITCH TO SPECIAL DOWNLIST FOR 10 SECS.
 0389            XCH    DNLSTADR
 0390  2         TS     AGSWORD         TO SHOW INITIALIZATION IN PROGRESS.
 0391            CAF    10SECS
 0392            TC     WAITLIST
 0393            2CADR  AGSINIT2
 0394  2         TCF    ENDOFJOB
 0395   AGSINIT2 CAF    ZERO            END OF INITIALIZATION.
 0396            XCH    AGSWORD
 0397            TS     DNLSTADR        REVERT TO ORIGINAL DOWNLIST.
 0398  2         TCF    TASKOVER
 0399   10SECS   DEC    1000
 0400   12SECS   DEC    1200
 0401   LAGSLIST GENADR AGSLIST
P0402  2         VB 43  IMU ATTITUDE ERROR METER LOADER.
 0403   IMUATTCK TC     TESTXACT
 0404            CS     OCT50K          REMOVE COARSE AND ECTR ENABLE.
 0405            EXTEND
 0406  2         WAND   12
 0407            TC     GRABWAIT
 0408            CAF    VNLODCDU
 0409            TC     NVSBWAIT
 0410            TC     ENDIDLE
 0411            TC     TERMEXTV
 0412            TC     +1
 0413            CAF    V43K            REDISPLAY OUR VERB.
 0414            TC     NVSBWAIT
 0415            CAF    BIT6            ENABLE ERROR COUNTER.
 0416            EXTEND
 0417            WOR    12
 0418            CAF    TWO
 0419            INHINT
 0420            TC     WAITLIST        PUT OUT COMMAND IN .32 SECS.
 0421            2CADR  ATTCK2
 0422  2         TCF    TERMEXTV        FREES DISPLAY.
 0423   ATTCK2   CAF    TWO             PUT OUT ALL COMMANDS - CDU WILL DO LIMIT
 0424            TS     Q               INCASE OF EXCESS DATA.
 0425            INDEX  A
 0426            CA     THETAD
 0427            EXTEND
 0428            MP     BIT13           SHIFT RIGHT 2.
 0429            INDEX  Q
 0430            TS     CDUXCMD
 0431            CCS    Q
 0432  2         TCF    ATTCK2 +1
 0433            CAF    OCT70K
 0434            EXTEND
 0435            WOR    14
 0436  2         TCF    TASKOVER
 0437   OCT50K   OCT    50
 0438   V43K     OCT    4300
 0439   OCT70K   OCT    70000
P0449  2         PROGRAM TO SCAN CHANNELS 30 - 32 FOR CHANGES IN SELECTED INBITS
 0450  9. CALLED BY SPECIAL VERB.
 0451  2         EBANK= MSGCNT
 0452   SETUPMSG CAF    BIT1            BEGIN SCAN.
 0453            INHINT
 0454            TC     WAITLIST
 0455            2CADR  MSGSCAN +2
 0456  2         TC     ENDOFJOB
 0457   MSGSCAN  TC     FIXDELAY
 0458  2         DEC    50
 0459            CAF    TWO             SCAN ALL 3 CHANNELS FOR CHANGES.
 0460            TS     MSGCNT
 0461            INDEX  A
 0462            CA     LAST30          OLD VALUE OF INBITS.
 0463            EXTEND
 0464            INDEX  MSGCNT
 0465            RXOR   30
 0466            INDEX  MSGCNT
 0467            MASK   30MSGMSK
 0468            EXTEND
 0469  2         BZF    NOMSG
 0470            TS     Q               SAVE DIFFERENCE.
 0471            INDEX  MSGCNT
 0472            LXCH   LAST30          UPDATE OLD VALUE.
 0473            EXTEND
 0474            RXOR   L
 0475            INDEX  MSGCNT
 0476  2         TS     LAST30
 0477            COM
 0478            XCH    Q
 0479            MASK   Q               SEE IF ANY OF CHANGED BITS JUST ON.
 0480            EXTEND
 0481  2         BZF    NOMSG           NO MESSAGE IF SO.
 0482            TS     L
 0483            CA     MSGCNT
 0484            DOUBLE
 0485            DOUBLE
 0486            MASK   BIT3
 0487            MASK   L
 0488            EXTEND
 0489  2         BZF    NOTRHC
 0490            CAF    SIX
 0491            TC     WAITLIST
 0492            EBANK= PCOM
 0493            2CADR  RHCNTRL
 0494            CAF    PRIO20          INITIATE MONITOR.
 0495            TC     NOVAC
 0496            2CADR  RHCMON
 0497  2         TCF    NOMSG
 0498   NOTRHC   CAF    OKT30
 0499            AD     MSGCNT
 0500  2         TS     RUPTREG2
 0501            CS     Q
 0502  2         TC     VMESSAGE
 0503   NOMSG    CCS    MSGCNT
 0504            TCF    MSGSCAN +3
 0505  2         TCF    MSGSCAN
 0506   30MSGMSK OCT    17
 0507            OCT    77777
 0508  2         OCT    3777
 0509   OKT30    OCT    30
 0510   DESCBITS TC     MESSAGE         DESCENT BITS COME HERE IN A.
 0511            OCT    16
 0512  2         TC     RESUME
 0513   RHCMON   TC     GRABWAIT        FIRE UP DSKY MONITOR.
 0514            CAF    RHCMONVN
 0515            TC     NVSBWAIT
 0516  2         TC     EJFREE
 0517   RHCMONVN OCT    1645
P0518  2         MESSAGE DISPLAY - 3 COMPONENT OCTAL.
 0519   MESSAGE  TS     RUPTREG2        NEW CHANNEL CONTENTS ARRIVE IN A.
 0520            INDEX  Q               CHANNEL NUMBER IN OCTAL AT CALLER +1.
 0521            CAF    0
 0522            INCR   Q
 0523  2         XCH    RUPTREG2
 0524   VMESSAGE TS     RUPTREG1        FOR VARIABLE CHANNEL.
 0525            EXTEND
 0526            QXCH   RUPTREG3
 0527            CAF    PRIO27          FIRE UP SPECIAL JOB.
 0528            TC     NOVAC
 0529            2CADR  DOMSG
 0530            DXCH   RUPTREG1        NEW CONTENTS TO MPAC - CHANNEL NUMBER TO
 0531            INDEX  LOCCTR          MPAC +1.
 0532            DXCH   MPAC
 0533            CA     TIME1
 0534            INDEX  LOCCTR
 0535            TS     MPAC +2
 0536  2         TC     RUPTREG3
 0537   DOMSG    TC     GRABWAIT
 0538            EXTEND
 0539            DCA    MPAC
 0540            DXCH   DSPTEM1
 0541            CA     MPAC +2
 0542            TS     DSPTEM1 +2
 0543            CAF    MSGVN
 0544            TC     NVSUB
 0545            TCF    MSGBUSY
 0546  2         TC     EJFREE
 0547   MSGBUSY  CAF    +2
 0548            TC     NVSUBUSY
 0549  2         CADR   DOMSG +1
 0550   MSGVN    OCT    0535
P0551  2         ROUTINE FOR AURORA ONLY TO ASK OPERATOR IF RR LOCK ON REQUESTED
 0552  9.
 0553   AURLOKON TC     MAKECADR
 0554            TS     DESRET
 0555            CAF    RV33            ASSUMES DSKY GRABBED.
 0556            TC     NVSBWAIT
 0557            TC     FLASHON
 0558            TC     ENDIDLE
 0559            TCF    +3              ON TERM.
 0560            CAF    LOKONFLG
 0561            TCF    +2
 0562            CAF    ZERO
 0563            INHINT
 0564            XCH    STATE
 0565            MASK   -LOKONFG
 0566  2         ADS    STATE
 0567            MASK   LOKONFLG        IF NO LOCK-ON CALLED FOR, SET BIT15 OF
 0568            CCS    A               RADMODES TO INDICATE THAT ARBITRARILY-
 0569  2         TCF    +3              LONG DESIGNATION IS WANTED (TO BE
 0570            CAF    BIT15           TERMINATED BY FRESH START).
 0571  2         ADS    RADMODES
 0572            RELINT
 0573            CA     DESRET
 0574  2         TCF    BANKJUMP
 0575   -LOKONFG OCT    -20
P0576  2         PROGRAM TO RUN DISPLAY INERTIAL DATA TEST.
 0577   DISINDT  CAF    FLVELVN         ASK FOR FORWARD, LATERAL VELOCITY.
 0578            TC     NVSBWAIT
 0579            TC     ENDIDLE
 0580            TCF    ENDDISIN
 0581            TCF    +1
 0582            CAF    ALT,R,VN        ASK FOR INITIAL AND FINIAL ALTITUDES AND
 0583            TC     NVSBWAIT        ALTITUDE RATE.
 0584            TC     ENDIDLE
 0585            TCF    ENDDISIN
 0586  2         TCF    +1
 0587            INHINT
 0588            CS     ONE
 0589  2         TS     DIDFLG
 0590            EXTEND
 0591            DCA    ALT             SO FOLLOWING MONITOR WORKS.
 0592  2         DXCH   ALTSAVE
 0593            CAF    ONE
 0594            TC     WAITLIST
 0595            2CADR  DISINLUP +2
 0596  2         TCF    EJFREE
 0597   ENDDISIN TC     FREEDSP
 0598    +1      TC     NEWMODEX
 0599  2         OCT    0
 0600            TC     ENDOFJOB
P0601  2         WATCH ALTSAVE FOR END OF PROBLEM.
 0602   DISINLUP TC     FIXDELAY
 0603  2         DEC    50
 0604    +2      EXTEND
 0605            DCA    FINALT
 0606            DXCH   ITEMP1
 0607            EXTEND
 0608            DCS    ALTSAVE         LATEST ALTITUDE.
 0609  2         DAS    ITEMP1
 0610            CCS    ITEMP1
 0611            TCF    +DIF
 0612            TCF    +2
 0613  2         TCF    -DIF
 0614            CCS    ITEMP2
 0615            TCF    +DIF
 0616            TCF    +2
 0617  2         TCF    -DIF
 0618   DISINDUN CAF    ZERO
 0619            TS     ALTRATE
 0620            DXCH   FINALT
 0621            DXCH   ALT
 0622            CAF    PRIO20
 0623            TC     NOVAC
 0624            2CADR  ENDDISIN +1
 0625  2         TCF    TASKOVER
 0626   +DIF     CA     ALTRATE
 0627            EXTEND
 0628            BZMF   DISINDUN
 0629  2         TCF    DISINLUP
 0630   -DIF     CS     ALTRATE
 0631  2         TCF    +DIF +1
 0632   FLVELVN  OCT    2444
 0633  2ALT,R,VN OCT    2564
 0638   MINIMP   INHINT
 0639            CS     BIT10           BIT 10 OF DAPBOOLS INDICATES MINIMP MODE
 0640            MASK   DAPBOOLS
 0641            AD     BIT10
 0642            TS     DAPBOOLS        BIT 10 OF DAPBOOLS NOW PRESENT.
 0643  2         TCF    ENDOFJOB
 0644   NOMINIMP INHINT
 0645            CS     BIT10
 0646            MASK   DAPBOOLS
 0647  2         TS     DAPBOOLS        A ZERO IN POSITION 10 OF DAPBOOLS NOW.
 0648            EXTEND
 0649            DCA    CDUX
 0650            DXCH   CDUXD
 0651            CA     CDUZ
 0652            TS     CDUZD
 0653            TCF    ENDOFJOB
P0654  2VB 60 PREPARE FOR STANDBY OPERATION
R0655   ROUTINE WRITTEN FOR TEST ROPES ONLY*** MUST BE UPDATED TO INCLUDE
R0656  2                                FLIGHT REQUIREMENTS FOR FLIGHT OPERATION
 0657  2         EBANK= LST1
 0658   PRESTAND CAF    EBANK3          COMES HERE FROM LST2FAN
 0659            XCH    EBANK           SET UP EBANK FOR BANK 3
 0660            INHINT
 0661            CA     TIME1
 0662            TS     TIMESAV         THIS ROUTINE WILL LOOK AT TIME1 UNTIL
 0663            CAF    OKT30            TIME1 IS INCREMENTED, THEN IT WILL
 0664   LONGER   TS     TIMAR           SNATCH THE MISSION TIME REGS AND STORE
 0665            CS     TIMESAV         THEN IN TIMESAV FOR LATER ISE IN ARITH.
 0666            AD     TIME1           OPERATIONS WHICH SHOULD FIND THE
 0667            EXTEND                 STANDING DIFFERENCE BETWEEN THE SCALAR
 0668  2         BZF    CHKTIME         AND THE TIME1-TIME2S REGS.
 0669            EXTEND
 0670            DCA    TIME2           READ AND STORE THE DP TIME AND GO
 0671            DXCH   TIMESAV         READ THE SCALAR USING THE EXISTING PROG
 0672  2         TCF    CATCHFIN        FINETIME.
 0673   CHKTIME  CCS    TIMAR           MUST WATCH THE TIME SPENT IN INHINT OR
 0674            TC     LONGER          THE COPS MIGHT CATCH US.
 0675            RELINT
 0676            CCS    NEWJOB
 0677            TC     CHANG1
 0678  2         TC     LONGER -1       GO BACK AND LOOK AGAIN
 0679   CATCHFIN TC     FINETIME        WILL READ CHANNELS 3 AND 4 AND RETURN
 0680            DXCH   SCALSAV         WITH 3 IN A AND 4 IN L..
 0681            RELINT
 0682            CS     BIT4
 0683            MASK   IMODES30        INHIBIT THE IMU FAIL LIGHT.
 0684            AD     BIT4
 0685  2         TS     IMODES30
 0686            CAF    BIT4            SET ALL CHAN 12 BITS EXCEPT C/A TO ZERO.
 0687            EXTEND                 THIS IS NECESSARY SO THAT THE GIMBALS DO
 0688  2         WAND   12              NOT DRIFT INTO GIMBALLOCK IF THE SYSTEM
 0689            CAF    BIT4            SHOULD BE IN OPERATE AT THE TIME STBY
 0690            EXTEND                 WAS STARTED.  THIS SECTION WILL MAKE
 0691  2         WOR    12              SURE THE IMU IS IN C/A.....
 0692            CAF    BIT11           WHEN BIT 11 IS PRESENT IN CHANNEL 13 THE
 0693            EXTEND                 DSKY PB. CAN THEN ENERGIZE THE STANDBY
 0694            WOR    13              RELAY IN THE CGC PWR SUPPLIES....
 0695            TC     ENDOFJOB        GO TO DUMMY JOB UNTIL YOU DIE...
P0696  2 VB 61 RECOVER FROM STANDBY OPERATION
R0697   ROUTINE WRITTEN FOR TEST ROPES ONLY**** MUST BE UPDATED TO INCLUDE
R0698  2                FLIGHT REQUIREMENTS FOR FLIGHT OPERATIONS SEQUENCES....
 0699   POSTAND  CAF    EBANK3          COMES HERE FROM LST2FAN
 0700            XCH    EBANK           SET UP EBANK FOR BANK 3
 0701            TC     FINETIME
 0702            DXCH   TIMAR           READ THE SCALAR AND SEE IF IT OVERFLOW-
 0703            RELINT                 ED WHILE THE CGC WAS IN STBY, IF SO
 0704            CAE    TIMAR           THE OVERFLOW MUST BE ADDED OR IT WILL
 0705            EXTEND                 SEEM THAT THE REALATIVITY THEORY WORKS
 0706            SU     SCALSAV         BETTER THAN IT SHOULD...
 0707            EXTEND
 0708  2         BZMF   ADDTIME         IF ITS NEG. IT MUST HAVE OV:FLWD..
 0709            TC     INTPRET
 0710            DLOAD  DSU             IF IT DID NOT OV-FLW. FIND OUT HOW LONG
 0711                   TIMAR           THE CGC WAS IN STBY BY SUBTRACTING THE
 0712                   SCALSAV         SCALAR AT THE START OF STBY FROM THE
 0713            SRR    RTB             SCALAR AT THE END OF STBY AND THEN ADD
 0714                   5               THE DIFFERENCE TO THE TIME EXISTING
 0715                   SGNAGREE        WHEN THE SCALAR WAS READ AT STBY ENTRY**
 0716            DAD
 0717                   TIMESAV
 0718            STORE  TIMAR
 0719  2         EXIT
 0720   CORCTTIM EXTEND
 0721            DCA    TIMAR           THIS IS THE CORRECTED TIME TO BE READ
 0722  2         DXCH   TIME2           INTO TIME1 AND TIME2 REGS. ADDR 24-25
 0723            CS     BIT11
 0724            EXTEND                 DISABLE THE DSKY STBY PUSHBUTTON.
 0725            WAND   13
 0726  2         TC     ENDOFJOB
 0727   ADDTIME  EXTEND
 0728            DCA    DPOSMAX         IF THE SCALAR OVERFLOWED, FIND OUT HOW
 0729            DXCH   TIMEDIFF        MUCH TIME REMAINED WHEN READ THE FIRST
 0730            TC     INTPRET         TIME AND THEN ADD THE PRESENT READING-
 0731            DLOAD  DSU             WHICH WILL BE THE TOTAL TIME SPENT IN
 0732                   TIMEDIFF        STANDBY, TO WHICH THE TIME AT STBY
 0733                   SCALSAV         MAY BE ADDED TO FIND THE PRESENT TIME
 0734            DAD    SRR             CORRECT TO 10 MSEC..
 0735                   TIMAR           **** THE TIME IN STANDBY MODE MUST NOT
 0736                   5               EXCEED 23 HOURS IF TIME IS TO BE
 0737            DAD                    CORRECTLY COMPUTED BY THIS ROUTINE.*****
 0738                   TIMESAV
 0739            STORE  TIMAR
 0740            EXIT
 0741  2         TC     CORCTTIM
 0742  2EBANK3   OCT    01400           CONST USED TO SET EBANK REG FOR BANK 3
 0743   ENDEXTVS EQUALS
L      2KEYRUPT, UPRRUPT
 0001  2         BANK   7
 0002   KEYRUPT1 TS     BANKRUPT
 0003            XCH    Q
 0004            TS     QRUPT
 0005            TC     LODSAMPT        TIME IS SNATCHED IN RUPT FOR NOUN 65.
 0006            CAF    LOW5
 0007            EXTEND
 0008            RAND   MNKEYIN
 0009   KEYCOM   TS     RUPTREG4
 0010            CAF    CHRPRIO
 0011            TC     NOVAC
 0012            EBANK= DSPCOUNT
 0013            2CADR  CHARIN
 0014            CA     RUPTREG4
 0015            INDEX  LOCCTR
 0016            TS     MPAC            LEAVE 5 BIT KEY CDE IN MPAC FOR CHARIN
 0017            TC     RESUME
P0018  2UPRUPT PROGRAM
 0019   UPRUPT   TS     BANKRUPT
 0020            XCH    Q
 0021            TS     QRUPT
 0022            TC     LODSAMPT        TIME IS SNATCHED IN RUPT FOR NOUN 65.
 0023            CAF    ZERO
 0024            XCH    INLINK
 0025            TS     KEYTEMP1
 0026            CAF    BIT3            TURN ON UPACT LIGHT
 0027            EXTEND                 (BIT 3 OF CHANNEL 11)
 0028            WOR    DSALMOUT
 0029   UPRPT1   CAF    LOW5            TEST FOR TRIPLE CHAR REDUNDANCY
 0030            MASK   KEYTEMP1        LOW5 OF WORD
 0031            XCH    KEYTEMP1        LOW5 INTO KEYTEMP1
 0032            XCH    SR              WHOLE WORD INTO SR
 0033            TS     KEYTEMP2        ORIGINAL SR INTO KEYTEMP2
 0034            TC     SRGHT5
 0035            MASK   LOW5            MID 5
 0036            AD     HI10
 0037            TC     UPTEST
 0038            TC     SRGHT5
 0039            MASK   LOW5            HIGH 5
 0040            COM
 0041            TC     UPTEST
 0042   UPOK     TC     RESTORSR        CODE IS GOOD
 0043            CS     ELRCODE         IF CODE = ERROR LIGHT RESET, PUT +0
 0044            AD     KEYTEMP1        INTO BIT1 OF UPLOCK.
 0045            CCS    A               IF CODE NOT= ELR, PASS CODE ONLY IF
 0046            TC     TSTUPLOK        BIT1 OF UPLOCK = 0.
 0047   ELRCODE  OCT    22
 0048            TC     TSTUPLOK
 0049            CS     BIT1            PUT 0 INTO BIT1 OF UPLOCK
 0050            MASK   UPLOCK
 0051            TS     UPLOCK
 0052            TC     ACCEPTUP
 0053   TSTUPLOK CAF    BIT1
 0054            MASK   UPLOCK
 0055            CCS    A
 0056            TC     RESUME          BIT1 OF UPLOCK = 1.
 0057   ACCEPTUP XCH    KEYTEMP1        BIT1 OF UPLOCK = 0.
 0058  2         TC     KEYCOM
 0059   TMFAIL2  TC     RESTORSR        CODE IS BAD
 0060            CS     BIT1            LOCK OUT FURTHER UPLINK ACTIVITY (BY
 0061            MASK   UPLOCK          PUTTING 1 INTO BIT1 OF UPLOCK) UNTIL ELR
 0062            AD     BIT1            IS SENT UP UPLINK.
 0063            TS     UPLOCK
 0064   TMFAIL1  TC     TMALM
 0065  2         TC     RESUME
 0066   RESTORSR XCH    KEYTEMP2
 0067            DOUBLE
 0068            TS     SR
 0069  2         TC     Q
 0070  2TMALM    =      RESUME          FOR NOW
 0071   SRGHT5   CS     SR
 0072            CS     SR
 0073            CS     SR
 0074            CS     SR
 0075            CS     SR
 0076            CS     A
 0077  2         TC     Q               DELIVERS WORD UNCOMPLEMENTED
 0078   UPTEST   AD     KEYTEMP1
 0079            CCS    A
 0080            TC     TMFAIL2
 0081   HI10     OCT    77740
 0082            TC     TMFAIL2
 0083  2         TC     Q
R0084  8UPACT IS TURNED OFF BY VBRELDSP, ALSO BY ERROR LIGHT RESET.
R0085   THE RECEPTION OF A BAD CODE BY UPLINK LOCKS OUT FURTHER UPLINK ACTIVITY
R0086   BY PLACING A 1 INTO BIT1 OF UPLOCK. BIT9 (ALONG WITH BIT11) OF TMKEYBUF
R0087   IS SET TO 1 TO SEND AN INDICATION OF THIS SITUATION DOWN THE DOWNLINK.
R0088   THE UPLINK INTERLOCK IS ALLOWED WHEN AN ERROR LIGHT RESET CODE IS SENT
R0089  4UP THE UPLINK, OR WHEN A FRESH START IS PERFORMED.
 0090   ENDKRURS EQUALS
L      2PINBALL GAME  BUTTONS AND LIGHTS
R0001  4KEYBOARD AND DISPLAY PROGRAM
R0002  2THE FOLLOWING QUOTATION IS PROVIDED THROUGH THE COUTESY OF THE AUTHORS.
R0003         ::IT WILL BE PROVED TO THY FACE THAT THOU HAST MEN ABOUT THEE THAT
R0004   USUALLY TALK OF A NOUN AND A VERB, AND SUCH ABOMINABLE WORDS AS NO
R0005  2CHRISTIAN EAR CAN ENDURE TO HEAR.::
R0006  4                     HENRY 6, ACT 2, SCENE 4
R0007  4THE FOLLOWING ASSIGNMENTS FOR PINBALL ARE MADE ELSEWHERE
R0008  2RESERVED FOR PINBALL EXECUTIVE ACTION
R0009   DSPCOUNT ERASE                  DISPLAY POSITION INDICATOR
R0010   DECBRNCH ERASE                  +DEC, - DEC, OCT INDICATOR
R0011   VERBREG  ERASE                  VERB CODE
R0012   NOUNREG  ERASE                  NOUN CODE
R0013   XREG     ERASE                  R1 INPUT BUFFER
R0014   YREG     ERASE                  R2 INPUT BUFFER
R0015   ZREG     ERASE                  R3 INPUT BUFFER
R0016   XREGLP   ERASE                  LO PART OF XREG (FOR DEC CONV ONLY)
R0017   YREGLP   ERASE                  LO PART OF YREG (FOR DEC CONV ONLY)
R0018   ZREGLP   ERASE                  LO PART OF ZREG (FOR DEC CONV ONLY)
R0019   MODREG   ERASE                  MODE CODE
R0020   DSPLOCK  ERASE                  KEYBOARD/SUBROUTINE CALL INTERLOCK
R0021   REQRET   ERASE                  RETURN REGISTER FOR LOAD
R0022   LOADSTAT ERASE                  STATUS INDICATOR FOR LOADTST
R0023   CLPASS   ERASE                  PASS INDICATOR CLEAR
R0024   NOUT     ERASE                  ACTIVITY COUNTER FOR DSPTAB
R0025   NOUNCADR ERASE                  MACHINE CADR FOR NOUN
R0026   MONSAVE  ERASE                  N/V CODE FOR MONITOR. (= MONSAVE1-1)
R0027   MONSAVE1 ERASE                  NOUNCADR FOR MONITOR(MATBS) =MONSAVE +1
R0028   DSPTAB   ERASE          +13D    0-10,DISPLAY PANEL BUFFER.11-13,C RELAYS
R0029   CADRSTOR ERASE                  ENDIDLE STORAGE
R0030   GRABLOCK ERASE                  INTERNAL INTERLOCK FOR DISPLAY SYSTEM
R0031   NVQTEM   ERASE                  NVSUB STORAGE FOR CALLING ADDRESS
R0032                                   MUST = NVBNKTEM-1
R0033   NVBNKTEM ERASE                  NVSUB STORAGE FOR CALLING BANK
R0034                                   MUST = NVQTEM+1
R0035   DSPLIST  ERASE          +2      WAITING LIST FOR DSP SYST INTERNAL USE
R0036   EXTVBACT REASE                  EXTENDED VERB ACTIVITY INTERLOCK
R0037   DSPTEM1  ERASE          +2      BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
R0038   DSPTEM2  ERASE          +2      BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
R0039  4END OF ERASABLES RESERVED FOR PINBALL EXECUTIVE ACTION
R0040  2TEMPORARIES FOR PINBALL EXECUTIVE ACTION
R0041   DSEXIT   =      INTB15+         RETURN FOR DSPIN
R0042   EXITEM   =      INTB15+         RETURN FOR SCALE FACTOR ROUTINE SELECT
R0043  2BLANKRET =      INTB15+         RETURN FOR 2BLANK
R0044   WRDRET   =      INTBIT15        RETURN FOR 5BLANK
R0045   WDRET    =      INTBIT15        RETURN FOR DSPWD
R0046   DECRET   =      INTBIT15        RETURN FOR PUTCOM(DEC LOAD)
R0047  221/22REG =      INTBIT15        TEMP FOR CHARIN
R0048   UPDATRET =      POLISH          RETURN FOR UPDATNN, UPDATVB
R0049   CHAR     =      POLISH          TEMP FOR CHARIN
R0050   ERCNT    =      POLISH          COUNTER FOR ERROR LIGHT RESET
R0051  2DECOUNT  =      POLISH          COUNTER FOR SCALING AND DISPLAY (DEC)
R0052   SGNON    =      VBUF            TEMP FOR +,- ON
R0053   NOUNTEM  =      VBUF            COUNTER FOR MIXNOUN FETCH
R0054   DISTEM   =      VBUF            COUNTER FOR OCTAL DISPLAY VERBS
R0055  2DECTEM   =      VBUF            COUNTER FOR FETCH (DEC DISPLAY VERBS)
R0056   SGNOFF   =      VBUF    +1      TEMP FOR +,- ON
R0057   NVTEMP   =      VBUF    +1      TEMP FOR NVSUB
R0058  2SFTEMP1  =      VBUF    +1      STORAGE FOR SF CONST HI PART(=SFTEMP2-1)
R0059   CODE     =      VBUF    +2      FOR DSPIN
R0060  2SFTEMP2  =      VBUF    +2      STORAGE FOR SF CONST LO PART(=SFTEMP1+1)
R0061   MIXTEMP  =      VBUF    +3      FOR MIXNOUN DATA
R0062  2SIGNRET  =      VBUF    +3      RETURN FOR +,- ON
R0063  2ALSO MIXTEMP+1 = VBUF+4, MIXTEMP+2 = VBUF+5.
R0064  2ENTRET   =      DOTINC          EXIT FROM ENTER
R0065   WDCNT    =      DOTRET          CHAR COUNTER FOR DSPWD
R0066  2INREL    =      DOTRET          INPUT BUFFER SELECTOR ( X,Y,Z, REG )
R0067   DSPMMTEM =      MATINC          DSPCOUNT SAVE FOR DSPMM
R0068  2MIXBR    =      MATINC          INDICATOR FOR MIXED OR NORMAL NOUN
R0069   TEM1     ERASE                  EXEC TEMP
R0070  2DSREL    =      TEM1            REL ADDRESS FOR DSPIN
R0071   TEM2     ERASE                  EXEC TEMP
R0072   DSMAG    =      TEM2            MAGNITUDE STORE FOR DSPIN
R0073  2IDADDTEM =      TEM2            MIXNOUN INDIRECT ADDRESS STORAGE
R0074   TEM3     ERASE                  EXEC TEMP
R0075  2COUNT    =      TEM3            FOR DSPIN
R0076   TEM4     ERASE                  EXEC TEMP
R0077   LSTPTR   =      TEM4            LIST POINTER FOR GRABUSY
R0078   RELRET   =      TEM4            RETURN FOR RELDSP
R0079  2FREERET  =      TEM4            RETURN FOR FREEDSP
R0080   TEM5     ERASE                  EXEC TEMP
R0081  2NOUNADD  =      TEM5            TEMP STORAGE FOR NOUN ADDRESS
R0082   NNADTEM  ERASE                  TEMP FOR NOUN ADDRESS TABLE ENTRY
R0083   NNTYPTEM ERASE                  TEMP FOR NOUN TYPE TABLE ENTRY
R0084   IDAD1TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
R0085                                   MUST = IDAD2TEM-1, = IDAD3TEM-2.
R0086   IDAD2TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
R0087                                   MUST = IDAD1TEM+1, = IDAD3TEM-1.
R0088   IDAD3TEM ERASE                  TEMP FOR INDIR ADRESS TABLE ENTRY(MIXNN)
R0089                                   MUST = IDAD1TEM+2, = IDAD2TEM+1.
R0090   RUTMXTEM ERASE                  TEMP FOR SF ROUT TABLE ENTRY(MIXNN ONLY)
R0091  4END OF TEMPORARIES FOR PINBALL EXECUTIVE ACTION
R0092  2RESERVED FOR PINBALL INTERRUPT ACTION
R0093   DSPCNT   ERASE                  COUNTER FOR DSPOUT
R0094   UPLOCK   ERASE                  BIT1 = UPLINK INTERLOCK (ACTIVATED BY
A0095                                   RECEPTION OF A BAD MESSAGE IN UPLINK)
R0096  4END OF ERASABLES RESERVED FOR PINBALL INTERRUPT ACTION
R0097  2TEMPORARIES FOR PINBALL INTERRUPT ACTION
R0098   KEYTEMP1 =      WAITEXIT        TEMP FOR KEYRUPT, UPRUPT
R0099   DSRUPTEM =      WAITEXIT        TEMP FOR DSPOUT
R0100   KEYTEMP2 =      RUPTAGN         TEMP FOR KEYRUPT, UPRUPT
R0101   END OF TEMPORARIES FOR PINBALL INTERRUPT ACTION
P0102   THE INPUT CODES ASSUMED FOR THE KEYBOARD ARE,
R0103   0        10000
R0104   1        00001
R0105   9        01001
R0106   VERB     10001
R0107   ERROR RES10010
R0108   KEY RLSE 11001
R0109   +        11010
R0110   -        11011
R0111   ENTER    11100
R0112   CLEAR    11110
R0113  4NOUN     11111
R0114   OUTPUT FORMAT FOR DISPLAY PANEL. SET OUT0 TO  AAAABCCCCCDDDDD.
R0115   A-S SELECT A RELAYWORD. THIS DETERMINES WHICH PAIR OF CHARACTERS ARE
R0116   ENERGIZED.
R0117   B FOR SPECIAL RELAYS SUCH AS SIGNS ETC.
R0118   C-S  5 BIT RELAY CODE FOR LEFT CHAR OF PAIR SELECTED BY RELAYWORD
R0119  2D-S  5 BIT RELAY CODE FOR RIGHTCHAR OF PAIR SELECTED BY RELAYWORD.
R0120   THE PANEL APPEARS AS FOLLOWS,
R0121   MD1    MD2                         (MAJOR MODE)
R0122   VD1    VD2 (VERB)    ND1    ND2    (NOUN)
R0123   R1D1   R1D2   R1D3   R1D4   R1D5   (R1)
R0124   R2D1   R2D2   R2D3   R2D4   R2D5   (R2)
R0125  2R3D1   R3D2   R3D3   R3D4   R3D5   (R3)
R0126   EACH OF THESE IS GIVEN A DSPCOUNT NUMBER FOR USE WITHIN COMPUTATION ONLY
R0127   MD1   25     R2D1  11         ALL ARE OCTAL
R0128   MD2   24     R2D2  10
R0129   VD1   23     R2D3   7
R0130   VD2   22     R2D4   6
R0131   ND1   21     R2D5   5
R0132   ND2   20     R3D1   4
R0133   R1D1  16     R3D2   3
R0134   R1D2  15     R3D3   2
R0135   R1D3  14     R3D4   1
R0136   R1D4  13     R3D5   0
R0137  4R1D5  12
R0138  2THERE IS AN 11 REGISTER TABLE (DSPTAB) FOR THE DISPLAY PANEL.
R0139   DSPTAB RELAYWD       BIT11     BITS 10-6     BITS 5-1
R0140   RELADD
R0141   10     1011                    MD1  (25)     MD2  (24)
R0142   9      1010                    VD1  (23)     VD2  (22)
R0143   8      1001                    ND1  (21)     ND2  (20)
R0144   7      1000                                  R1D1 (16)
R0145   6      0111          +R1       R1D2 (15)     R1D3 (14)
R0146   5      0110          -R1       R1D4 (13)     R1D5 (12)
R0147   4      0101          +R2       R2D1 (11)     R2D2 (10)
R0148   3      0100          -R2       R2D3 (7)      R2D4 (6)
R0149   2      0011                    R2D5 (5)      R3D1 (4)
R0150   1      0010          +R3       R3D2 (3)      R3D3 (2)
R0151   0      0001          -R3       R3D4 (1)      R3D5 (0)
R0152  4       0000   NO RELAYWORD
R0153   THE 5 BIT RELAY CODES ARE,
R0154   BLANK      00000
R0155   0          10101
R0156   1          00011
R0157   2          11001
R0158   3          11011
R0159   4          01111
R0160   5          11110
R0161   6          11100
R0162   7          10011
R0163   8          11101
R0164   9          11111
P0165  4START OF EXECUTIVE SECTION OF PINBALL
 0166  2         SETLOC 20000
 0167   GRABUSYB TC     GRABUSY1        STANDARD LEAD INS. DONT MOVE.
 0168  2NVSUBSYB TC     NVSUBSY1
 0169   CHARIN   CAF    ONE             BLOCK DISPLAY SYST
 0170            XCH    DSPLOCK         MAKE DSP SYST BUSY, BUT SAVE OLD
 0171            TS     21/22REG        C(DSPLOCK) FOR ERROR LIGHT RESET.
 0172            XCH    MPAC
 0173            TS     CHAR
 0174            INDEX  A
 0175            TC     +1              INPUT CODE     FUNCTION
 0176            TC     CHARALRM        0
 0177            TC     NUM             1
 0178            TC     NUM             2
 0179            TC     NUM             3
 0180            TC     NUM             4
 0181            TC     NUM             5
 0182            TC     NUM             6
 0183            TC     NUM             7
 0184            TC     89TEST          10                 8
 0185            TC     89TEST          11                 9
 0186            TC     CHARALRM        12
 0187            TC     CHARALRM        13
 0188            TC     CHARALRM        14
 0189            TC     CHARALRM        15
 0190            TC     CHARALRM        16
 0191            TC     CHARALRM        17
 0192            TC     NUM     -2      20                 0
 0193            TC     VERB            21                 VERB
 0194            TC     ERROR           22                 ERROR LIGHT RESET
 0195            TC     CHARALRM        23
 0196            TC     CHARALRM        24
 0197            TC     CHARALRM        25
 0198            TC     CHARALRM        26
 0199            TC     CHARALRM        27
 0200            TC     CHARALRM        30
 0201            TC     VBRELDSP        31                 KEY RELEASE
 0202            TC     POSGN           32                 +
 0203            TC     NEGSGN          33                 -
 0204            TC     ENTERJMP        34                 ENTER
 0205            TC     CHARALRM        35
 0206            TC     CLEAR           36                 CLEAR
 0207  4         TC     NOUN            37                 NOUN
 0208   ENTERJMP TC     POSTJUMP
 0209  2         CADR   ENTER
 0210   89TEST   CAF    THREE
 0211            MASK   DECBRNCH
 0212            CCS    A
 0213            TC     NUM             IF DECBRNCH IS +, 8 OR 9 OK
 0214  4         TC     CHARALRM        IF DECBRNCH IS +0, REJECT 8 OR 9
R0215   NUM ASSEMBLES OCTAL 3 BITS AT A TIME. FOR DECIMAL IT CONVERTS INCOMING
R0216   WORD AS A FRACTION, KEEPING RESULTS TO DP.
R0217   OCTAL RESULTS ARE LEFT IN XREG, YREG, OR ZREG. HI PART OF DEC IN XREG,
R0218   YREG, ZREG. THE LOW PARTS IN XREGLP, YREGLP, OR ZREGLP)
R0219   DECBRNCH IS LEFT AT +0 FOR OCT, +1 FOR + DEC, +2 FOR - DEC.
R0220  2IF DSPCOUNT WAS LEFT -, NO MORE DATA IS ACCEPTED.
 0221            CAF    ZERO
 0222            TS     CHAR
 0223   NUM      CCS    DSPCOUNT
 0224            TC     +4              +
 0225            TC     +3              +0
 0226            TC     +1              -BLOCK DATA IN IF DSPCOUNT IS -
 0227            TC     ENDOFJOB        -0
 0228            TC     GETINREL
 0229            CCS    CLPASS          IF CLPASS IS + OR +0, MAKE IT +0.
 0230            CAF    ZERO
 0231            TS     CLPASS
 0232            TC     +1
 0233            INDEX  CHAR
 0234            CAF    RELTAB
 0235            MASK   LOW5
 0236            TS     CODE
 0237            CA     DSPCOUNT
 0238            TS     COUNT
 0239            TC     DSPIN
 0240            CAF    THREE
 0241            MASK   DECBRNCH
 0242            CCS    A               +0, OCTAL.  +1, + DEC.  +2, - DEC.
 0243            TC     DECTOBIN        +
 0244            INDEX  INREL           +0 OCTAL
 0245            XCH    VERBREG
 0246            TS     CYL
 0247            CS     CYL
 0248            CS     CYL
 0249            XCH    CYL
 0250            AD     CHAR
 0251            TC     ENDNMTST
 0252   DECTOBIN INDEX  INREL
 0253            XCH    VERBREG
 0254            TS     MPAC            SUM X 2EXP-14 IN MPAC
 0255            CAF    ZERO
 0256            TS     MPAC    +1
 0257            CAF    TEN             10 X 2EXP-14
 0258            TC     SHORTMP         10SUM X 2EXP-28 IN MPAC, MPAC+1
 0259            XCH    MPAC    +1
 0260            AD     CHAR
 0261            TS     MPAC    +1
 0262            TC     ENDNMTST        NO OF
 0263            ADS    MPAC            OF MUST BE 5TH CHAR
 0264            TC     DECEND
 0265   ENDNMTST INDEX  INREL
 0266            TS     VERBREG
 0267            CS     DSPCOUNT
 0268            INDEX  INREL
 0269            AD     CRITCON
 0270            EXTEND
 0271            BZF    ENDNUM          -0, DSPCOUNT = CRITCON
 0272            TC     MORNUM          - , DSPCOUNT G/ CRITCON
 0273   ENDNUM   CAF    THREE
 0274            MASK   DECBRNCH
 0275            CCS    A
 0276            TC     DECEND
 0277   ENDALL   CS     DSPCOUNT        BLOCK NUMIN BY PLACING DSPCOUNT
 0278            TC     MORNUM  +1      NEGATIVELY
 0279   DECEND   TC     DMP             MULT SUM X 2EXP-28 IN MPAC, MPAC+1 BY
 0280            ADRES  DECON           2EXP14/10EXP5. GIVES(SUM/10EXP5)X2EXP-14
 0281            CAF    THREE           IN MPAC, +1, +2.
 0282            MASK   DECBRNCH
 0283            INDEX  A
 0284            TC     +0
 0285            TC     +DECSGN
 0286            EXTEND                 - CASE
 0287            DCS    MPAC    +1
 0288            DXCH   MPAC    +1
 0289   +DECSGN  XCH    MPAC    +2
 0290            INDEX  INREL
 0291            TS     XREGLP  -2
 0292            XCH    MPAC    +1
 0293            INDEX  INREL
 0294            TS     VERBREG
 0295            TC     ENDALL
 0296   MORNUM   CCS    DSPCOUNT        DECREMENT DSPCOUNT
 0297            TS     DSPCOUNT
 0298  2         TC     ENDOFJOB
 0299   CRITCON  OCT    22              (DEC 18)
 0300            OCT    20              (DEC 16)
 0301            OCT    12              (DEC 10)
 0302            OCT    5
 0303  2         OCT    0
 0304  4DECON    2DEC   E-5 B14         2EXP14/10EXP5 = .16384 DEC
R0305   GETINREL GETS PROPER DATA REG REL ADDRESS FOR CURRENT C(DSPCOUNT) AND
R0306  2PUTS IN INTO INREL. +0 VERBREG, 1 NOUNREG, 2 XREG, 3 YREG, 4 ZREG.
 0307   GETINREL INDEX  DSPCOUNT
 0308            CAF    INRELTAB
 0309            TS     INREL           (A TEMP, REG)
 0310  2         TC     Q
 0311   INRELTAB OCT    4               R3D5 (DSPCOUNT = 0)
 0312            OCT    4               R3D4           =(1)
 0313            OCT    4               R3D3           =(2)
 0314            OCT    4               R3D2           =(3)
 0315            OCT    4               R3D1           =(4)
 0316            OCT    3               R2D5           =(5)
 0317            OCT    3               R2D4           =(6)
 0318            OCT    3               R2D3           =(7)
 0319            OCT    3               R2D2           =(8D)
 0320            OCT    3               R2D1           =(9D)
 0321            OCT    2               R1D5           =(10D)
 0322            OCT    2               R1D4           =(11D)
 0323            OCT    2               R1D3           =(12D)
 0324            OCT    2               R1D2           =(13D)
 0325            OCT    2               R1D1           =(14D)
 0326            TC     CCSHOLE         NO DSPCOUNT NUMBER = 15D
 0327            OCT    1               ND2            =(16D)
 0328            OCT    1               ND1            =(17D)
 0329            OCT    0               VD2            =(18D)
 0330  4         OCT    0               VD1            =(19D)
 0331   VERB     CAF    ZERO
 0332            TS     VERBREG
 0333            CAF    VD1
 0334   NVCOM    TS     DSPCOUNT
 0335            TC     2BLANK
 0336            CAF    ZERO
 0337            TS     DECBRNCH
 0338            TS     REQRET          SET FOR ENTPAS0
 0339            CAF    ENDINST         IF DSPALARM OCCURS BEFORE FIRST ENTPAS0
 0340            TS     ENTRET          OR NVSUB, ENTRET MUST ALREADY BE SET
A0341                                   TO TC ENDOFJOB
 0342            TC     ENDOFJOB
 0343   NOUN     CAF    ZERO
 0344            TS     NOUNREG
 0345            CAF    ND1             ND1, OCT 21 (DEC 17)
 0346  4         TC     NVCOM
 0347   NEGSGN   TC     SIGNTEST
 0348            TC     -ON
 0349            CAF    TWO
 0350   BOTHSGN  INDEX  INREL           SET DEC COMP BIT TO 1 (IN DECBRNCH)
 0351            AD     BIT7            BIT 5 FOR R1,  BIT 4 FOR R2,
 0352            ADS    DECBRNCH        BIT 3 FOR R3.
 0353   FIXCLPAS CCS    CLPASS          IF CLPASS IS + OR +0, MAKE IT +0.
 0354            CAF    ZERO
 0355            TS     CLPASS
 0356            TC     +1
 0357  2         TC     ENDOFJOB
 0358   POSGN    TC     SIGNTEST
 0359            TC     +ON
 0360            CAF    ONE
 0361  2         TC     BOTHSGN
 0362   +ON      LXCH   Q
 0363            TC     GETINREL
 0364            INDEX  INREL
 0365            CAF    SGNTAB  -2
 0366            TS     SGNOFF
 0367            AD     ONE
 0368            TS     SGNON
 0369   SGNCOM   CAF    ZERO
 0370            TS     CODE
 0371            XCH    SGNOFF
 0372            TC     11DSPIN
 0373            CAF    BIT11
 0374            TS     CODE
 0375            XCH    SGNON
 0376            TC     11DSPIN
 0377            TC     L
 0378   -ON      LXCH   Q
 0379            TC     GETINREL
 0380            INDEX  INREL
 0381            CAF    SGNTAB  -2
 0382            TS     SGNON
 0383            AD     ONE
 0384            TS     SGNOFF
 0385  2         TC     SGNCOM
 0386   SGNTAB   OCT    5               -R1
 0387            OCT    3               -R2
 0388  4         OCT    0               -R3
 0389   SIGNTEST LXCH   Q               ALLOWS +,- ONLY WHEN DSPCOUNT=R1D1,
 0390            CS     R1D1            R2D1, OR R3D1.
 0391            TC     SGNTST1
 0392            CS     R2D1
 0393            TC     SGNTST1
 0394            CS     R3D1
 0395            TC     SGNTST1
 0396            TC     ENDOFJOB        NO MATCH FOUND. SIGN ILLEGAL
 0397   SGNTST1  AD     DSPCOUNT
 0398            EXTEND
 0399            BZF    +2              MATCH FOUND
 0400            TC     Q
 0401  4         TC     L               SIGN LEGAL
R0402   ERROR LIGHT RESET (RSET) TURNS OFF,
R0403   UPLINK ACTIVITY, AUTO, HOLD, FREE, NO ATT, OPERATOR ERROR,
R0404   PROG ALM, TRACKER FAIL.
R0405   LEAVES GIMBAL LOCK ALONE.
R0406   IT ALSO ZEROES THE :TEST ALARM: OUT BIT, WHICH TURNS OFF STBY,RESTART.
R0407   IT ALSO SETS :CAUTION RESET: TO 1.
R0408  2IT ALSO FORCES BIT 12 OF ALL DSPTAB ENTRIES TO 1.
 0409   ERROR    XCH    21/22REG        RESTORE ORIGINAL C(DSPLOCK). THUS ERROR
 0410            TS     DSPLOCK         LIGHT RESET LEAVES DSPLOCK UNCHANGED.
 0411            INHINT
 0412            CAF    BIT10           TURN ON :CAUTION RESET: OUTBIT
 0413            EXTEND
 0414            WOR    DSALMOUT        BIT10 CHAN 11
 0415            CAF    BIT6            LEAVE GIMBAL LOCK LAMP INTACT,
 0416            MASK   DSPTAB +11D     TURNING OFF, AUTO, HOLD, FREE, NO ATT.,
 0417            AD     BIT15           PROG ALARM, AND TRACKER.
 0418            TS     DSPTAB +11D
 0419            CS     PRIO16          RESET FAIL BITS WHICH GENERATE PROG
 0420            MASK   IMODES33        ALARM SO THAT IF THE FAILURE STILL
 0421            AD     PRIO16          EXISTS, THE ALARM WILL COME BACK.
 0422            TS     IMODES33
 0423            CS     BIT10
 0424            MASK   IMODES30
 0425            AD     BIT10
 0426  2         TS     IMODES30
 0427            CS     RFAILS
 0428            MASK   RADMODES
 0429            AD     BIT7
 0430  2         TS     RADMODES
 0431            CS     BIT10           TURN OFF :TEST ALARM: OUTBIT.
 0432            EXTEND
 0433            WAND   CHAN13
 0434            CS     ERCON           TURN OFF UPLINK ACTIVITY,
 0435            EXTEND                 OPERATOR ERROR.
 0436            WAND   DSALMOUT
 0437   TSTAB    CAF    BINCON          (DEC 10)
 0438            TS     ERCNT           ERCNT = COUNT
 0439            INHINT
 0440            INDEX  ERCNT
 0441            CCS    DSPTAB
 0442            AD     ONE
 0443            TC     ERPLUS
 0444            AD     ONE
 0445   ERMINUS  CS     A
 0446            MASK   NOTBIT12
 0447            TC     ERCOM
 0448   ERPLUS   CS     A
 0449            MASK   NOTBIT12
 0450            CS     A               MIGHT WANT TO RESET CLPASS, DECBRNCH,
 0451   ERCOM    INDEX  ERCNT           ETC.
 0452            TS     DSPTAB
 0453            RELINT
 0454            CCS    ERCNT
 0455            TC     TSTAB   +1
 0456            CAF    ZERO
 0457            TS     FAILREG
 0458            TS     SFAIL
 0459  2         TC     ENDOFJOB
 0460   ERCON    OCT    104             CHAN 11 BITS 3,7.
A0461                                   UPLINK ACTIVITY, AND OPERATOR ERROR.
 0462   RFAILS   OCT    330             RADAR CDU AND DATA FAIL FLAGS.
 0463  4NOTBIT12 OCT    73777
R0464   CLEAR BLANKS WHICH R1, R2, R3 IS CURRENT OR LAST TO BE DISPLAYED(PERTINE
R0465   NT XREG,YREG,ZREG IS CLEARED). SUCCESSIVE CLEARS TAKE CARE OF EACH RX
R0466  2L/ RC UNTIL R1 IS DONE. THEN NO FURTHER ACTION
R0467   THE SINGLE COMPONENT LOAD VERBS ALLOW ONLY THE SINGLE RC THAT IS
R0468  2APPROPRIATE TO BE CLEARED.
R0469   CLPASS   +0  PASS0, CAN BE BACKED UP
R0470            +NZ  HIPASS, CAN BE BACKED UP
R0471  2         -NZ  PASS0, CANNOT BE BACKED UP
 0472   CLEAR    CCS    DSPCOUNT
 0473            AD     ONE
 0474            TC     +2
 0475            AD     ONE
 0476            TS     DSPCOUNT        MAG OF DSPCOUNT
 0477            TC     GETINREL        MUST SET INREL, EVEN FOR HIPASS
 0478            CCS    CLPASS
 0479            TC     CLPASHI         +
 0480            TC     +2              +0    IF CLPASS IS +0 OR -, IT IS PASS0
 0481            TC     +1              -
 0482            CA     INREL
 0483            TC     LEGALTST
 0484            TC     CLEAR1
 0485   CLPASHI  CCS    INREL
 0486            TS     INREL
 0487            TC     LEGALTST
 0488            CAF    DOUBLK +2       +3 TO - NUMBER. BACKS DATA REQUESTS.
 0489            ADS    REQRET
 0490            CA     INREL
 0491            TS     MIXTEMP         TEMP STORAGE FOR INREL
 0492            EXTEND
 0493            DIM    VERBREG         DECREMENT VERB AND RE-DISPLAY
 0494            TC     BANKCALL
 0495            CADR   UPDATVB
 0496            CA     MIXTEMP
 0497            TS     INREL           RESTORE INREL
 0498   CLEAR1   TC     CLR5
 0499            INCR   CLPASS          ONLY IF CLPASS IS + OR +0,
 0500            TC     ENDOFJOB        SET FOR HIGHER PASS.
 0501   CLR5     LXCH   Q               USES 5BLANK  BUT AVOIDS ITS TC GETINREL
 0502            TC     5BLANK  +2
 0503   LEGALTST AD     NEG2
 0504            CCS    A
 0505            TC     Q               LEGAL  INREL G/ 2
 0506            TC     CCSHOLE
 0507            TC     ENDOFJOB        ILLEGAL   INREL= 0,1
 0508  4         TC     Q               LEGAL    INREL = 2
R0509   5BLANK BLANKS 5 CHAR DISPLAY WORD IN R1, R2, OR R3. IT ALSO ZEROES XREG,
R0510   YREG, OR ZREG.PLACE ANY + DSPCOUNT NUMBER FOR PERTINENT RC INTO DSPCOUNT
R0511  2DSPCOUNT IS LEFT SET TO LEFT MOST DSP NUMB FOR RC JUST BLANKED.
 0512   5BLANK   LXCH   Q
 0513            TC     GETINREL
 0514            CAF    ZERO
 0515            INDEX  INREL
 0516            TS     VERBREG         ZERO X, Y, Z REG.
 0517            INDEX  INREL
 0518            TS     XREGLP  -2
 0519            TS     CODE
 0520            INDEX  INREL           ZERO PERTINENT DEC COMP BIT.
 0521            CS     BIT7            PROTECT OTHERS
 0522            MASK   DECBRNCH
 0523            MASK   BRNCHCON        ZERO LOW 2 BITS.
 0524            TS     DECBRNCH
 0525            INDEX  INREL
 0526            CAF    SINBLANK -2     BLANK ISOLATED CHAR SEPARATELY
 0527            TS     COUNT
 0528            TC     DSPIN
 0529   5BLANK1  INDEX  INREL
 0530            CAF    DOUBLK  -2
 0531            TS     DSPCOUNT
 0532            TC     2BLANK
 0533            CS     TWO
 0534            ADS    DSPCOUNT
 0535            TC     2BLANK
 0536            INDEX  INREL
 0537            CAF    R1D1    -2
 0538            TS     DSPCOUNT        SET DSPCOUNT TO LEFT MOST DSP NUMBER
 0539  2         TC     L               OF REG. JUST BLANKED
 0540   SINBLANK OCT    16              DEC 14
 0541            OCT    5
 0542            OCT    4
 0543   DOUBLK   OCT    15              DEC 13
 0544            OCT    11              DEC 9
 0545  2         OCT    3
 0546  2BRNCHCON OCT    77774
R0547   2BLANK BLANKS TWO CHAR. PLACE DSP NUMBER OF LEFT CHAR  OF THE PAIR INTO
R0548  2DSPCOUNT. THIS NUMBER IS LEFT IN DSPCOUNT
 0549   2BLANK   CA     DSPCOUNT
 0550            TS     SR
 0551            CS     BLANKCON
 0552            INHINT
 0553            INDEX  SR
 0554            XCH    DSPTAB
 0555            EXTEND
 0556            BZMF   +2              IF OLD CONTENTS -, NOUT OK
 0557            INCR   NOUT            IF OLD CONTENTS +, +1 TO NOUT
 0558            RELINT                 IF -,NOUT OK
 0559            TC     Q
 0560  2BLANKCON OCT    4000
P0561   ENTER PASS 0 IS THE EXECUTE FUNCTION. HIGHER ORDER ENTERS ARE TO LOAD
R0562   DATA. THE SIGN OF REQRET DETERMINES THE PASS, + FOR PASS 0,- FOR HIGHER
R0563  4PASSES.
R0564   MACHINE CADR TO BE SPECIFIED (MCTBS) NOUNS DESIRE AN ECADR TO BE LOADED
R0565   WHEN USED WITH LOAD VERBS, MONITOR VERBS, OR DISPLAY VERBS (EXCEPT
R0566  4VERB = FIXED MEMORY DISPLAY, WHICH REQUIRES AN FCADR).
 0567  2         SETLOC 22000
 0568   NVSUBB   TC     NVSUB1          STANDARD LEAD INS. DONT MOVE.
 0569   DSPMM    TCF    DSPMM1
 0570   LOADLV1  TC     LOADLV
A0571  4                                END OF STANDARD LEAD INS.
 0572   ENTER    CAF    ZERO
 0573            TS     CLPASS
 0574            CAF    ENDINST
 0575            TS     ENTRET
 0576            CCS    REQRET
 0577            TC     ENTPAS0         IF +, PASS 0
 0578            TC     ENTPAS0         IF +, PASS 0
 0579            TC     +1              IF -, NOT PASS 0
 0580            CAF    THREE           IF DEC, ALARM IF LESS THAN 5 CHAR IN,
 0581            MASK   DECBRNCH        BUT LEAVE REQRET - AND FLASH ON, SO
 0582            CCS    A               OPERATOR CAN SUPPLY MISSING NUMERICAL
 0583            TC     +2              CHARACTERS AND CONTINUE.
 0584            TC     ACCEPTWD        OCTAL. ANY NUMBER OF CHAR OK.
 0585            CCS    DSPCOUNT
 0586            TC     GODSPALM        LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
 0587            TC     GODSPALM        LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
 0588            TC     +1              5 CHAR IN (DSPCOUNT IS -)
 0589   ACCEPTWD CS     REQRET          5 CHAR IN (DSPCOUNT IS -)
 0590            TS     REQRET          SET REQRET +.
 0591            TC     FLASHOFF
 0592  2         TC     REQRET
 0593  2ENTEXIT  =      ENTRET
 0594  2LOWVERB  OCT    30              LOWER VERB THAT AVOIDS NOUN TEST
 0595   ENTPAS0  CAF    ZERO             NOUN VERB SUB ENTERS HERE
 0596            TS     DECBRNCH
 0597   TESTVB   CS     VERBREG         IF VERB IS 30-77, SKIP NOUN TEST
 0598            AD     LOWVERB         30-VB
 0599            EXTEND
 0600            BZMF   VERBFAN         VERB G/E 30
 0601   TESTNN   EXTEND                 VERB L/ 30
 0602            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0603            DXCH   Z               ROUTINE.
 0604            INDEX  MIXBR
 0605            TC     +0
 0606            TC     +2              NORMAL
 0607            TC     MIXNOUN         MIXED
 0608            CCS    NNADTEM         NORMAL
 0609            TC     VERBFAN -2           NORMAL IF +
 0610            TC     GODSPALM        NOT IN USE   IF +0
 0611            TC     REQADD          SPECIFY MACHINE CADR IF -
 0612            INCR   NOUNCADR        AUGMENT MACHINE CADR IF -0
 0613            TC     SETNADD         ECADR FROM NOUNCADR. SETS EB, NOUNADD.
 0614            TC     INTMCTBS +2
 0615   REQADD   CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 0616            TS     CLPASS
 0617            CS     ENDINST         TEST IF REACHED HERE FROM INTERNAL OR
 0618            AD     ENTEXIT                     FROM EXTERNAL
 0619            EXTEND
 0620            BZF    +2              EXTERNAL MACH CADR TO BE SPECIFIED
 0621            TC     INTMCTBS
 0622            TC     REQDATZ         EXTERNAL MACH CADR TO BE SPECIFIED
 0623            CCS    DECBRNCH
 0624            TC     GODSPALM        ALARM IF DECIMAL USED FOR MCTBS
 0625            XCH    ZREG            OCTAL USED    OK
 0626            TC     SETNCADR        ECADR INTO NOUNCADR. SET EB, NOUNADD.
 0627            EXTEND
 0628            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0629            DXCH   Z               ROUTINE.
 0630  2         TC     VERBFAN
 0631            EBANK= DSPCOUNT
 0632   LODNNLOC 2CADR  LODNNTAB
 0633  2NEG5     OCT    77772
 0634   INTMCTBS CA     MPAC    +2      INTERNAL MACH CADR TO BE SPECIFIED.
 0635            TC     SETNCADR        ECADR INTO NOUNCADR. SET EB, NOUNADD.
 0636            CS     BIT4            NVSUB CALL LEFT CADR IN MPAC+2 FOR MACH
 0637            MASK   VERBREG         CADR TO BE SPECIFIED.
 0638            AD     NEG5            MASKING MAKES VB15 LOOK LIKE VB05.
 0639            EXTEND
 0640            BZF    VERBFAN         VB = 05 OR 15, DO NOT DISPLAY CADR.
 0641            CAF    R3D1            VB NOT = 05 OR 15, DISPLAY CADR.
 0642            TS     DSPCOUNT
 0643            CA     NOUNCADR
 0644            TC     DSPOCTWD
 0645            TC     VERBFAN
 0646            AD     ONE
 0647            TC     SETNCADR        ECADR INTO NOUNCADR. SETS EB, NOUNADD.
 0648   VERBFAN  CS     LST2CON
 0649            AD     VERBREG         VERB-LST2CON
 0650            CCS    A
 0651            AD     ONE             VERB G/ LST2CON
 0652            TC     +2
 0653            TC     VBFANDIR        VERB L/ LST2CON
 0654            TS     MPAC
 0655            TC     RELDSP          RELEASE DISPLAY SYST
 0656            XCH    MPAC            ALSO TURN OFF RELEASE DISPLAY SYST LIGHT
 0657            AD     LST2CADR
 0658            TC     BANKJUMP
 0659   LST2CON  OCT    40              FIRST LST2 VERB
 0660  2LST2CADR CADR   LST2FAN
 0661   VBFANDIR INDEX  VERBREG
 0662            CAF    VERBTAB
 0663  2         TC     BANKJUMP
 0664   VERBTAB  CADR   GODSPALM        VB00 ILLEGAL
 0665            CADR   DSPA            VB01 DISPLAY OCT COMP 1 (R1)
 0666            CADR   DSPB            VB02 DISPLAY OCT COMP 2 (R1)
 0667            CADR   DSPC            VB03 DISPLAY OCT COMP 3 (R1)
 0668            CADR   DSPAB           VB04 DISPLAY OCT COMP 1,2 (R1,R2)
 0669            CADR   DSPABC          VB05 DISPLAY OCT COMP 1,2,3 (R1,R2,R3)
 0670            CADR   DECDSP          VB06 DECIMAL DISPLAY
 0671            CADR   DSPDPDEC        VB07 DP DECIMAL DISPLAY (R1,R2)
 0672            CADR   DSPALARM        VB10 SPARE
 0673            CADR   MONITOR         VB11 MONITOR OCT COMP 1 (R1)
 0674            CADR   MONITOR         VB12 MONITOR OCT COMP 2 (R1)
 0675            CADR   MONITOR         VB13 MONITOR OCT COMP 3 (R1)
 0676            CADR   MONITOR         VB14 MONITOR OCT COMP 1,2 (R1,R2)
 0677            CADR   MONITOR         VB15 MONITOR OCT COMP 1,2,3 (R1,R2,R3)
 0678            CADR   MONITOR         VB16 MONITOR DECIMAL
 0679            CADR   MONITOR         VB17 MONITOR DP DEC  (R1,R2)
 0680            CADR   GODSPALM        VB20 SPARE
 0681            CADR   ALOAD           VB21 LOAD COMP 1 (R1)
 0682            CADR   BLOAD           VB22 LOAD COMP 2 (R2)
 0683            CADR   CLOAD           VB23 LOAD COMP 3 (R3)
 0684            CADR   ABLOAD          VB24 LOAD COMP 1,2 (R1,R2)
 0685            CADR   ABCLOAD         VB25 LOAD COMP 1,2,3 (R1,R2,R3)
 0686            CADR   GODSPALM        VB26 SPARE
 0687            CADR   DSPFMEM         VB27 FIXED MEMORY DISPLAY
A0688                                   THE FOLLOWING VERBS MAKE NO NOUN TEST
 0689   REQEXLOC CADR   VBRQEXEC        VB30 REQUEST EXECUTIVE
 0690            CADR   VBRQWAIT        VB31 REQUEST WAITLIST
 0691            CADR   BUMP            VB32 C(R2) INTO R3, C(R1) INTO R2
 0692            CADR   VBPROC          VB33 PROCEED WITHOUT DATA
 0693            CADR   VBTERM          VB34 TERMINATE CURRENT TEST OR LOAD REQ
 0694            CADR   VBTSTLTS        VB35 TEST LIGHTS
 0695            CADR   SLAP1           VB36 FRESH START
 0696  4ENDVBFAN CADR   MMCHANG         VB37 CHANGE MAJOR MODE
R0697   THE LIST2 VERBFAN IS LOCATED IN THE EXTENDED VERB BANK.
P0698   NNADTAB CONTAINS A RELATIVE ADDRESS, IDADDREL(IN LOW 10 BITS), REFERRING
R0699   TO WHERE 3 CONSECUTIVE ADDRESSES ARE STORED (IN IDADDTAB).
R0700   MIXNOUN GETS DATA AND STORES IN MIXTEMP,+1,+2. IT SETS NOUNADD FOR
R0701  2 MIXTEMP.
 0702   MIXNOUN  CCS    NNADTEM
 0703            TC     +4              +  IN USE
 0704            TC     GODSPALM        +0  NOT IN USE
 0705            TC     +2              -  IN USE
 0706            TC     +1              -0  IN USE
 0707            CS     SIX
 0708            AD     VERBREG
 0709            EXTEND
 0710            BZMF   +2              VERB L/E 6
 0711            TC     VERBFAN         AVOID MIXNOUN SWAP IF VB NOT = DISPLAY
 0712            CAF    TWO
 0713   MIXNN1   TS     DECOUNT
 0714            AD     MIXAD
 0715            TS     NOUNADD         SET NOUNADD TO MIXTEMP + K
 0716            INDEX  DECOUNT         GET IDADDTAB ENTRY FOR COMPONENT K
 0717            CA     IDAD1TEM        OF NOUN.
 0718            TS     NOUNTEM
A0719                                   TEST FOR DP(FOR OCT DISPLAY). IF SO, GET
A0720                                     MINOR PART ONLY.
 0721            TC     SFRUTMIX        GET SF ROUT NUMBER IN A
 0722            TC     DPTEST
 0723            TC     MIXNN2          NO DP
 0724            INCR   NOUNTEM         DP  GET MINOR PART
 0725   MIXNN2   CA     NOUNTEM
 0726            MASK   LOW11           ESUBK (NO DP)  OR (ESUBK)+1    FOR DP
 0727            TC     SETEBANK        SET EBANK, LEAVE EADRES IN A.
 0728            INDEX  A               PICK UP C(ESUBK)  NOT DP
 0729            CA     0               OR C((ESUBK)+1)  FOR DP MINOR PART
 0730            INDEX  NOUNADD
 0731            XCH    0               STORE IN MIXTEM + K
 0732            CCS    DECOUNT
 0733            TC     MIXNN1
 0734  2         TC     VERBFAN
 0735  4MIXAD    TC     MIXTEMP
R0736   DPTEST   ENTER WITH SF ROUT NUMBER IN A.
R0737            RETURNS TO L+1 IF NO DP.
R0738  2         RETURNS TO L+2 IF DP.
 0739   DPTEST   INDEX  A
 0740            TCF    +1
 0741            TC     Q               OCTAL ONLY  NO DP
 0742            TC     Q               FRACT NO DP
 0743            TC     Q               DEG  NO DP
 0744            TC     Q               ARITH  NO DP
 0745            TCF    DPTEST1         DP1OUT
 0746            TCF    DPTEST1         DP2OUT
 0747            TC     Q               OPDEG  NO DP
 0748            TCF    DPTEST1         DP3OUT
 0749   DPTEST1  INDEX  Q
 0750  4         TC     1               RETURN TO L+2
 0751   REQDATX  CAF    R1D1
 0752            TCF    REQCOM
 0753   REQDATY  CAF    R2D1
 0754            TCF    REQCOM
 0755   REQDATZ  CAF    R3D1
 0756   REQCOM   TS     DSPCOUNT
 0757            CS     Q
 0758            TS     REQRET
 0759            TC     BANKCALL
 0760            CADR   5BLANK
 0761            TC     FLASHON
 0762            CS     ENDINST
 0763            AD     ENTEXIT
 0764            EXTEND
 0765            BZF    ENDRQDAT        ENTEXIT = ENDOFJOB. EXTERNALLY INITIATED
 0766            CS     ZERO            ENTEXIT NOT ENDOFJOB. NVSUB INITIATED
 0767            TS     CADRSTOR        NVSUB INITIATED LOAD. SET CADRSTOR TO -0
 0768  2ENDRQDAT TC     ENTEXIT
R0769   IF NVSUB INITIATED LOAD, SET CADRSTOR TO -0 TO TELL RECALTST TO RELEASE
R0770  4DISPLAY IF ENDIDLE WAS NOT USED. (NECESSARY FOR DATAWAIT)
 0771            TS     NOUNREG
 0772   UPDATNN  XCH    Q
 0773            TS     UPDATRET
 0774            EXTEND
 0775            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0776            DXCH   Z               ROUTINE.
 0777            CCS    NNADTEM
 0778            AD     ONE             NORMAL
 0779            TCF    PUTADD
 0780            TCF    PUTADD  +1      MCTBS  DONT CHANGE NOUNADD
 0781            TCF    PUTADD  +1      MCTBI  DONT CHANGE NOUNADD
 0782   PUTADD   TC     SETNCADR        ECADR INTO NOUNCADR. SETS EB, NOUNADD.
 0783            CAF    ND1
 0784            TS     DSPCOUNT
 0785            CA     NOUNREG
 0786  2         TCF    UPDAT1
 0787            TS     VERBREG
 0788   UPDATVB  XCH    Q
 0789            TS     UPDATRET
 0790            CAF    VD1
 0791            TS     DSPCOUNT
 0792            CA     VERBREG
 0793   UPDAT1   TC     DSP2BIT
 0794  4         TC     UPDATRET
 0795   GODSPALM TC     POSTJUMP
 0796            CADR   DSPALARM
P0797            NOUN   TABLES
R0798   NOUN CODE L/ 55, NORMAL CASE.  NOUN CODE G/E 55, MIXED NOUN CASE.
R0799   FOR NORMAL CASE, NNADTAB CONTAINS ONE       ECADR     FOR EACH NOUN.
R0800   +0 INDICATES NOUN NOT USED.   - ENTRY INDICATES MACHINE CADR(E OR F) TO
R0801   BE SPECIFIED. -1 INDICATES CHANNEL TO BE SPECIFIED. -0 INDICATES AUGMENT
R0802  2OF LAST MACHINE CADR SUPPLIED.
R0803   FOR MIXED CASE, NNADTAB CONTAINS ONE INDIRECT ADDRESS(IDADDREL) IN LOW
R0804  210 BITS, AND THE COMPONENT CODE NUMBER IN THE HIGH 5 BITS.
R0805  2NNTYPTAB IS A PACKED TABLE OF THE FORM MMMMMNNNNNPPPPP.
R0806   FOR THE NORMAL CASE, M-S ARE THE COMPONENT CODE NUMBER.
R0807                        N-S ARE THE SF ROUTINE CODE NUMBER.
R0808  2                     P-S ARE THE SF CONSTANT CODE NUMBER.
R0809   MIXED CASE,M-S ARE THE SF CONSTANT3 CODE NUMBER     3 COMPONENT CASE
R0810              N-S ARE THE SF CONSTANT2 CODE NUMBER
R0811              P-S ARE THE SF CONSTANT1 CODE NUMBER
R0812              N-S ARE THE SF CONSTANT2 CODE NUMBER     2 COMPONENT CASE
R0813              P-S ARE THE SF CONSTANT1 CODE NUMBER
R0814  2           P-S ARE THE SF CONSTANT1 CODE NUMBER      1 COMPONENT CASE
R0815   THERE IS ALSO AN INDIRECT ADDRESS TABLE(IDADDTAB) FOR MIXED CASE ONLY.
R0816   EACH ENTRY CONTAINS ONE ECADR.    IDADDREL IS THE RELATIVE ADDRESS OF
R0817   THE FIRST OF THESE ENTRIES.
R0818   THERE IS ONE ENTRY IN THIS TABLE FOR EACH COMPONENT OF A MIXED NOUN
R0819  2THEY ARE LISTED IN ORDER OF ASCENDING K.
R0820   THERE IS ALSO A SCALE FACTOR ROUTINE NUMBER TABLE( RUTMXTAB ) FOR MIXED
R0821   CASE ONLY. THERE IS ONE ENTRY PER MIXED NOUN. THE FORM IS,
R0822         QQQQQRRRRRSSSSS
R0823   Q-S ARE THE SF ROUTINE 3 CODE NUMBER     3 COMPONENT CASE
R0824   R-S ARE THE SF ROUTINE 2 CODE NUMBER
R0825   S-S ARE THE SF ROUTINE 1 CODE NUMBER
R0826   R-S ARE THE SF ROUTINE 2 CODE NUMBER     2 COMPONENT CASE
R0827  4S-S ARE THE SF ROUTINE 1 CODE NUMBER
R0828   IN OCTAL DISPLAY AND LOAD (OCT OR DEC) VERBS, EXCLUDE USE OF VERBS WHOSE
R0829   COMPONENT NUMBER IS GREATER THAN THE NUMBER OF COMPONENTS IN NOUN.
R0830   ALL MACHINE ADDRESS TO BE SPECIFIED NOUNS ARE 1 COMPONENT.
R0831   ONLY EXCEPTION IS NOUN 01 TO ALLOW OCTAL DISPLAYS AND LOADS OF
R0832  4AN UNCONTOLLED NUMBER OF COMPONENTS.
R0833   IN MULTI-COMPONENT LOAD VERBS, NO MIXING OF OCTAL AND DECIMAL DATA
R0834  2COMPONENT WORDS IS ALLOWED. ALARM IF VIOLATION.
R0835   IN DECIMAL LOADS OF DATA, 5 NUMERICAL CHARACTERS MUST BE KEYED IN
R0836   BEFORE EACH ENTER. IF NOT, ALARM.
P0837            DISPLAY  VERBS
 0838   DSPABC   CS     TWO
 0839            TC     COMPTEST
 0840            INDEX  NOUNADD
 0841            CS     2
 0842            XCH    BUF     +2
 0843   DSPAB    CS     ONE
 0844            TC     COMPTEST
 0845            INDEX  NOUNADD
 0846            CS     1
 0847            XCH    BUF     +1
 0848   DSPA     TC     TSTFORDP
 0849            INDEX  NOUNADD
 0850            CS     0
 0851   DSPCOM1  XCH    BUF
 0852            TC     DSPCOM2
 0853   DSPB     CS     ONE
 0854            TC     COMPTEST
 0855            INDEX  NOUNADD
 0856            CS     1
 0857            TC     DSPCOM1
 0858   DSPC     CS     TWO
 0859            TC     COMPTEST
 0860            INDEX  NOUNADD
 0861            CS     2
 0862            TC     DSPCOM1
 0863   DSPCOM2  CS     TWO             A  B  C  AB  ABC
 0864            AD     VERBREG         -1 -0 +1 +2  +3   IN A
 0865            CCS    A               +0 +0 +0 +1  +2    IN A AFTER CCS
 0866            TC     DSPCOM3
 0867            TC     ENTEXIT
 0868            TC     +1
 0869   DSPCOM3  TS     DISTEM          +0,+1,+2 INTO DISTEM
 0870            INDEX  A
 0871            CAF    R1D1
 0872            TS     DSPCOUNT
 0873            INDEX  DISTEM
 0874            CS     BUF
 0875            TC     DSPOCTWD
 0876            XCH    DISTEM
 0877  2         TC     DSPCOM2 +2
R0878   COMPTEST ALARMS IF COMPONENT NUMBER OF VERB(LOAD OR OCT DISPLAY) IS
R0879   GREATER THAN THE HIGHEST COMPONENT NUMBER OF NOUN.
R0880   NOUN 01 IS EXCLUDED FROM TEST.
 0881   COMPTEST TS     SFTEMP1         - VERB COMP
 0882            LXCH   Q
 0883   COMPTST1 CS     ONE
 0884            AD     NOUNREG
 0885            EXTEND
 0886            BZF    NDCMPTST        NOUN = 01, ANY COMP OK
 0887            INDEX  MIXBR           NOUN NOT = 01.
 0888            CAF    COMPICK -1
 0889            INDEX  A
 0890            CA     0
 0891            MASK   HI5
 0892            TC     LEFT5           NOUN COMP
 0893            AD     SFTEMP1         NOUN COMP - VERB COMP
 0894            CCS    A
 0895            TC     L               NOUN COMP G/ VERB COMP
 0896            TC     CCSHOLE
 0897            TC     GODSPALM        NOUN COMP L/ VERB COMP
 0898  4NDCMPTST TC     L               NOUN COMP = VERB COMP
 0899   TSTFORDP LXCH   Q               TEST FOR DP. IF SO, GET MINOR PART ONLY.
 0900            CA     NNADTEM
 0901            AD     ONE             IF NNADTEM = -1, CHANNEL TO BE SPECIFIED
 0902            EXTEND
 0903            BZF    CHANDSP
 0904            INDEX  MIXBR
 0905            TC     +0
 0906            TC     +2              NORMAL
 0907            TC     L               MIXED CASE ALREADY HANDLED IN MIXNOUN
 0908            TC     SFRUTNOR
 0909            TC     DPTEST
 0910            TC     L               NO DP
 0911            INCR   NOUNADD         DP    E+1 INTO NOUNADD FOR MINOR PART.
 0912  4         TC     L
 0913   CHANDSP  EXTEND
 0914            INDEX  NOUNCADR
 0915            READ   0
 0916            CS     A
 0917  4         TCF    DSPCOM1
 0918   COMPICK  ADRES  NNTYPTEM
 0919  2         ADRES  NNADTEM
 0920   DECDSP   INDEX  MIXBR           NORMAL                MIXED
 0921            CAF    COMPICK -1      ADRES NNTYPTEM        ADRES NNADTEM
 0922            INDEX  A
 0923            CA     0               C(NNTYPTEM)           C(NNADTEM)
 0924            MASK   HI5             GET HI5 OF NNTYPTAB(NORM)OF NNADTAB(MIX)
 0925            TC     LEFT5
 0926            TS     DECOUNT         COMP NUMBER INTO DECOUNT
 0927   DSPDCGET TS     DECTEM          PICKS UP DATA
 0928            AD     NOUNADD         DECTEM  1COMP +0, 2COMP +1, 3COMP +2
 0929            INDEX  A
 0930            CS     0
 0931            INDEX  DECTEM
 0932            XCH    XREG            CANT USE BUF SINCE DMP USES IT.
 0933            CCS    DECTEM
 0934            TC     DSPDCGET        MORE TO GET
 0935   DSPDCPUT CAF    ZERO            DISPLAYS DATA
 0936            TS     MPAC    +1      DECOUNT 1COMP +0, 2COMP +1, 3COMP +2
 0937            TS     MPAC    +2
 0938            INDEX  DECOUNT
 0939            CAF    R1D1
 0940            TS     DSPCOUNT
 0941            INDEX  DECOUNT
 0942            CS     XREG
 0943            TS     MPAC
 0944            TC     SFCONUM         2X( SF CON NUMB ) IN A
 0945            TS     SFTEMP1
 0946            EXTEND                 SWITCH BANKS TO SF CONSTANT TABLE
 0947            DCA    GTSFOUTL           READING ROUTINE.
 0948            DXCH   Z               LOADS SFTEMP1, SFTEMP2.
 0949            INDEX  MIXBR
 0950            TC     +0
 0951            TC     DSPSFNOR
 0952            TC     SFRUTMIX
 0953  2         TC     DECDSP3
 0954   DSPSFNOR TC     SFRUTNOR
 0955  2         TC     DECDSP3
 0956            EBANK= DSPCOUNT
 0957  4GTSFOUTL 2CADR  GTSFOUT
 0958   DSPDCEND TC     BANKCALL        ALL SFOUT ROUTINES END HERE
 0959            CADR   DSPDECWD
 0960            CCS    DECOUNT
 0961            TC     +2
 0962            TC     ENTEXIT
 0963            TS     DECOUNT
 0964  4         TC     DSPDCPUT        MORE TO DISPLAY
 0965   DECDSP3  INDEX  A
 0966            CAF    SFOUTABR
 0967  2         TC     BANKJUMP
 0968   SFOUTABR CADR   DSPALARM        ALARM IF DEC DISP WITH OCTAL ONLY NOUN
 0969            CADR   DSPDCEND
 0970            CADR   DEGOUTSF
 0971            CADR   ARTOUTSF
 0972            CADR   DP1OUTSF
 0973            CADR   DP2OUTSF
 0974            CADR   OPDEGOUT
 0975            CADR   DP3OUTSF
 0976  4ENDRTOUT EQUALS
R0977           THE FOLLOWING IS ATYPICAL SF ROUTINE . IT USES MPAC. LEAVES RESU
R0978  4LTS IN MPAC, MPAC+1. ENDS WITH TC DSPDCEND
 0979  2         SETLOC BLANKCON +1
R0980      DEGOUTSF SCALES BY .18 THE LOW 14 BITS OF ANGLE , ADDING .18 FOR
R0981  2NUMBERS IN THE NEGATIVE (AGC) RANGE.
 0982   DEGOUTSF CAF    ZERO
 0983            TS     MPAC    +2      SET INDEX FOR FULL SCALE
 0984            TC     FIXRANGE
 0985            TC     +2              NO AUGMENT NEEDED (SFTEMP1 AND 2 ARE 0)
 0986            TC     SETAUG          SET AUGMENTER ACCORDING TO C(MPAC +2)
 0987  2         TC     DEGCOM
R0988  2OPDEGOUT SCALES BY .45 (THE RANGE IS 90 DEGREES) AND ADDS A 20 DEG BIAS.
 0989   OPDEGOUT CCS    MPAC            RANGE IS 90 DEG
 0990            XCH    MPAC            IF POS OR POS 0 THEN ADD BIAS AND
 0991            TC     +3              CORRECT FOR POSSIBLE OVERFLOW
 0992            TC     NEGOPT          IF NEG NON ZERO
 0993            AD     NEG1            IF NEG ZERO SUBTRACT 1
 0994            AD     20BIAS
 0995   BIASCOM  TS     MPAC            TEST FOR OVERFLOW
 0996            TC     +3              NO OVFLOW
 0997            CAF    BIT15           IF OVFLOW
 0998            ADS    MPAC
 0999            CAF    TWO             SET MULTIPLIER TO .45
 1000  2         TC     DEGOUTSF +1
 1001   NEGOPT   XCH    MPAC            NEGATIVE CASE
 1002            AD     20BIAS
 1003            CCS    A
 1004            TC     BIASCOM         IF POS THEN SUBTRACT 1 BECAUSE OF 2SCOM
 1005            TC     CCSHOLE
 1006            AD     ONE             IF NEG RESTORE SUM
 1007            COM                    IF NEG 0 LEAVE NEG 0
 1008  2         TC     BIASCOM
 1009   SETAUG   EXTEND                 LOADS SFTEMP1 AND SFTEMP2 WITH THE
 1010            INDEX  MPAC    +2      DP AUGMENTER CONSTANT
 1011            DCA    DEGTAB
 1012            DXCH   SFTEMP1
 1013  2         TC     Q
 1014   FIXRANGE CCS    MPAC            IF MPAC IS + RETURN TO L+1
 1015            TC     Q               IF MPAC IS - RETURN TO L+2 AFTER
 1016            TC     Q               MASKING OUT THE SIGN BIT
 1017            TCF    +1
 1018            CS     BIT15
 1019            MASK   MPAC
 1020            TS     MPAC
 1021            INDEX  Q
 1022  2         TC     1
 1023   DEGCOM   EXTEND                 LOADS MULTIPLIER , DOES SHORTMP, AND
 1024            INDEX  MPAC    +2      ADDS AUGMENTER.
 1025            DCA    DEGTAB
 1026            DXCH   MPAC            ADJUSTED ANGLE IN A
 1027            TC     SHORTMP
 1028            DXCH   SFTEMP1
 1029            DAS    MPAC
 1030  4         TC     SCOUTEND
 1031   DEGTAB   OCT    05605           HI PART OF     .18
 1032            OCT    03656           LOW PART OF    .18
 1033            OCT    16314           HI PART OF     .45
 1034  2         OCT    31463           LO PART OF     .45
 1035  220BIAS   OCT    16040           20 DEG BIAS FOR OPTICS
 1036   ARTOUTSF DXCH   SFTEMP1         ASSUMES POINT AT LEFT OF DP SFCON
 1037            DXCH   MPAC
 1038            TC     SHORTMP
 1039   SCOUTEND TC     POSTJUMP
 1040  2         CADR   DSPDCEND
 1041   DP1OUTSF TC     DPOUT           SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
 1042            XCH    MPAC    +2      IN SFTEMP1, SFTEMP2.  THEN SCALE RESULT
 1043            XCH    MPAC    +1      BY B14.
 1044            TS     MPAC
 1045  4         TC     SCOUTEND
 1046   DP2OUTSF TC     DPOUT           SCALES MPAC , MPAC +1 BY DP SCALE FACTOR
 1047  4         TC     SCOUTEND
 1048   DP3OUTSF TC     DPOUT           ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
 1049            TC     TPLEFT7         PART OF SFCON. SHIFTS RESULTS LEFT 7.
 1050  4         TC     SCOUTEND
R1051   DPOUT PICKS UP FRESH DATA FOR BOTH HI AND LO COMPONENTS.
R1052  2THIS IS NEEDED FOR TIME DISPLAY.
 1053   DPOUT    XCH    Q
 1054            TS     OVFIND
 1055            INDEX  MIXBR
 1056            TC     +0
 1057            TC     DPOUTNOR
 1058            INDEX  DECOUNT         GET IDADDTAB ENTRY FOR COMPONENT K
 1059            CA     IDAD1TEM            OF NOUN.
 1060            MASK   LOW11           E SUBK
 1061            TC     SETEBANK        SET EB, LEAVE EADRES IN A.
 1062   DPOUTCOM EXTEND
 1063            INDEX  A               MIXED         NORMAL
 1064            DCA    0               C(ESUBK)      C(E)
 1065            DXCH   MPAC            C((E SUBK)+1)      C(E+1)
 1066            TC     TPAGREE
 1067            TC     DMP
 1068            ADRES  SFTEMP1
 1069  2         TC     OVFIND
 1070   DPOUTNOR CA     NOUNADD         E
 1071  4         TC     DPOUTCOM
R1072   THIS IS A SPECIAL PURPOSE VERB FOR DISPLAYING A DOUBLE PRECISION AGC
R1073   WORD AS 10 DECIMAL DIGITS ON THE AGC DISPLAY PANEL.  IT CAN BE USED WITH
R1074   ANY NOUN, EXCEPT MIXED NOUNS. IT DISPLAYS THE CONTENTS
R1075   OF THE REGISTER NOUNADD IS POINTING TO .  IF USED WITH NOUNS WHICH ARE
R1076   INHERENTLY NOT DP SUCH AS THE CDU COUNTERS THE DISPLAY WILL BE GARBAGE.
R1077  4DISPLAY IS IN R1 AND R2 ONLY WITH THE SIGN IN R1.
 1078   DSPDPDEC INDEX  MIXBR
 1079            TC     +0
 1080            TC     +2              NORMAL NOUN
 1081            TC     DSPALARM
 1082            EXTEND
 1083            INDEX  NOUNADD
 1084            DCA    0
 1085            DXCH   MPAC
 1086            CAF    R1D1
 1087            TS     DSPCOUNT
 1088            CAF    ZERO
 1089            TS     MPAC  +2
 1090            TC     TPAGREE
 1091            TC     DSP2DEC
 1092   ENDDPDEC TC     ENTEXIT
P1093  4         LOAD   VERBS
 1094  2         SETLOC ENDRTOUT
 1095   ABCLOAD  CS     TWO
 1096            TC     COMPTEST
 1097            CAF    VBSP1LD
 1098            TC     UPDATVB  -1
 1099            TC     REQDATX
 1100            CAF    VBSP2LD
 1101            TC     UPDATVB  -1
 1102            TC     REQDATY
 1103            CAF    VBSP3LD
 1104            TC     UPDATVB -1
 1105  4         TC     REQDATZ
 1106   PUTXYZ   CS     SIX             TEST THAT THE 3 DATA WORDS LOADED ARE
 1107            TC     ALLDC/OC        ALL DEC OR ALL OCT.
 1108            EXTEND
 1109            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1110            DXCH   Z               ROUTINE.
 1111            CAF    ZERO            X COMP
 1112            TC     PUTCOM
 1113            INDEX  NOUNADD
 1114            TS     0
 1115            CAF    ONE             Y COMP
 1116            TC     PUTCOM
 1117            INDEX   NOUNADD
 1118            TS     1
 1119            CAF    TWO             Z COMP
 1120            TC     PUTCOM
 1121            INDEX  NOUNADD
 1122            TS     2
 1123  2         TC     LOADLV
 1124   ABLOAD   CS     ONE
 1125            TC     COMPTEST
 1126            CAF    VBSP1LD
 1127            TC     UPDATVB -1
 1128            TC     REQDATX
 1129            CAF    VBSP2LD
 1130            TC     UPDATVB -1
 1131            TC     REQDATY
 1132   PUTXY    CS     FIVE            TEST THAT THE 2 DATA WORDS LOADED ARE
 1133            TC     ALLDC/OC        ALL DEC OR ALL OCT.
 1134            EXTEND
 1135            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1136            DXCH   Z               ROUTINE.
 1137            CAF    ZERO            X COMP
 1138            TC     PUTCOM
 1139            INDEX  NOUNADD
 1140            TS     0
 1141            CAF    ONE             Y COMP
 1142            TC     PUTCOM
 1143            INDEX  NOUNADD
 1144            TS     1
 1145  2         TC     LOADLV
 1146   ALOAD    TC     REQDATX
 1147            EXTEND
 1148            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1149            DXCH   Z               ROUTINE.
 1150            CAF    ZERO            X COMP
 1151            TC     PUTCOM
 1152            INDEX  NOUNADD
 1153            TS     0
 1154  2         TC     LOADLV
 1155   BLOAD    CS     ONE
 1156            TC     COMPTEST
 1157            CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 1158            TS     CLPASS
 1159            TC     REQDATY
 1160            EXTEND
 1161            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1162            DXCH   Z               ROUTINE.
 1163            CAF    ONE
 1164            TC     PUTCOM
 1165            INDEX  NOUNADD
 1166            TS     1
 1167  2         TC     LOADLV
 1168   CLOAD    CS     TWO
 1169            TC     COMPTEST
 1170            CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 1171            TS     CLPASS
 1172            TC     REQDATZ
 1173            EXTEND
 1174            DCA    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1175            DXCH   Z               ROUTINE.
 1176            CAF    TWO
 1177            TC     PUTCOM
 1178            INDEX  NOUNADD
 1179            TS     2
 1180  2         TC     LOADLV
 1181   LOADLV   CAF    ZERO
 1182            TS     DECBRNCH
 1183            CS     ZERO
 1184            TS     LOADSTAT
 1185            CS     VD1             TO BLOCK NUMERICAL CHARACTERS AND
 1186            TS     DSPCOUNT        CLEARS AFTER A COMPLETED LOAD
 1187            TC     POSTJUMP        AFTER COMPLETED LOAD, GO TO RECALTST
 1188  2         CADR   RECALTST        TO SEE IF THERE IS RECALL FROM ENDIDLE.
 1189   VBSP1LD  OCT    21              VB21 = ALOAD
 1190   VBSP2LD  OCT    22              VB22 = BLOAD
 1191  4VBSP3LD  OCT    23              VB23 = CLOAD
 1192   ALLDC/OC TS     DECOUNT         TESTS THAT DATA WORDS LOADED ARE EITHER
 1193            CS     DECBRNCH        ALL DEC OR ALL OCT. ALARMS IF NOT.
 1194            TS     SR
 1195            CS     SR
 1196            CS     SR              SHIFTED RIGHT 2
 1197            CCS    A               DEC COMP BITS IN LOW 3
 1198            TCF    +2              SOME ONES IN LOW 3
 1199            TC     Q               ALL ZEROS. ALL OCTAL.  OK
 1200            AD     DECOUNT         DEC COMP = 7 FOR 3COMP, =6 FOR 2COMP
 1201            EXTEND                 (BUT IT HAS BEEN DECREMENTED BY CCS)
 1202            BZF    +2              MUST MATCH 6 FOR 3COMP, 5 FOR 2COMP.
 1203            TC     GODSPALM
 1204  4GOQ      TC     Q               ALL REQUIRED ARE DEC. OK
 1205   SFRUTNOR XCH    Q               GETS SF ROUTINE NUMBER FOR NORMAL CASE
 1206            TS     EXITEM          CANT USE L FOR RETURN. TSTFORDP USES L.
 1207            CAF    MID5
 1208            MASK   NNTYPTEM
 1209            TC     RIGHT5
 1210  2         TC     EXITEM          SF ROUTINE NUMBER IN A
 1211   SFRUTMIX XCH    Q               GETS SF ROUTINE NUMBER FOR MIXED CASE
 1212            TS     EXITEM
 1213            INDEX  DECOUNT
 1214            CAF    DISPLACE        PUT TC GOQ, TC RIGHT5, OR TC LEFT5 IN L
 1215            TS     L
 1216            INDEX  DECOUNT
 1217            CAF    LOW5            LOW5, MID5, OR HI5 IN A
 1218            MASK   RUTMXTEM        GET HI5, MID5, OR LOW5 OF RUTMXTAB ENTRY
 1219            INDEX  L
 1220            TC     0
R1221   DO TC GOQ(DECOUNT=0), DO TC RIGHT5(DECOUNT=1), DO TC LEFT5(DECOUNT=2).
 1222  2SFRET1   TC     EXITEM          SF ROUTINE NUMBER IN A
 1223   SFCONUM  XCH    Q               GETS 2X( SF CONSTANT NUMBER)
 1224            TS     EXITEM
 1225            INDEX  MIXBR
 1226            TC     +0
 1227            TC     CONUMNOR        NORMAL NOUN
 1228            INDEX  DECOUNT         MIXED NOUN
 1229            CAF    DISPLACE
 1230            TS     L               PUT TC GOQ, TC RIGHT5, OR TC LEFT5 IN L
 1231            INDEX  DECOUNT
 1232            CAF    LOW5
 1233            MASK   NNTYPTEM
 1234            INDEX  L
 1235            TC     0
R1236   DO TC GOQ(DECOUNT=0), DO TC RIGHT5(DECOUNT=1), DO TC LEFT5(DECOUNT=2).
 1237   SFRET    DOUBLE                 2X(SF CONSTANT NUMBER ) IN A
 1238  2         TC     EXITEM
 1239   DISPLACE TC     GOQ
 1240            TC     RIGHT5
 1241  2         TC     LEFT5
 1242   CONUMNOR CAF    LOW5            NORMAL NOUN ALWAYS GETS LOW 5 OF
 1243            MASK   NNTYPTEM        NNTYPTAB FOR SF CONUM.
 1244            DOUBLE
 1245  4         TC     EXITEM          2X( SF CONSTANT NUMBER) IN A
 1246   PUTCOM   TS     DECOUNT
 1247            XCH    Q
 1248            TS     DECRET
 1249            CAF    ZERO
 1250            TS     OVFIND
 1251            INDEX  DECOUNT
 1252            XCH    XREGLP
 1253            TS     MPAC  +1
 1254            INDEX  DECOUNT
 1255            XCH    XREG
 1256            TS     MPAC
 1257            INDEX  MIXBR
 1258            TC     +0
 1259            TC     PUTNORM         NORMAL NOUN
R1260   IF MIXNOUN, PLACE ADDRESS FOR COMPONENT K INTO NOUNADD, SET EBANK BITS.
 1261            INDEX  DECOUNT         GET IDADDTAB ENTRY FOR COMPONENT K
 1262            CA     IDAD1TEM                OF NOUN.
 1263            MASK   LOW11           (ECADR)SUBK FOR CURRENT COMP OF NOUN
 1264            TC     SETNCADR        ECADR INTO NOUNCADR. SETS EB, NOUNADD.
 1265            EXTEND                 C(NOUNADD) IN A UPON RETURN
 1266            SU     DECOUNT         PLACE (ESUBK)-K INTO NOUNADD
 1267            TS     NOUNADD
 1268            CCS    DECBRNCH
 1269            TC     PUTDECSF        +  DEC
 1270            TC     SFRUTMIX        +0  OCTAL
 1271            TC     DPTEST
 1272            TC     PUTCOM2         NO DP
A1273                                   TEST FOR DP SCALE FOR OCT LOAD. IF SO,
A1274                                   +0 INTO MAJOR PART. SET NOUNADD FOR
A1275                                   LOADING OCTAL WORD INTO MINOR PART.
 1276   PUTDPCOM INCR   NOUNADD         DP  (ESUBK)-K+1  OR  E+1
 1277            CA     NOUNADD         NOUNADD NOW SET FOR MINOR PART
 1278            ADS    DECOUNT         (ESUBK)+1  OR  E+1  INTO DECOUNT
 1279            CAF    ZERO            NOUNADD SET FOR MINOR PART
 1280            INDEX  DECOUNT
 1281            TS     0       -1      ZERO MAJOR PART(ESUBK OR E)
 1282  2         TC     PUTCOM2
 1283   PUTNORM  TC     SETNADD         ECADR FROM NOUNCADR. SETS EB, NOUNADD.
 1284            CCS    DECBRNCH
 1285            TC     PUTDECSF        +  DEC
 1286            TC     SFRUTNOR        +0  OCTAL
 1287            TC     DPTEST
 1288            TC     PUTCOM2 -4      NO DP
 1289            CAF    ZERO            DP
 1290            TS     DECOUNT
 1291  2         TC     PUTDPCOM
 1292            CA     NNADTEM
 1293            AD     ONE             IF NNADTEM = -1, CHANNEL TO BE SPECIFIED
 1294            EXTEND
 1295            BZF    CHANLOAD
 1296   PUTCOM2  XCH    MPAC
 1297  2         TC     DECRET
 1298            EBANK= DSPCOUNT
 1299  4GTSFINLC 2CADR  GTSFIN
 1300   CHANLOAD XCH    MPAC
 1301            EXTEND
 1302            INDEX  NOUNCADR
 1303            WRITE  0
 1304  4         TC     LOADLV
R1305  2PUTDECSF FINDS MIXBR AND DECOUNT STILL SET FROM PUTCOM
 1306   PUTDECSF TC     SFCONUM         2X(SF CON NUMB) IN A
 1307            TS     SFTEMP1
 1308            EXTEND                 SWITCH BANKS TO SF CONSTANT TABLE
 1309            DCA    GTSFINLC        READING ROUTINE.
 1310            DXCH   Z               LOADS SFTEMP1, SFTEMP2.
 1311            INDEX  MIXBR
 1312            TC     +0
 1313            TC     PUTSFNOR
 1314            TC     SFRUTMIX
 1315            TC     PUTDCSF2
 1316  2PUTSFNOR TC     SFRUTNOR
 1317   PUTDCSF2 INDEX  A
 1318            CAF    SFINTABR
 1319            TC     BANKJUMP        SWITCH BANKS FOR EXPANSHION ROOM
 1320   SFINTABR CADR   DSPALARM        ALARM IF DEC LOAD WITH OCTAL ONLY NOUN
 1321            CADR   BINROUND
 1322            CADR   DEGINSF
 1323            CADR   ARTHINSF
 1324            CADR   DPINSF
 1325            CADR   DPINSF2
 1326            CADR   OPTDEGIN
 1327            CADR   DPINSF          SAME AS ARITHDP1
 1328  4ENDRUTIN EQUALS
R1329   SCALE FACTORS FOR THOSE ROUTINES NEEDING THEM ARE AVAILABLE IN SFTEMP1.
R1330  4ALL SFIN ROUTINES USE MPAC MPAC+1. LEAVE RESULT IN A. END WITH TC DECRET
 1331  2         SETLOC ENDDPDEC +1
R1332  2DEGINSF APPLIES 1000/180 =5.55555(10) = 5.43434(8)
 1333   DEGINSF  TC     DMP             SF ROUTINE FOR DEC DEGREES
 1334            ADRES  DEGCON1         MULT BY 5.5  5(10)X2EXP-3
 1335            CCS    MPAC    +1      THIS ROUNDS OFF MPAC+1 BEFORE SHIFT
 1336            CAF    BIT11           LEFT 3, AND CAUSES 360.00 TO OF/UF
 1337            TC     +2              WHEN SHIFTED LEFT AND ALARM.
 1338            CS     BIT11
 1339            AD     MPAC    +1
 1340            TC     2ROUND  +2
 1341            TC     TPSL1           LEFT 1
 1342   DEGINSF2 TC     TPSL1           LEFT 2
 1343            TC     TESTOFUF
 1344            TC     TPSL1           RETURNS IF NO OF/UF (LEFT3)
 1345            CCS    MPAC
 1346            TC     SIGNFIX         IF+, GO TO SIGNFIX
 1347            TC     SIGNFIX         IF +0, GO TO SIGNFIX
 1348            COM                    IF - , USE -MAGNITUDE +1
 1349            TS     MPAC            IF -0, USE +0
 1350   SIGNFIX  CCS    OVFIND
 1351            TC     SGNTO1          IF OVERFLOW
 1352            TC     ENDSCALE        NO OVERFLOW/UNDERFLOW
 1353            CCS    MPAC            IF UF FORCE SIGN TO 0 EXCEPT -180
 1354            TC     CCSHOLE
 1355            TC     NEG180
 1356            TC     +1
 1357            XCH    MPAC
 1358            MASK   POSMAX
 1359            TS     MPAC
 1360   ENDSCALE TC     POSTJUMP
 1361  2         CADR   PUTCOM2
 1362   NEG180   CS     POSMAX
 1363  2         TC     ENDSCALE  -1
 1364   SGNTO1   CS     MPAC            IF OF FORCE SIGN TO 1
 1365            MASK   POSMAX
 1366            CS     A
 1367  2         TC     ENDSCALE  -1
 1368   DEGCON1  2DEC   5.555555555 B-3
 1369   DEGCON2  2DEC   2.222222222 B-2
 1370  2NEG.2    OCT    -06250          = .197753906  I.E. THE BIAS SCALED
 1371   ARTHINSF TC     DMP             SCALES MPAC, +1 BY SFTEMP1, SFTEMP2.
 1372            ADRES  SFTEMP1         ASSUMES POINT BETWEEN HI AND LO PARTS
 1373            XCH    MPAC    +2      OF SFCON. SHIFTS RESULTS LEFT BY 14.
 1374            XCH    MPAC    +1      (BY TAKING RESULTS FROM MPAC+1, MPAC+2)
 1375            XCH    MPAC
 1376            EXTEND
 1377            BZF    BINROUND
 1378            TC     DSPALARM        TOO LARGE A LOAD
 1379   BINROUND TC     2ROUND
 1380            TC     TESTOFUF
 1381  4         TC     ENDSCALE        RETURNS IF NO OF/UF
 1382   OPTDEGIN CCS    MPAC            OPTICS SCALING ROUTINE
 1383            TC     +4
 1384            TC     +3
 1385            TC     DSPALARM        REJECT NEGATIVE INPUT
 1386            TC     DSPALARM               DITTO
 1387   OPDEGIN2 CAF    NEG.2           RANGE IS 90 DEG
 1388            ADS    MPAC            SUBTRACT BIAS
 1389            TC     DMP             MULT BY 100 / 45  B-2
 1390            ADRES  DEGCON2
 1391            CAF    BIT12           ROUND AS IN DEGINSF
 1392            AD     MPAC    +1
 1393            TC     2ROUND  +2
 1394  2         TC     DEGINSF2
 1395   DPINSF   TC     DMP             SCALES MPAC, MPAC +1 BY SFTEMP1,
 1396            ADRES  SFTEMP1         SFTEMP2.  STORES LOW PART OF RESULT
 1397            XCH    MPAC    +2      IN (E SUBK) +1 OR E+1
 1398            DOUBLE
 1399            TS     MPAC    +2
 1400            CAF    ZERO
 1401            AD     MPAC    +1
 1402            TC     2ROUND  +2
 1403            TC     TESTOFUF
 1404            INDEX  MIXBR           RETURNS IF NO OF/UF
 1405            TC     +0
 1406            TC     DPINORM
 1407            CA     DECOUNT         MIXEDNOUN
 1408   DPINCOM  AD     NOUNADD             MIXED               NORMAL
 1409            TS     Q                 E SUBK            E
 1410            XCH    MPAC    +1
 1411            INDEX  Q
 1412            TS     1               PLACE LOW PART IN
 1413            TC     ENDSCALE        (E SUBK) +1    MIXED
 1414   DPINORM  CAF    ZERO            E +1         NORMAL
 1415  4         TC     DPINCOM
 1416   DPINSF2  TC     DMP             ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
 1417            ADRES  SFTEMP1         PART OF SF CONST. DPINSF2 SHIFTS RESULTS
 1418            TC     TPLEFT7         LEFT BY 7, ROUNDS MPAC+2 INTO MPAC+1.
 1419  4         TC     DPINSF  +2
 1420   TPLEFT7  XCH    Q               OPERATES ON MPAC, MPAC+1, MPAC+2
 1421            TS     SFTEMP2         CANT USE L FOR RETURN. TPSL1 USES L.
 1422            CAF    SIX             LEFT BY 7
 1423   LEFT7COM TS     SFTEMP1
 1424            TC     TPSL1
 1425            CCS    SFTEMP1
 1426            TC     LEFT7COM
 1427  4         TC     SFTEMP2
 1428   2ROUND   XCH    MPAC    +1
 1429            DOUBLE
 1430            TS     MPAC    +1
 1431            TC     Q               IF MPAC+1 DOES NOT OF/UF
 1432            AD     MPAC
 1433            TS     MPAC
 1434            TC     Q               IF MPAC DOES NOT OF/UF
 1435            TS     OVFIND
 1436  42RNDEND  TC     Q
 1437   TESTOFUF CCS    OVFIND          RETURNS IF NO OF/UF
 1438            TC     DSPALARM        OF
 1439            TC     Q
 1440            TC     DSPALARM        UF
P1441   MONITOR ALLOWS OTHER KEYBOARD ACTIVITY. IT IS ENDED BY VERB TERMINATE,
R1442  2ANY NVSUB CALL THAT PASSES THE DSPLOCK, OR ANOTHER MONITOR.
R1443   MONITOR ACTION IS SUSPENDED, BUT NOT ENDED, BY ANY KEYBOARD ACTION,
R1444   EXCEPT ERROR LIGHT RESET. IT BEGINS AGAIN WHEN KEY RELEASE IS PERFORMED.
R1445   MONITOR SAVES THE NOUN AND APPROPRIATE DISPLAY VERB IN MONSAVE. IT SAVES
R1446   NOUNCADR IN MONSAVE1, IF NOUN = MACHINE CADR TO BE SPECIFIED. BIT 15 OF
R1447  2MONSAVE1 IS THE KILL MONITOR SIGNAL (KILLER BIT).
R1448   MONSAVE INDICATES IF MONITOR IS ON(+=ON, +0=OFF)
R1449   IF MONSAVE IS +, MONITOR ENTERS NO REQUEST, BUT TURNS KILLER BIT OFF.
R1450  2IF MONSAVE IS +0, MONITOR ENTERS REQUEST AND TURNS KILLER BIT OFF.
R1451  2NVSUB AND VB=TERMINATE TURN KILL MONITOR BIT ON.
R1452   IF KILLER BIT IS ON, MONREQ ENTERS NO FURTHER REQUESTS, ZEROS MONSAVE
R1453  4AND MONSAVE1 (TURNING OFF KILLER BIT).
R1454   MONITOR DOSENT TEST FOR MATBS SINCE NVSUB CAN HANDLE INTERNAL MATBS NOW
 1455  2         SETLOC ENDRUTIN
 1456   MONITOR  CS     BIT15
 1457            MASK   NOUNCADR
 1458   MONIT1   TS     MPAC    +1      TEMP STORAGE
 1459            CAF    LOW6
 1460            MASK   VERBREG
 1461            TC     LEFT5
 1462            TS     CYL
 1463            XCH    CYL
 1464            AD     NOUNREG
 1465            TS     MPAC            TEMP STORAGE
 1466            CS     GRABLOCK        NEITHER CASE SEARCHES LIST.
 1467            AD     TWO
 1468            CCS    A
 1469            TC     RELDSP1         GRABLOCK=0,1. +0 INTO DSPLOCK AND
 1470            TC     +4              TURN OFF KEY RLSE LIGHT.
 1471            TC     CCSHOLE
 1472            CAF    ZERO            GRABLOCK=2. +0 INTO DSPLOCK AND
 1473            TS     DSPLOCK         LEAVE KEY RLSE LIGHT ALONE
 1474            INHINT
 1475            CCS    MONSAVE
 1476            TC     +5              IF MONSAVE WAS +, NO REQUEST
 1477            CAF    ONE             IF MONSAVE WAS 0, REQUEST MONREQ
 1478            TC     WAITLIST
 1479            EBANK= DSPCOUNT
 1480            2CADR  MONREQ
 1481            DXCH   MPAC            PLACE MONITOR VERB AND NOUN INTO MONSAVE
 1482            DXCH   MONSAVE         ZERO THE KILL MONITOR BIT
 1483            RELINT
 1484  4         TC     ENTRET
 1485   MONREQ   TC     LODSAMPT        CALLED BY WAITLIST
 1486            CCS    MONSAVE1        TIME IS SNATCHED IN RUPT FOR NOUN 65
 1487            TC     +4              IF KILLER BIT = 0, ENTER REQUESTS
 1488            TC     +3              IF KILLER BIT = 0, ENTER REQUESTS
 1489            TC     KILLMON         IF KILLER BIT = 1, NO REQUESTS
 1490            TC     KILLMON         IF KILLER BIT = 1, NO REQUESTS
 1491            CAF    MONDEL
 1492            TC     WAITLIST        ENTER WAITLIST REQUEST FOR MONREQ
 1493            EBANK= DSPCOUNT
 1494            2CADR  MONREQ
 1495            CAF    CHRPRIO
 1496            TC     NOVAC           ENTER EXEC REQUEST FOR MONDO
 1497            EBANK= DSPCOUNT
 1498            2CADR  MONDO
 1499  2         TC     TASKOVER
 1500   KILLMON  CAF    ZERO            ZERO MONSAVE AND TURN KILLER BIT OFF
 1501            TS     MONSAVE
 1502            TS     MONSAVE1        TURN OFF KILL MONITOR BIT.
 1503  4         TC     TASKOVER
 1504  4MONDEL   OCT    144             FOR 1 SEC MONITOR INTERVALS
 1505   MONDO    CCS    MONSAVE1        CALLED BY EXEC
 1506            TC     +4              IF KILLER BIT = 0, CONTINUE
 1507            TC     +3              IF KILLER BIT = 0, CONTINUE
 1508            TC     ENDOFJOB        IN CASE TERMINATE CAME SINCE LAST MONREQ
 1509            TC     ENDOFJOB        IN CASE TERMINATE CAME SINCE LAST MONREQ
 1510            CCS    DSPLOCK
 1511            TC     MONBUSY         NVSUB IS BUSY
 1512            CAF    LOW6            NVSUB IS AVAILABLE
 1513            MASK   MONSAVE
 1514            TS     NVTEMP
 1515            TC     NVSUBMON        PLACE NOUN INTO NOUNREG AND DISPLAY IT
 1516            TC     ENDOFJOB        IN CASE OF ALARM DURING DISPLAY
 1517            CAF    MONMASK
 1518            MASK   MONSAVE         CHANGE MONITOR VERB TO DISPLAY VERB
 1519            TC     RIGHT5
 1520            TS     CYR
 1521            XCH    CYR
 1522            TS     VERBREG
 1523            CAF    MONBACK         SET RETURN TO PASTEVB AFTER DATA DISPLAY
 1524            TS     ENTRET
 1525            CS     BIT15
 1526            MASK   MONSAVE1        PUT ECADR INTO MPAC +2. INTMCTBS WILL
 1527            TS     MPAC    +2      DISPLAY IT AND SET NOUNCADR, NOUNADD,
 1528  2ENDMONDO TC     TESTNN          EBANK.
 1529  2         SETLOC ENDRMODF
 1530   PASTEVB  CAF    MIDSIX
 1531            MASK   MONSAVE
 1532            TS     NVTEMP          PLACE MONITOR VERB INTO VERBREG AND
 1533            TC     NVSUBMON             DISPLAY IT.
 1534            TC     +1              IN CASE OF ALARM DURING DISPLAY
 1535  2ENDPASTE TC     ENDOFJOB
 1536  4MIDSIX   OCTAL  07700
 1537            SETLOC ENDMONDO +1
 1538   MONMASK  OCT    700
 1539  2MONBACK  ADRES  PASTEVB
 1540   MONBUSY  TC     RELDSPON        TURN KEY RELEASE LIGHT
 1541  4         TC     ENDOFJOB
R1542   DSPFMEM IS USED TO DISPLAY (IN OCTAL) ANY FIXED REGISTER.
R1543   IT IS USED WITH NOUN = MACHINE CADR TO BE SPECIFIED. THE FCADR OF THE
R1544  2DESIRED LOCATION IS THEN PUNCHED IN. IT HANDLES F/F ( FCADR 4000-7777)
 1545   DSPFMEM  CAF    R1D1            IF F/F, DATACALL USES BANK 02 OR 03.
 1546            TS     DSPCOUNT
 1547            CA     NOUNCADR        ORIGINAL FCADR LOADED STILL IN NOUNCADR.
 1548            TC     DATACALL
 1549            TC     DSPOCTWD
 1550            TC     ENDOFJOB
P1551    DSPDECWD CONVERTS C(MPAC) AND C(MPAC +1)TO A SIGN AND 5 CHAR DECIMAL
R1552  2STARTING IN LOC SPECIFIED IN DSPCOUNT
 1553  2         SETLOC TESTOFUF +4
 1554   DSPDECWD XCH    Q               USES SHORTMP THROUGHOUT
 1555            TS     WDRET           CANT USE L FOR RETURN.+ON USES L.
 1556            CCS    MPAC
 1557            TC     +7
 1558            TC     +6
 1559            AD     ONE
 1560            TS     MPAC
 1561            TC     -ON
 1562            CS     MPAC  +1
 1563            TC     +3
 1564            TC     +ON
 1565            XCH    MPAC    +1
 1566            AD     DECROUND
 1567            TS     MPAC    +1
 1568            CAF    ZERO
 1569            AD     MPAC
 1570            TS     MPAC
 1571            TC     +4
 1572            CAF    POSMAX
 1573            TS     MPAC
 1574            TS     MPAC    +1
 1575            CAF    FOUR
 1576   DSPDCWD1 TS     WDCNT
 1577            CAF    BINCON
 1578            TC     SHORTMP
 1579   TRACE1   INDEX  MPAC
 1580            CAF    RELTAB
 1581            MASK   LOW5
 1582            TS     CODE
 1583            CAF    ZERO
 1584            XCH    MPAC    +2
 1585            XCH    MPAC    +1
 1586            TS     MPAC
 1587            XCH    DSPCOUNT
 1588   TRACE1S  TS     COUNT
 1589            CCS    A               DECREMENT DSPCOUNT EXCEPT AT +0
 1590            TS     DSPCOUNT
 1591            TC     DSPIN
 1592            CCS    WDCNT
 1593            TC     DSPDCWD1
 1594            CS     VD1
 1595            TS     DSPCOUNT
 1596  2         TC     WDRET
 1597  2DECROUND OCT    02476
R1598   DSP2DEC CONVERTS C(MPAC) AND C(MPAC+1) INTO A SIGN AND 10 CHAR DECIMAL
R1599  2STARTING IN THE LOC SPECIFIED IN DSPCOUNT.
 1600   DSP2DEC  XCH    Q
 1601            TS     WDRET           MUST USE SAME RETURN AS DSPDECWD
 1602            CAF    ZERO
 1603            TS     CODE
 1604            CAF    THREE
 1605            TC     11DSPIN         -R2 OFF
 1606            CAF    FOUR
 1607            TC     11DSPIN         +R2 OFF
 1608            CCS    MPAC
 1609            TC     +8D
 1610            TC     +7
 1611            AD     ONE
 1612            TS     MPAC
 1613            TC     -ON
 1614            CS     MPAC  +1
 1615            TS     MPAC  +1
 1616            TC     +2
 1617            TC     +ON
 1618            CAF    R2D1
 1619  4END2DEC  TC     DSPDCWD1
 1620            SETLOC DSPFMEM +6
R1621   DSPOCTWD DISPLAYS C(A) UPON ENTRY AS A 5 CHAR OCT STARTING IN THE DSP
R1622  2CHAR SPECIFIED IN DSPCOUNT. IT STOPS AFTER 5 CHAR HAVE BEEN DISPLAYED.
 1623   DSPOCTWD TS     CYL
 1624            XCH    Q
 1625            TS     WDRET           MUST USE SAME RETURN AS DSP2BIT.
 1626            CAF    BIT14           TO BLANK SIGNS
 1627            ADS    DSPCOUNT
 1628            CAF    FOUR
 1629   WDAGAIN  TS     WDCNT
 1630            CS     CYL
 1631            CS     CYL
 1632            CS     CYL
 1633            CS     A
 1634            MASK   DSPMSK
 1635            INDEX  A
 1636            CAF    RELTAB
 1637            MASK   LOW5
 1638            TS     CODE
 1639            XCH    DSPCOUNT
 1640            TS     COUNT
 1641            CCS    A               DECREMENT DSPCOUNT EXCEPT AT +0
 1642            TS     DSPCOUNT
 1643            TC     POSTJUMP
 1644            CADR   DSPOCTIN
 1645   OCTBACK  CCS    WDCNT
 1646            TC     WDAGAIN         +
 1647   DSPLV    CS     VD1             TO BLOCK NUMERICAL CHARACTERS, CLEARS,
 1648            TS     DSPCOUNT        AND SIGNS AFTER A COMPLETED DISPLAY.
 1649  2         TC     WDRET
 1650  4DSPMSK   =      SEVEN
R1651   DSP2BIT DISPLAYS C(A) UPON ENTRY AS A 2 CHAR OCT BEGINNING IN THE DSP
R1652   LOC SPECIFIED IN DSPCOUNT BY PRE CYCLING RIGHT C(A) AND USING THE LOGIC
R1653  2OF THE 5 CHAR OCTAL DISPLAY
 1654   DSP2BIT  TS     CYR
 1655            XCH    Q
 1656            TS     WDRET           CANT USE L AS RETURN. UPDATNN USES L.
 1657            CAF    ONE
 1658            TS     WDCNT
 1659            CS     CYR
 1660            CS     CYR
 1661            XCH    CYR
 1662            TS     CYL
 1663  4         TC     WDAGAIN +5
R1664   FOR DSPIN PLACE 0/25 OCT INTO COUNT, 5 BIT RELAY CODE INTO CODE. BOTH
R1665   ARE DESTROYED. IF BIT14 OF COUNT IS 1, SIGN IS BLANKED WITH LEFT CHAR.
R1666   FOR DSPIN1 PLACE 0,1 INTO BIT11 OF CODE, 2 INTO COUNT, REL ADDRESS OF
R1667  2DSPTAB ENTRY INTO DSREL.
 1668  2         SETLOC END2DEC  +1
 1669   DSPIN    XCH    Q               CANT USE L FOR RETURN, SINCE MANY OF THE
 1670            TS     DSEXIT          ROUTINES CALLING DSPIN USE L AS RETURN.
 1671            CAF    LOW5
 1672            MASK   COUNT
 1673            TS     SR
 1674            XCH    SR
 1675            TS     DSREL
 1676            CAF    BIT1
 1677            MASK   COUNT
 1678            CCS    A
 1679            TC     +2              LEFT IF COUNT IS ODD
 1680            TC     DSPIN1  -1      RIGHT IF COUNT IS EVEN
 1681            XCH    CODE
 1682            TC     SLEFT5          DOES NOT USE CYL
 1683            TS     CODE
 1684            CAF    BIT14
 1685            MASK   COUNT
 1686            CCS    A
 1687            CAF    TWO             BIT14 = 1, BLANK SIGN
 1688            AD     ONE             BIT14 = 0, LEAVE SIGN ALONE
 1689            TS     COUNT           +0 INTO COUNT FOR RIGHT
A1690                                   +1 INTO COUNT FOR LEFT(SIGN LEFT ALONE)
A1691                                   +3 INTO COUNT FOR LEFT(TO BLANK SIGN)
 1692   DSPIN1   INHINT
 1693            INDEX  DSREL
 1694            CCS    DSPTAB
 1695            TC     +2              IF +
 1696            TC     CCSHOLE
 1697            AD     ONE             IF-
 1698            TS     DSMAG
 1699            INDEX  COUNT
 1700            MASK   DSMSK
 1701            EXTEND
 1702            SU     CODE
 1703            EXTEND
 1704            BZF    DSLV            SAME
 1705   DFRNT    INDEX  COUNT
 1706            CS     DSMSK           MASK WITH 77740,76037, OR 75777
 1707            MASK   DSMAG
 1708            AD     CODE
 1709            CS     A
 1710            INDEX  DSREL
 1711            XCH    DSPTAB
 1712            EXTEND
 1713            BZMF   DSLV            DSPTAB ENTRY WAS -
 1714            INCR   NOUT            DSPTAB ENTRY WAS +
 1715   DSLV     RELINT
 1716  2         TC     DSEXIT
 1717   DSMSK    OCT    37
 1718            OCT    1740
 1719            OCT    2000
 1720  4         OCT    3740
R1721   FOR 11DSPIN, PUT REL ADDRESSS OF DSPTAB ENTRY INTO A, 1 IN BIT11 OR 0 IN
R1722  2BIT11 OF CODE.
 1723   11DSPIN  TS     DSREL
 1724            CAF    TWO
 1725            TS     COUNT
 1726            XCH    Q               MUST USE SAME RETURN AS DSPIN
 1727            TS     DSEXIT
 1728  4         TC     DSPIN1
 1729   DSPOCTIN TC     DSPIN           SO DSPOCTWD DOESNT USE SWCALL
 1730            CAF    +2
 1731            TC     BANKJUMP
 1732  4ENDSPOCT CADR   OCTBACK
R1733   DSPALARM FINDS TC NVSUBEND IN ENTRET FOR NVSUB INITIATED ROUTINES.
R1734   ABORT WITH 01501.
R1735   DSPALARM FINDS TC ENDOFJOB IN ENTRET FOR KEYBOARD INITIATED ROUTINES.
R1736  2DO TC ENTRET.
 1737   CHARALRM CAF    ENDINST         ALARMS WHICH MUST DO ENDOFJOBS COME
 1738  2         TS     ENTRET          HERE. ALLOWS ENTRET TO BE TEMP ERASABLE
 1739   DSPALARM TC     FALTON          TURN ON OPERATOR ERROR LIGHT
 1740            CS     NVSBENDL
 1741            AD     ENTEXIT
 1742            EXTEND
 1743            BZF    +2              NVSUB INITIATED. ABORT
 1744            TC     ENTEXIT         NOT NVSUB INITIATED.
 1745            TC     ABORT
 1746            OCT    01501
 1747  4NVSBENDL TC     NVSUBEND
R1748   MMCHANG USES NOUN DISPLAY UNTIL ENTER. THEN IT USES MODE DISP.
R1749   IT GOES TO MODROUT WITH THE NEW M M CODE IN A, BUT NOT DISPLAYED IN
R1750  2M M LIGHTS.
 1751  2         SETLOC DSP2BIT  +10D
 1752   MMCHANG  TC     REQMM
 1753            CAF    ZERO
 1754            XCH    NOUNREG
 1755            TS     MPAC
 1756            CAF    ND1
 1757            TS     DSPCOUNT
 1758            TC     BANKCALL
 1759            CADR   2BLANK
 1760            CA     MPAC
 1761            TC     POSTJUMP
 1762  4         CADR   MODROUTB        GO THRU STANDARD LOC.
 1763   MODROUTB =      DSPALARM        **FIX LATER**
 1764   REQMM    CS     Q
 1765            TS     REQRET
 1766            CAF    ND1
 1767            TS     DSPCOUNT
 1768            CAF    ZERO
 1769            TS     NOUNREG
 1770            TC     BANKCALL
 1771            CADR   2BLANK
 1772            TC     FLASHON
 1773  4         TC     ENTEXIT
R1774   VBRQEXEC ENTERS REQUEST TO EXEC     FOR ANY ADDRESS WITH ANY PRIORITY.
R1775   IT DOES ENDOFJOB AFTER ENTERING REQUEST. DISPLAY SYST IS RELEASED.
R1776   IT ASSUMES NOUN 26 HAS BEEN PRELOADED WITH
R1777   COMPONENT 1  PRIORITY(BITS 10-14) BIT1=0 FOR NOVAC, BIT1=1 FOR FINDVAC.
R1778   COMPONENT 2  JOB ADRES (12 BIT )
R1779  2COMPONENT 3  BBCON
 1780   VBRQEXEC CAF    BIT1
 1781            MASK   DSPTEM1
 1782            CCS    A
 1783            TC     SETVAC          IF BIT1 = 1, FINDVAC
 1784            CAF    TCNOVAC         IF BIT1 = 0, NOVAC
 1785   REQEX1   TS     MPAC            TC NOVAC  OR  TC FINDVAC INTO MPAC
 1786            CS     BIT1
 1787            MASK   DSPTEM1
 1788            TS     MPAC    +4      PRIO INTO MPAC+4 AS A TEMP
 1789   REQUESTC TC     RELDSP
 1790            CA     ENDINST
 1791            TS     MPAC    +3      TC ENDOFJOB INTO MPAC+3
 1792            EXTEND
 1793            DCA    DSPTEM1 +1      JOB ADRES INTO MPAC+1
 1794            DXCH   MPAC    +1      BBCON INTO MPAC+2
 1795            CA     MPAC    +4      PRIO IN A
 1796            INHINT
 1797  2         TC     MPAC
 1798   SETVAC   CAF    TCFINDVC
 1799  2         TC     REQEX1
R1800   VBRQWAIT ENTERS REQUEST TO WAITLIST FOR ANY ADDRESS WITH ANY DELAY.
R1801   IT DOES ENDOFJOB AFTER ENTERING REQUEST.DISPLAY SYST IS RELEASED.
R1802   IT ASSUMES NOUN 26 HAS BEEN PRELOADED WITH
R1803   COMPONENT 1  DELAY (LOW BITS)
R1804   COMPONENT 2  TASK ADRES (12 BIT)
R1805  2COMPONENT 3  BBCON
 1806   VBRQWAIT CAF    TCWAIT
 1807            TS     MPAC            TC WAITLIST INTO MPAC
 1808            CA     DSPTEM1         TIME DELAY
 1809  2ENDRQWT  TC     REQUESTC -1
R1810   REQUESTC WILL PUT TASK ADRES INTO MPAC+1, BBCON INTO MPAC+2,
R1811   TC ENDOFJOB INTO MPAC+3. IT WILL TAKE TIME DELAY OUT OF MPAC+4 AND
R1812  4LEAVE IT IN A, INHINT AND TC MPAC.
 1813            SETLOC NVSBENDL +1
 1814   VBPROC   CAF    ONE             PROCEED WITHOUT DATA
 1815            TS     LOADSTAT
 1816            TC     RELDSP
 1817            TC     FLASHOFF
 1818  4         TC     RECALTST        SEE IF THERE IS ANY RECALL FROM ENDIDLE
 1819   VBTERM   TC     KILMONON        TURN ON KILL MONITOR BIT
 1820            CS     ONE
 1821  4         TC     VBPROC  +1      TERM VERB SETS LOADSTAT NEG
R1822  4FLASH IS TURNED OFF ONLY BY PROCEED WITHOUT DATA, TERMINATE, END OF LOAD
R1823   VBRELDSP TURNS OFF RELEASE DISPLAY SYSTEM LIGHT(AND SEARCHES LIST ONLY
R1824  2IF THIS LIGHT WAS TURNED ON BY NVSUBUSY), AND TURNS OFF UPACT LIGHT.
 1825   VBRELDSP CS     BIT3
 1826            EXTEND
 1827            WAND   DSALMOUT        TURN OFF UPACT LIGHT
 1828            TC     RELDSP          SEARCHES LIST
 1829  4         TC     ENDOFJOB
R1830  2BUMP SHIFTS WORD DISPLAYED IN R2 TO R3, R1 TO R2. IT BLANKS R1.
 1831   BUMP     CAF    FIVE            R2D5
 1832            TS     DSPCOUNT
 1833            TS     COUNT
 1834            CAF    ONE             SHIFT DATA OF R2 TO R3, R1 TO R2
 1835            MASK   COUNT
 1836            XCH    COUNT           +0 INTO COUNT IF EVEN (RIGHT)
 1837            TS     SR              +1 INTO COUNT IF ODD (LEFT)
 1838            XCH    SR              DSREL IN A
 1839            INDEX  A
 1840            CCS    DSPTAB
 1841            TC     +2
 1842            TC     CCSHOLE
 1843            AD     ONE             DSMAG IN A
 1844            INDEX  COUNT
 1845            MASK   DSMSK
 1846            INDEX  COUNT
 1847            TC     +1
 1848            TC     +2              EVEN(RIGHT)  OK
 1849            TC     RIGHT5          ODD(LEFT)  SHIFT RIGHT
 1850            TS     CODE
 1851            CS     FIVE
 1852            AD     DSPCOUNT        DSPCOUNT-5
 1853            CCS    A               TO PREVENT -0
 1854            AD     ONE
 1855            TC     +2
 1856            TC     CCSHOLE
 1857            TS     COUNT
 1858            TC     DSPIN           CODE ALREADY IN CODE
 1859            CS     DSPCOUNT
 1860            AD     R1D1            OCT 16
 1861            CCS    A
 1862            XCH    DSPCOUNT        +, DSPCOUNT L/ OCT 16
 1863            AD     ONE             INCREMENT DSPCOUNT
 1864  2         TC     BUMP    +1
 1865   SWSGN    CAF    ZERO            -0, DSPCOUNT= OCT 16. DO SIGN SHIFT
 1866            TS     DSPCOUNT
 1867            AD     SWTAB   +2      OCT 3
 1868            INDEX  A               PICKUP ORDER , DSREL=3,4,5,6.
 1869            CCS    DSPTAB                           (-R2,+R2,-R1,+R1)
 1870            TC     +2
 1871            TC     CCSHOLE
 1872            AD     ONE
 1873            MASK   BIT11
 1874            TS     CODE
 1875            INDEX  DSPCOUNT
 1876            CAF    SWTAB           PUT AWAY ORDER, DSREL= 0,1,3,4.
 1877            TC     11DSPIN                          (-R3,+R3,-R2,+R2.)
 1878            CS     DSPCOUNT
 1879            AD     SWTAB   +2      OCT 3
 1880            CCS    A
 1881            XCH    DSPCOUNT        +, DSPCOUNT L/ 3
 1882            AD     ONE             INCREMENT DSPCOUNT
 1883            TC     SWSGN   +1
 1884            CAF    R1D1            -0,       DSPCOUNT = 3
 1885            TS     DSPCOUNT
 1886            TC     5BLANK          BLANKS R1
 1887  2         TC     ENTEXIT
 1888   SWTAB    OCT    0               -R3
 1889            OCT    1               +R3
 1890            OCT    3               -R2
 1891            OCT    4               +R2
P1892   NVSUB IS USED FOR SUB ROUTINE CALLS FROM WITHIN COMPUTER. IT CAN BE
R1893   USED TO DO ANY THING THE KEYBOARD CAN CALL. PLACE  ...VVVVVVNNNNNN
R1894  2INTO A.      V-S ARE 6 BIT VERB CODE. N-S , 6 BIT NOUN CODE.
R1895   NVSUB CAN BE USED WITH MACH CADR TO BE SPEC BY PLACING THE CADR INTO
R1896  2MPAC+2 BEFORE THE STANDARD NVSUB CALL.
R1897    NVSUB RETURNS TO 2+ CALLING LOC AFTER PERFORMING TASK, IF DISPLAY
R1898   SYSTEM IS AVAILABLE. THE NEW NOUN AND VERB CODES ARE DISPLAYED.
R1899   IF V:S =0, THE NEW NOUN CODE IS DISPLAYED ONLY(RETURN WITH NO FURTHER
R1900   ACTION). IF N-S =0, THE NEW VERB CODE IS DISPLAYED ONLY(RETURN WITH NO
R1901  2FURTHER ACTION).
R1902   IT RETURNS TO 1+ CALLING LOC WITHOUT PERFORMING TASK, IF DISPLAY
R1903   SYSTEM IS BLOCKED (NOTHING IS DISPLAYED IN THIS CASE).
R1904   IT DOES TC ABORT (WITH OCT 01501) IF IT ENCOUNTERS A DISPLAY PROGRAM
R1905  2ALARM CONDITION BEFORE RETURN TO CALLER.
R1906   THE DISPLAY SYSTEM IS BLOCKED BY THE DEPRESSION OF ANY
R1907   KEY, EXCEPT ERROR LIGHT RESET. ALSO BY ENDIDLE.
R1908        IT IS RELEASED BY SPECIAL VERB = RELEASE DISPLAY, ALL GO TO VERBS,
R1909   PROCEED WITHOUT DATA, TERMINATE, INITIALIZE EXECUTIVE,
R1910   RECALL PART OF RECALTST IF ENDIDLE WAS USED,
R1911   IN RECALTST IF NVSUB INITIATED LOAD AND ENDIDLE WAS NOT USED,
R1912   VB = REQUEST EXECUTIVE, VB = REQUEST WAITLIST,
R1913  2MONITOR SET UP.
R1914  2A NVSUB CALL THAT PASSES DSPLOCK ENDS OLD MONITOR.
R1915   DSPLOCK IS THE INTERLOCK FOR USE OF KEYBOARD AND DISPLAY SYSTEM WHICH
R1916  2LOCKS OUT INTERNAL USE WHENEVER THERE IS EXTERNAL KEYBOARD ACTION.
R1917   NVSUB IN FIXED-FIXED PLACES 2+CALLING LOC INTO NVQTEM, TC NVSUBEND INTO
R1918  2ENTRET. (THIS WILL RESTORE OLD CALLING BANK BITS)
 1919            SETLOC MIDSIX  +1
 1920   NVSUB    TS     NVTEMP          IN FIXED FIXED
 1921            CCS    DSPLOCK
 1922            TC     Q               DSP SYST BLOCKED. RET TO 1+ CALLING LOC
 1923            CA     Q               DSP SYST AVAILABLE
 1924            AD     ONE
 1925            TS     NVQTEM          2 + CALLING LOC INTO NVQTEM
 1926            TC     KILMONON        TURN ON KILL MONITOR BIT
 1927  2NVSUBCOM CAF    NVSBBBNK
 1928            XCH    BBANK
 1929            TS     NVBNKTEM
 1930            TC     NVSUBB          GO TO NVSUB1 THRU STANDARD LOC
 1931            EBANK= DSPCOUNT
 1932  2NVSBBBNK BBCON  NVSUB1
 1933   NVSUBMON CA     Q               MONDO COMES HERE
 1934            AD     ONE
 1935            TS     NVQTEM          2 + CALLING LOC INTO NVQTEM
 1936  4         TC     NVSUBCOM
 1937   NVSUBEND DXCH   NVQTEM          NVBNKTEM MUST = NVQTEM+1
 1938  2         DXCH   Z               DTCB
 1939  2         SETLOC ENDRQWT +1
 1940   NVSUB1   CAF    ENTSET          IN BANK
 1941            TS     ENTRET          SET RETURN TO NVSUBEND
 1942            CAF    LOW6
 1943            MASK   NVTEMP
 1944            TS     MPAC            TEMP STORAGE
 1945            CAF    MID6
 1946            MASK   NVTEMP
 1947            TC     RIGHT5
 1948            TS     CYR
 1949            XCH    CYR
 1950            TS     MPAC    +1      TEMP STORAGE
 1951            CCS    MPAC            TEST NOUN
 1952            TC     +4              IF NOUN NOT +0, GO ON
 1953            XCH    MPAC    +1
 1954            TC     UPDATVB -1      IF NOUN = +0, DISPLAY VERB . THEN RETURN
 1955   ENTSET   TC     NVSUBEND
 1956            CCS    MPAC    +1      TEST VERB
 1957            TC     +4              IF VERB NOT +0, GO ON
 1958            XCH    MPAC
 1959            TC     UPDATNN -1      IF VERB = +0, DISPLAY NOUN. THEN RETURN
 1960            TC     NVSUBEND
 1961            XCH    MPAC    +1
 1962            TC     UPDATVB -1      IF BOTH NOUN AND VERB NOT +0, DISPLAY
 1963            XCH    MPAC            BOTH AND GO TO ENTPAS0
 1964            TC     UPDATNN -1
 1965            CAF    ZERO
 1966            TS     LOADSTAT        SET FOR WAITING FOR DATA CONDITION
 1967            TS     CLPASS
 1968  2         TC     ENTPAS0
R1969   IF INTERNAL MACH CADR TO BE SPECIFIED, MPAC+2 WILL BE PLACED INTO
R1970  4NOUNCADR IN ENTPAS0 (INTMCTBS ).
 1971   LOW6     OCT    77
 1972  2MID6     OCT    7700
 1973            SETLOC NVSUBEND +2
 1974   KILMONON CS     BIT15           FORCE BIT 15 OF MONSAVE1 TO 1.
 1975            INHINT                         THIS IS THE KILL MONITOR BIT.
 1976            MASK   MONSAVE1
 1977            AD     BIT15
 1978            TS     MONSAVE1
 1979            RELINT
 1980  4         TC     Q
R1981   LOADSTAT  +0 INACTIVE(WAITING FOR DATA). SET BY NVSUB
R1982             +1  PROCEED NO DATA. SET BY SPECIAL VERB
R1983            -1 TERMINATE   SET BY SPECIAL VERB
R1984  4         -0 DATA IN   SET BY END OF LOAD ROUTINE
R1985   L  TC ENDIDLE  (FIXED FIXED)
R1986   ROUTINES THAT REQUEST LOADS THROUGH NVSUB SHOULD USE ENDIDLE WHILE
R1987   WAITING FOR THE DATA TO BE LOADED. ENDIDLE PUTS CURRENT JOB TO SLEEP.
R1988   ENDIDLE CANNOT BE CALLED FROM ERASABLE MEMORY, SINCE JOBSLEEP AND
R1989   JOBWAKE CAN HANDLE ONLY FIXED MEMORY.
R1990   RECALTST TESTS LOADSTAT AND WAKES JOB UP TO,
R1991   L+1      FOR TERMINATE
R1992   L+2      FOR PROCEED WITHOUT DATA
R1993   L+3      FOR DATA IN
R1994  2IT DOES NOTHING     IF LOADSTAT INDICATES WAITING FOR DATA.
 1995   ENDIDLE  CAF    ONE
 1996            TS     DSPLOCK
 1997            LXCH   FBANK
 1998            XCH    Q
 1999            DXCH   BUF2
 2000            TC     MAKECADR
 2001            TS     CADRSTOR
 2002  4         TC     JOBSLEEP
 2003  2ENDINST  TC     ENDOFJOB
R2004   DATAWAIT IS AN ALTERNATIVE TO ENDIDLE. IT RETURNS IMMEDIATELY IF
R2005   LOADSTAT INDICATES THAT DATA IS ALREADY IN, OR PROCEED OR TERMINATE HAS
R2006   BEEN EXECUTED. RETURN FORMAT IS SAME AS FOR ENDIDLE.
R2007   DATAWAIT CANNOT BE CALLED FROM ERASABLE MEMORY, SINCE JOBSLEEP
R2008   AND JOBWAKE CAN HANDLE ONLY FIXED MEMORY.
R2009  2DATAWAIT SHOULD BE USED ONLY AFTER REQUESTING A LOAD VERB.
 2010   DATAWAIT CCS    LOADSTAT
 2011            TCF    DATWAIT1        PROCEED. RETURN TO L+2.
 2012            TCF    ENDIDLE         STILL WAITING. GO TO SLEEP.
 2013            TC     Q               TERMINATE. RETURN TO L+1.
 2014            INDEX  Q               DATA IN. RETURN TO L+3.
 2015            TC     2
 2016   DATWAIT1 INDEX  Q               RETURN TO L+2.
 2017  2         TC     1
R2018   DATAWAIT DOES NOT RELEASE DISPLAY SYST. IT IS RELEASED AT END OF NVSUB
R2019  4INITIATED LOAD, IF ENDIDLE WAS NOT USED.
 2020            SETLOC MID6  +1
R2021  2DSPMM  PLACE MAJOR MODE CODE INTO MODREG
 2022   DSPMM1   CAF    MD1             GETS HERE THRU DSPMM (STANDARD LEAD IN)
 2023            XCH    DSPCOUNT
 2024            TS     DSPMMTEM        SAVE DSPCOUNT
 2025            CA     MODREG
 2026            LXCH   Q
 2027            TC     DSP2BIT
 2028            XCH    DSPMMTEM        RESTORE DSPCOUNT
 2029            TS     DSPCOUNT
 2030  4DSPMMEND TC     L
R2031   RECALTST IS ENTERED DIRECTLY AFTER DATA IS
R2032   LOADED, TERMINATE VERB IS EXECUTED, OR THE PROCEED WITHOUT DATA VERB IS
R2033  2EXECUTED. IT WAKES UP JOB THAT DID TC ENDIDLE.
R2034   IF NVSUB INITIATED LOAD, AND ENDIDLE WAS NOT USED, THEN IT RELEASES
R2035  2DISPLAY SYST. (NEEDED FOR DATAWAIT)
 2036  2         SETLOC SWTAB  +4
 2037   RECALTST CCS    CADRSTOR
 2038            TC     RECAL1
 2039            TC     ENDOFJOB        NORMAL EXIT IF KEYBOARD INITIATED
 2040            TC     RECAL1
 2041            TS     CADRSTOR        -0. CONCLUSION OF NVSUB INITIATED LOAD.
 2042            TC     RECAL3          +0 INTO CADRSTOR, RELEASE DISPLAY,
A2043                                      AND ENDOFJOB. NEEDED FOR DATAWAIT.
 2044   RECAL1   CAF    ZERO
 2045            XCH    CADRSTOR
 2046            INHINT
 2047            TC     JOBWAKE
 2048            CCS    LOADSTAT
 2049            TC     DOPROC          + PROCEED WITHOUT DATA
 2050            TC     ENDOFJOB        PATHALOGICAL CASE EXIT
 2051            TC     DOTERM          -   TERMINATE
 2052            CAF    TWO
 2053   RECAL2   INDEX  LOCCTR
 2054            AD     LOC             LOC IS + FOR BASIC JOBS
 2055            INDEX  LOCCTR
 2056            TS     LOC
 2057            RELINT
 2058   RECAL3   TC     RELDSP1         DOES NOT SEARCH LIST
 2059  2         TC     ENDOFJOB
 2060   DOTERM   CAF    ZERO
 2061  2         TC     RECAL2
 2062   DOPROC   CAF    ONE
 2063            TC     RECAL2
P2064  4THE FOLLOWING REFERS TO THE NOUN TABLES
R2065  2COMPONENT CODE NUMBER           INTERPRETATION
R2066   00000                           1 COMPONENT
R2067   00001                           2 COMPONENT (EACH S P)
R2068  400010                           3 COMPONENT (EACH SP)
R2069  2SF ROUTINE CODE NUMBER          INTERPRETATION
R2070   00000    OCTAL ONLY
R2071   00001    STRAIGHT FRACTIONAL
R2072   00010    DEGREES (XXX.XX)
R2073   00011    ARITHMETIC SF
R2074   00100    ARITH DP1   OUT(MULT BY 2/14 AT END)      IN(STRAIGHT)
R2075   00101    ARITH DP2   OUT(STRAIGHT)                 IN(SL 7 AT END)
R2076   00110    OPTICS DEGREES(XX.XXX MAX 89.999) OR (XXX.XX MAX 179.99)
R2077   00111    ARITH DP3   OUT ( SL 7 AT END)       IN ( STRAIGHT)
R2078  4END OF SF ROUTINE CODE NUMBERS
R2079  2SF CONSTANT CODE NUMBER         INTERPRETATION
R2080   00000                           WHOLE
R2081   00000                           TIME SEC(XXX.XX)SAME AS WHOLE(ARITH DP1)
R2082   00001                           TIME HOURS(XXX.XX) USE ARITH DP2
R2083   00010                           DEGREES
R2084   00010                           OPTICS DEGREES
R2085   00011                           GYRO DEGREES (XX.XXX)  USE ARITHDP3
R2086   00100                           GYRO BIAS DRIFT .BBXXXXX MILLIRAD/SEC
R2087   00101                           GYRO AXIS ACCEL. DRIFT
R2088                                   .BBXXXXX (MILLIRAD/SEC) / (CM/SEC SEC)
R2089   00110                           PIPA BIAS X.XXXX CM/SEC SEC
R2090   00111                           PIPA SCALE FACTOR ERROR
R2091                                       XXXXX. PARTS/MILLION
R2092   01000                           POSITION(XXXX.X KILOMETERS) USE ARITHDP3
R2093   01001                           VELOCITY(XXXX.X METERS/SEC) USE ARITHDP2
R2094   01010                           TIME HOURS(XXX.XX)WEEKS INSIDE(ARITHDP2)
R2095   01011                           ELEVATION DEGREES(89.999MAX) USE ARITH
R2096   01100                           RENDEZVOUS RADAR RANGE(XXXXXB.FEET)
R2097                                                               USE ARITHDP1
R2098   01101                           RENDEZVOUS RADAR RANGE RATE(XXXXX.FT/SEC
R2099                                                               USE ARITHDP1
R2100   01110                           LANDING RADAR ALTITUDE(XXXXX.FEET)
R2101                                                               USE ARITHDP1
R2102   01111                           INITIAL/FINAL ALTITUDE(XXXXX.FEET)
R2103                                                               USE ARITHDP1
R2104   10000                           ALTITUDE RATE(XXXXX.FEET)      USE ARITH
R2105   10001                           FORWARD/LATERAL VELOCITY(XXXXX.FEET/SEC)
R2106                                                                  USE ARITH
R2107   10010                           ROTATIONAL HAND CONTROLLER ANGLE RATES
R2108                                         XXXXX.DEG/SEC            USE ARITH
R2109   10011                           LANDING RADAR VELX(XXXXX.FEET/SEC)
R2110                                                               USE ARITHDP1
R2111   10100                           LANDING RADAR VELY(XXXXX.FEET/SEC)
R2112                                                               USE ARITHDP1
R2113   10101                           LANDING RADAR VELZ(XXXXX.FEET/SEC)
R2114                                                               USE ARITHDP1
R2115   10110                           OPTICAL TRACKER AZIMUTH ANGLE(XXX.XXDEG)
R2116                                                               USE ARITHDP1
R2117  4END OF SF CONSTANT CODE NUMBERS
R2118   FOR GREATER THAN SINGLE PRECISION SCALES, PUT ADDRESS OF MAJOR PART INTO
R2119   NOUN TABLES.
R2120   OCTAL LOADS PLACE +0 INTO MAJOR PART, DATA INTO MINOR PART.
R2121   OCTAL DISPLAYS SHOW MINOR PART ONLY.
R2122   TO GET AT BOTH MAJOR AND MINOR PARTS (IN OCTAL), USE NOUN 01.
P2123   THE FOLLOWING ROUTINES ARE FOR READING THE NOUN TABLES AND THE SF TABLES
R2124   (WHICH ARE IN A SEPARATE BANK FROM THE REST OF PINBALL). THESE READING
R2125  4ROUTINES ARE IN THE SAME BANK AS THE TABLES. THEY ARE CALLED BY DXCH Z.
R2126   LODNNTAB LOADS NNADTEM WITH THE NNADTAB ENTRY, NNTYPTEM WITH THE
R2127   NNTYPTAB ENTRY. IF THE NOUN IS MIXED, IDAD1TEM IS LOADED WITH THE FIRST
R2128   IDADDTAB ENTRY, IDAD2TEM THE SECOND IDADDTAB ENTRY, IDAD3TEM THE THIRD
R2129   IDADDTAB ENTRY, RUTMXTEM WITH THE RUTMXTAB ENTRY. MIXBR IS SET FOR
R2130  2MIXED OR NORMAL NOUN.
 2131  2         BANK   16
 2132   LODNNTAB DXCH   IDAD2TEM        SAVE RETURN INFO IN IDAD2TEM, IDAD3TEM.
 2133            INDEX  NOUNREG
 2134            CAF    NNADTAB
 2135            TS     NNADTEM
 2136            INDEX  NOUNREG
 2137            CAF    NNTYPTAB
 2138            TS     NNTYPTEM
 2139            CS     NOUNREG
 2140            AD     MIXCON
 2141            EXTEND
 2142            BZMF   LODMIXNN        NOUN NUMBER G/E FIRST MIXED NOUN
 2143            CAF    ONE             NOUN NUMBER L/ FIRST MIXED NOUN
 2144            TS     MIXBR           NORMAL.  +1 INTO MIXBR.
 2145            TC     LODNLV
 2146   LODMIXNN CAF    TWO             MIXED.  +2 INTO MIXBR.
 2147            TS     MIXBR
 2148            INDEX  NOUNREG
 2149            CAF    RUTMXTAB -55
 2150            TS     RUTMXTEM
 2151            CAF    LOW10
 2152            MASK   NNADTEM
 2153            TS     Q               TEMP
 2154            INDEX  A
 2155            CAF    IDADDTAB
 2156            TS     IDAD1TEM        LOAD IDAD1TEM WITH FIRST IDADDTAB ENTRY
 2157            EXTEND
 2158            INDEX  Q               LOAD IDAD2TEM WITH 2ND IDADDTAB ENTRY
 2159            DCA    IDADDTAB +1     LOAD IDAD3TEM WITH 3RD IDADDTAB ENTRY.
 2160   LODNLV   DXCH   IDAD2TEM        PUT RETURN INFO INTO A, L.
 2161  2         DXCH   Z
 2162  4MIXCON   OCT    55              FIRST MIXED NOUN = 55.
R2163  2GTSFOUT LOADS SFTEMP1, SFTEMP2 WITH THE DP SFOUTAB ENTRIES.
 2164   GTSFOUT  DXCH   SFTEMP1         2X(SFCONUM) ARRIVES IN SFTEMP1.
 2165            EXTEND
 2166            INDEX  A
 2167            DCA    SFOUTAB
 2168   SFCOM    DXCH   SFTEMP1
 2169  4         DXCH   Z
R2170  2GTSFIN LOADS SFTEMP1, SFTEMP2 WITH THE DP SFINTAB ENTRIES.
 2171   GTSFIN   DXCH   SFTEMP1         2X(SFCONUM) ARRIVES IN SFTEMP1.
 2172            EXTEND
 2173            INDEX  A
 2174            DCA    SFINTAB
 2175  4         TCF    SFCOM
A2176                                   NN  NORMAL NOUNS
 2177   NNADTAB  OCT    00000           00 NOT IN USE
 2178            OCT    40000           01 SPECIFY MACHINE ADDRESS (FRACTIONAL)
 2179            OCT    40000           02 SPECIFY MACHINE ADDRESS (WHOLE)
 2180            OCT    40000           03 SPECIFY MACHINE ADDRESS (DEGREES)
 2181            OCT    40000           04 SPECIFY MACHINE ADDRESS (HOURS)
 2182            OCT    40000           05 SPECIFY MACHINE ADDRESS (SECONDS)
 2183            OCT    40000           06 SPECIFY MACHINE ADDRESS (GYRO DEG)
 2184            OCT    00000           07 SPARE
 2185            OCT    77776           10 CHANNEL TO BE SPECIFIED
 2186            OCT    00000           11 SPARE
 2187            OCT    00000           12 SPARE
 2188            OCT    00000           13 SPARE
 2189            OCT    00000           14 SPARE
 2190            OCT    77777           15 INCREMENT MACHINE ADDRESS
 2191            ECADR  TIME2           16 TIME SECONDS
 2192            ECADR  TIME2           17 TIME HOURS
 2193            ECADR  CDUX            20 ICDU
 2194            ECADR  PIPAX           21 PIPAS
 2195            ECADR  THETAD          22 NEW ANGLES I
 2196            ECADR  DSPTEM2         23 DELTA ANGLES I
 2197            ECADR  DSPTEM1         24 DELTA TIME (SEC)
 2198            ECADR  DSPTEM1         25 CHECKLIST
 2199            ECADR  DSPTEM1         26 PRIO/DELAY, ADRES, BBCON
 2200            ECADR  SMODE           27 SELF TEST ON/OFF SWITCH
 2201            ECADR  DSPTEM1         30 STAR NUMBERS
 2202            ECADR  FAILREG         31 FAILREG
 2203            ECADR  TDEC            32 DECISION TIME (MIDCOURSE)
 2204            ECADR  TET             33 EPHEMERIS TIME (MIDCOURSE)
 2205            ECADR  MEASQ           34 MEASURED QUANTITY (MIDCOURSE)
 2206            ECADR  DSPTEM1         35 INBIT MESSAGE
 2207            ECADR  LANDMARK        36 LANDMARK DATA 1
 2208            ECADR  LANDMARK +3     37 LANDMARK DATA 2
 2209            ECADR  OPTY            40 RENDEZVOUS RADAR ANGLES (TRUN, SHAFT)
 2210            ECADR  TANG            41 NEW REND. RADAR ANGLES (TRUN, SHAFT)
 2211            ECADR  DSPTEM2         42 AOT ROTATION ANGLES
 2212            ECADR  XYMARK          43 AOT DETENT CODE
 2213            ECADR  FORVEL          44 FORWARD VELOCITY, LATERAL VELOCITY
 2214            ECADR  PCOM            45 ROTATIONAL HAND CONTROLLER ANGLE RATE
 2215            OCT    00000           46 SPARE
 2216            OCT    00000           47 SPARE
 2217            OCT    00000           50 SPARE
 2218            OCT    00000           51 SPARE
 2219            ECADR  GBIASX          52 GYRO BIAS DRIFT
 2220            ECADR  ADIAX           53 GYRO INPUT AXIS ACCELERATION DRIFT
 2221  2         ECADR  ADSRAX          54 GYRO SPIN AXIS ACCELERATION DRIFT
A2222                                   NN  MIXED NOUNS
 2223            OCT    02000           55 LANDING RADAR ALTITUDE, TIME(SEC)
 2224            OCT    02002           56 LANDING RADAR VELX, TIME(SEC)
 2225            OCT    02004           57 LANDING RADAR VELY, TIME(SEC)
 2226            OCT    02006           60 LANDING RADAR VELZ, TIME(SEC)
 2227            OCT    02010           61 TARGET AZIMUTH AND ELEVATION
 2228            OCT    04012           62 RENDEZVOUS RADAR RANGE, TRUN, SHAFT
 2229            OCT    04015           63 REND. RADAR RANGE RATE, TRUN, SHAFT
 2230            OCT    04020           64 INITIAL ALT, FINAL ALT, ALT RATE
 2231            OCT    02023           65 SAMPLED TIME (HOURS AND SECONDS)
A2232                                        (FETCHED IN INTERRUPT)
 2233            OCT    04025           66 SYSTEM TEST RESULTS
 2234            OCT    04030           67 DELTA GYRO ANGLES
 2235            OCT    02033           70 OPTICAL TRACKER ANGLES (AZIMUTH,ELEV)
 2236            OCT    02035           71 DESIRED OPT. TRACK. ANGLES (AZ, ELEV)
 2237            OCT    04037           72 DELTA POSITION
 2238            OCT    04042           73 DELTA VELOCITY
 2239            OCT    04045           74 MEASUREMENT DATA (MIDCOURSE)
 2240            OCT    04050           75 MEASUREMENT DEVIATIONS (MIDCOURSE)
 2241            OCT    04053           76 POSITION VECTOR
 2242  4         OCT    04056           77 VELOCITY VECTOR
A2243                                   NN        NORMAL NOUNS
 2244   NNTYPTAB OCT    00000           00 NOT IN USE
 2245            OCT    00040           01 1COMP  FRACTIONAL
 2246            OCT    00140           02 1COMP  WHOLE
 2247            OCT    00102           03 1COMP  DEGREES
 2248            OCT    00241           04 1COMP  HOURS
 2249            OCT    00200           05 1COMP  SECONDS
 2250            OCT    00343           06 1COMP  GYRO DEGREES
 2251            OCT    00000           07        SPARE
 2252            OCT    00000           10 1COMP  OCTAL ONLY
 2253            OCT    00000           11        SPARE
 2254            OCT    00000           12        SPARE
 2255            OCT    00000           13        SPARE
 2256            OCT    00000           14        SPARE
 2257            OCT    00000           15 1COMP  OCTAL ONLY
 2258            OCT    00200           16 1COMP  SECONDS
 2259            OCT    00241           17 1COMP  HOURS
 2260            OCT    04102           20 3COMP  DEGREES
 2261            OCT    04140           21 3COMP  WHOLE
 2262            OCT    04102           22 3COMP  DEGREES
 2263            OCT    04102           23 3COMP  DEGREES
 2264            OCT    00200           24 1COMP  SECONDS
 2265            OCT    00140           25 1COMP  WHOLE
 2266            OCT    04000           26 3COMP  OCTAL ONLY
 2267            OCT    00140           27 1COMP  WHOLE
 2268            OCT    04140           30 3COMP  WHOLE
 2269            OCT    04000           31 3COMP  OCTAL ONLY
 2270            OCT    00252           32 1COMP  TIME WEEKS
 2271            OCT    00252           33 1COMP  TIME WEEKS
 2272            OCT    00350           34 1COMP  POSITION
 2273            OCT    04000           35 3COMP  OCTAL ONLY
 2274            OCT    04000           36 3COMP  OCTAL ONLY
 2275            OCT    04000           37 3COMP  OCTAL ONLY
 2276            OCT    02102           40 2COMP  DEGREES
 2277            OCT    02102           41 2COMP  DEGREES
 2278            OCT    02102           42 2COMP  DEGREES
 2279            OCT    00140           43 1COMP  WHOLE
 2280            OCT    02161           44 2COMP  FORWARD/LATERAL VELOCITY
 2281            OCT    04162           45 3COMP  ROT HAND CONT ANGLE RATE
 2282            OCT    00000           46        SPARE
 2283            OCT    00000           47        SPARE
 2284            OCT    00000           50        SPARE
 2285            OCT    00000           51        SPARE
 2286            OCT    04144           52 3COMP  GYRO BIAS DRIFT
 2287            OCT    04145           53 3COMP  GYRO AXIS ACCEL. DRIFT
 2288  2         OCT    04145           54 3COMP  GYRO AXIS ACCEL. DRIFT
A2289                                   NN        MIXED NOUNS
 2290            OCT    00016           55 2COMP  LANDING RADAR ALT, SECONDS
 2291            OCT    00023           56 2COMP  LANDING RADAR VELX, SECONDS
 2292            OCT    00024           57 2COMP  LANDING RADAR VELY, SECONDS
 2293            OCT    00025           60 2COMP  LANDING RADAR VELZ, SECONDS
 2294            OCT    00542           61 2COMP  DEGREES, ELEVATION DEGREES
 2295            OCT    04114           62 3COMP  REND. RADAR RANGE, DEG, DEG
 2296            OCT    04115           63 3COMP  REND. RAD. RANGE RATE, DEG,DEG
 2297            OCT    40757           64 3COMP  IN/FN ALT, IN/FN ALT, ALT RATE
 2298            OCT    00001           65 2COMP  HOURS, SECONDS
 2299            OCT    00000           66 3COMP  WHOLE, FRACTIONAL, WHOLE
 2300            OCT    06143           67 3COMP  GYRO DEGREES FOR EACH
 2301            OCT    00126           70 2COMP  OPT TRACK AZIMUTH, DEGREES
 2302            OCT    00126           71 2COMP  OPT TRACK AZIMUTH, DEGREES
 2303            OCT    20410           72 3COMP  POSITION FOR EACH
 2304            OCT    22451           73 3COMP  VELOCITY FOR EACH
 2305            OCT    00412           74 3COMP  TIME WEEKS, POSITION, WHOLE
 2306            OCT    20450           75 3COMP  POSITION, VELOCITY, POSITION
 2307            OCT    20410           76 3COMP  POSITION FOR EACH
 2308  4         OCT    22451           77 3COMP  VELOCITY FOR EACH
 2309   SFINTAB  OCT    00006           WHOLE,TIME(SEC)
 2310            OCT    03240
 2311            OCT    00253           TIME HOURS ( = 1.3..... )
 2312            OCT    25124             (POINT BETWEEN BITS 7-8 )
 2313            OCT    0               DEGREES (SFCON IN DEGINSF )
 2314            OCT    0
 2315            OCT    10707           GYRO DEGREES
 2316            OCT    03435                       UPPED BY 1
 2317            OCT    00001           GYRO BIAS DRIFT
 2318            OCT    02133
 2319            OCT    00011           GYRO AXIS ACCEL. DRIFT
 2320            OCT    30322
 2321            OCT    00004           PIPA BIAS
 2322            OCT    14021
 2323            OCT    00314           PIPA SCALE ERROR.
 2324            OCT    31463
 2325            OCT    23420           POSITION
 2326            OCT    00000
 2327            OCT    00201           VELOCITY
 2328            OCT    30327           ( POINT BETWEEN BITS 7-8 )
 2329            OCT    01371           TIME WEEKS
 2330            OCT    34750           ( POINT BETWEEN BITS 7-8 )
 2331            OCT    00001           ELEVATION DEGREES
 2332            OCT    03434
 2333            OCT    00006           RENDEZVOUS RADAR RANGE
 2334            OCT    20162
 2335            OCT    00011           RENDEZVOUS RADAR RANGE RATE
 2336            OCT    27066
 2337            OCT    00016           LANDING RADAR ALTITUDE
 2338            OCT    04245
 2339            OCT    00002           INITIAL/FINAL ALTITUDE
 2340            OCT    23224
 2341            OCT    00014           ALTITUDE RATE
 2342            OCT    06500
 2343            OCT    00012           FORWARD/LATERAL VELOCITY
 2344            OCT    36455
 2345            OCT    04256           ROT HAND CONT ANGLE RATE
 2346            OCT    07071
 2347            OCT    77766           LANDING RADAR VELX (NEG TO SWITCH SIGNS)
 2348            OCT    60044
 2349            OCT    00004           LANDING RADAR VELY
 2350            OCT    34055
 2351            OCT    00007           LANDING RADAR VELZ
 2352            OCT    04147
 2353            OCT    00005           OPTICAL AZIMUTH TRACKER ANGLE
 2354            OCT    21616
A2355  4                                END OF SFINTAB
 2356   SFOUTAB  OCT    05174           WHOLE, TIME(SEC)
 2357            OCT    13261
 2358            OCT    27670           TIME HOURS
 2359            OCT    31357
 2360            OCT    0               DEGREES
 2361            OCT    0
 2362            OCT    00714           GYRO DEGREES
 2363            OCT    31463           (POINT BETWEEN BITS 7-8)
 2364            OCT    35753           GYRO BIAS DRIFT
 2365            OCT    32323
 2366            OCT    03216           GYRO AXIS ACCEL. DRIFT
 2367            OCT    06400
 2368            OCT    07237           PIPA BIAS
 2369            OCT    37776
 2370            OCT    00120           PIPA SCALE ERROR
 2371            OCT    00000
 2372            OCT    00321           POSITION
 2373            OCT    26706           ( POINT BETWEEN BITS 7-8 )
 2374            OCT    37441           VELOCITY
 2375            OCT    14247
 2376            OCT    05300           TIME WEEKS
 2377            OCT    20305
 2378            OCT    34631           ELEVATION DEGREES
 2379            OCT    23146
 2380            OCT    04725           RENDEZVOUS RADAR RANGE
 2381            OCT    35454
 2382            OCT    03225           RENDEZVOUS RADAR RANGE RATE
 2383            OCT    07470
 2384            OCT    02207           LANDING RADAR ALTITUDE
 2385            OCT    03255
 2386            OCT    14226           INITIAL/FINAL ALTITUDE
 2387            OCT    31757
 2388            OCT    02476           ALTITUDE RATE
 2389            OCT    05531
 2390            OCT    02727           FORWARD/LATERAL VELOCITY
 2391            OCT    16415
 2392            OCT    00007           ROT HAND CONT ANGLE RATE
 2393            OCT    13734
 2394            OCT    74502           LANDING RADAR VELX (NEG TO SWITCH SIGNS)
 2395            OCT    76401
 2396            OCT    06436           LANDING RADAR VELY
 2397            OCT    35664
 2398            OCT    04371           LANDING RADAR VELZ
 2399            OCT    17420
 2400            OCT    05605           OPTICAL TRACKER AZIMUTH ANGLE
 2401            OCT    03656
A2402  4                                END OF SFOUTAB
A2403                                   MIXNOUN  SF ROUT
 2404   IDADDTAB ECADR  RSTACK  +18D    01       LANDING RADAR ALTITUDE
 2405            ECADR  RSTACK  +22D    01       SECONDS
 2406            ECADR  RSTACK          02       LANDING RADAR VELX
 2407            ECADR  RSTACK  +4      02       SECONDS
 2408            ECADR  RSTACK  +6      03       LANDING RADAR VELY
 2409            ECADR  RSTACK  +10D    03       SECONDS
 2410            ECADR  RSTACK  +12D    04       LANDING RADAR VELZ
 2411            ECADR  RSTACK  +16D    04       SECONDS
 2412            ECADR  DSPTEM1         05       DEGREES
 2413            ECADR  DSPTEM1 +1      05       ELEVATION DEGREES
 2414            ECADR  RSTACK          06       RENDEZVOUS RADAR RANGE
 2415            ECADR  RSTACK  +2      06       DEGREES
 2416            ECADR  RSTACK  +3      06       DEGREES
 2417            ECADR  RSTACK  +6      07       RENDEZVOUS RADAR RANGE RATE
 2418            ECADR  RSTACK  +8D     07       DEGREES
 2419            ECADR  RSTACK  +9D     07       DEGREES
 2420            ECADR  ALT             10       INITIAL/FINAL ALTITUDE
 2421            ECADR  FINALT          10       INITIAL/FINAL ALTITUDE
 2422            ECADR  ALTRATE         10       ALTITUDE RATE
 2423            ECADR  SAMPTIME        11       HOURS
 2424            ECADR  SAMPTIME        11       SECONDS
 2425            ECADR  DSPTEM2         12       WHOLE
 2426            ECADR  DSPTEM2 +1      12       FRACTIONAL
 2427            ECADR  DSPTEM2 +2      12       WHOLE
 2428            ECADR  DELVX           13       GYRO DEGREES
 2429            ECADR  DELVX   +2      13       GYRO DEGREES
 2430            ECADR  DELVX   +4      13       GYRO DEGREES
 2431            ECADR  AZANG           14       OPT TRACK AZIMUTH ANGLE
 2432            ECADR  ELANG           14       DEGREES
 2433            ECADR  DESLOTSY        15       OPT TRACK AZIMUTH ANGLE
 2434            ECADR  DESLOTSX        15       DEGREES
 2435            ECADR  DELR            16       POSITION
 2436            ECADR  DELR    +2      16       POSITION
 2437            ECADR  DELR    +4      16       POSITION
 2438            ECADR  DELVEL          17       VELOCITY
 2439            ECADR  DELVEL  +2      17       VELOCITY
 2440            ECADR  DELVEL  +4      17       VELOCITY
 2441            ECADR  TDEC            20       TIME WEEKS
 2442            ECADR  MEASQ           20       POSITION
 2443            ECADR  MEASMODE        20       WHOLE
 2444            ECADR  DSPTEM1         21       POSITION
 2445            ECADR  DSPTEM1 +2      21       VELOCITY
 2446            ECADR  DELTAQ          21       POSITION
 2447            ECADR  DSPTEM1         22       POSITION
 2448            ECADR  DSPTEM1 +2      22       POSITION
 2449            ECADR  DSPTEM1 +4      22       POSITION
 2450            ECADR  DSPTEM1         23       VELOCITY
 2451            ECADR  DSPTEM1 +2      23       VELOCITY
 2452            ECADR  DSPTEM1 +4      23       VELOCITY
 2453            OCT    00000                    SPARE
 2454            OCT    00000                    SPARE
 2455            OCT    00000                    SPARE
 2456            OCT    00000                    SPARE
 2457            OCT    00000                    SPARE
 2458            OCT    00000                    SPARE
A2459  4                                END OF IDADDTAB
A2460                                   MIXNOUN  SF ROUT
 2461   RUTMXTAB OCT    00204           01  LANDING RADAR ALTITUDE, SECONDS
 2462            OCT    00204           02  LANDING RADAR VELX, SECONDS
 2463            OCT    00204           03  LANDING RADAR VELY, SECONDS
 2464            OCT    00204           04  LANDING RADAR VELZ, SECONDS
 2465            OCT    00142           05  DEGREES, ELEVATION DEGREES
 2466            OCT    04104           06  RENDEZVOUS RADAR RANGE, DEG, DEG
 2467            OCT    04104           07  REND. RADAR RANGE RATE, DEG, DEG
 2468            OCT    06204           10  INIT/FIN ALT, INIT/FIN ALT, ALT RATE
 2469            OCT    00205           11  HOURS, SECONDS
 2470            OCT    06043           12  WHOLE, FRACTIONAL, WHOLE
 2471            OCT    16347           13  GYRO DEGREES (FOR EACH)
 2472            OCT    00104           14  OPT TRACK AZIMUTH ANGLE, DEGREES
 2473            OCT    00104           15  OPT TRACK AZIMUTH ANGLE, DEGREES
 2474            OCT    16347           16  POSITION (FOR EACH)
 2475            OCT    12245           17  VELOCITY (FOR EACH)
 2476            OCT    06345           20  TIME WEEKS, POSITION, WHOLE
 2477            OCT    16247           21  POSITION, VELOCITY, POSITION
 2478            OCT    16347           22  POSITION (FOR EACH)
 2479            OCT    12245           23  VELOCITY (FOR EACH)
A2480  4                                END OF RUTMXTAB
 2481   ENDPINS3 EQUALS
P2482  4MISCELLANEOUS SERVICE ROUTINES IN FIXED/FIXED
 2483  2         SETLOC DATWAIT1 +2
R2484   SETNCADR       E CADR ARRIVES IN A. IT IS STORED IN NOUNCADR. EBANK BITS
R2485  2               ARE SET. E ADRES IS DERIVED AND PUT INTO NOUNADD.
 2486   SETNCADR TS     NOUNCADR        STORE ECADR
 2487            TS     EBANK           SET EBANK BITS
 2488            MASK   LOW8
 2489            AD     OCT1400
 2490            TS     NOUNADD         PUT E ADRES INTO NOUNADD
 2491  4         TC     Q
R2492   SETNADD        GETS E CADR FROM NOUNCADR, SETS EBANK BITS, DERIVES
R2493  2               E ADRES AND PUTS IT INTO NOUNADD.
 2494   SETNADD  CA     NOUNCADR
 2495  4         TCF    SETNCADR +1
R2496   SETEBANK       E CADR ARRIVES IN A. EBANK BITS ARE SET. E ADRES IS
R2497  2               DERIVED AND LEFT IN A.
 2498   SETEBANK TS     EBANK           SET EBANK BITS
 2499            MASK   LOW8
 2500            AD     OCT1400         E ADRES LEFT IN A
 2501  4         TC     Q
 2502   R1D1     OCT    16
 2503   R2D1     OCT    11
 2504  2R3D1     OCT    4
 2505   RIGHT5   TS     CYR
 2506            CS     CYR
 2507            CS     CYR
 2508            CS     CYR
 2509            CS     CYR
 2510            XCH    CYR
 2511  2         TC     Q
 2512   LEFT5    TS     CYL
 2513            CS     CYL
 2514            CS     CYL
 2515            CS     CYL
 2516            CS     CYL
 2517            XCH    CYL
 2518  2         TC     Q
 2519   SLEFT5   DOUBLE
 2520            DOUBLE
 2521            DOUBLE
 2522            DOUBLE
 2523            DOUBLE
 2524  4         TC     Q
 2525   LOW5     OCT    37
 2526   MID5     OCT    1740
 2527  2HI5      OCT    76000           MUST STAY HERE
 2528   TCNOVAC  TC     NOVAC
 2529   TCWAIT   TC     WAITLIST
 2530   TCTSKOVR TC     TASKOVER
 2531  4TCFINDVC TC     FINDVAC
 2532  4CHRPRIO  OCT    30000           EXEC PRIORITY OF CHARIN
 2533   LOW11    OCT    3777
 2534   B12-1    EQUALS LOW11
 2535   LOW8     OCT    377
 2536  4OCT1400  OCT    1400
 2537   VD1      OCT    23
 2538   ND1      OCT    21
 2539  2MD1      OCT    25
 2540  2BINCON   DEC    10
 2541   FALTON   CA     BIT7            TURN ON OPERATOR ERROR LIGHT
 2542            EXTEND
 2543            WOR    DSALMOUT        BIT 7 OF CHANNEL 11
 2544  2         TC     Q
 2545   FALTOF   CS     BIT7            TURN OFF OPERATOR ERROR LIGHT
 2546            EXTEND
 2547            WAND   DSALMOUT        BIT 7 OF CHANNEL 11
 2548  2         TC     Q
 2549   RELDSPON CAF    BIT5            TURN ON KEY RELEASE LIGHT
 2550            EXTEND
 2551            WOR    DSALMOUT        BIT 5 OF CHANNEL 11
 2552  2         TC     Q
 2553   LODSAMPT EXTEND
 2554            DCA    TIME2
 2555            DXCH   SAMPTIME
 2556  4         TC     Q
 2557   TPSL1    EXTEND                 SHIFTS MPAC, +1, +2 LEFT 1
 2558            DCA    MPAC    +1      LEAVES OVFIND SET TO +/- 1 FOR OF/UF
 2559            DAS    MPAC    +1
 2560            AD     MPAC
 2561            ADS    MPAC
 2562            TS     7               TS A DOES NOT CHANGE A ON OF/UF.
 2563            TC     Q               NO NET OF/UF
 2564            TS     OVFIND          OVFIND SET TO +/- 1 FOR OF/UF
 2565  4         TC     Q
 2566   FLASHON  CAF    BIT6            TURN ON V/N FLASH
 2567            EXTEND                 BIT 6 OF CHANNEL 11
 2568            WOR    DSALMOUT
 2569  4         TC     Q
 2570   FLASHOFF CS     BIT6            TURN OFF V/N FLASH
 2571            EXTEND
 2572            WAND   DSALMOUT        BIT 6 OF CHANNEL 11
 2573            TC     Q
P2574   INTERNAL ROUTINES THAT USE THE KEYBOARD AND DISPLAY SYSTEM(THRU
R2575   NVSUB) MUST  TC GRABDSP  BEFOREHAND , TO GRAB THE DISPLAY SYSTEM AND
R2576  2MAKE IT BUSY TO OTHER INTERNAL USERS.
R2577         WHEN FINISHED , THERE MUST BE A TC FREEDSP , TO RELEASE THE
R2578  2SYSTEM FOR OTHER INTERNAL USERS.
R2579         THE CALLING SEQUENCES ARE
R2580   L        TC     GRABDSP
R2581   L+1      RETURN HERE WHEN SYSTEM IS ALREADY GRABBED
R2582  2L+2      RETURN HERE MEANS YOU HAVE IT
R2583   L        TC     NVSUB
R2584   L+1      RETURN HERE IF OPERATOR HAS INTERVENED
R2585  4L+2      RETURN HERE AFTER EXECUTION
R2586         A ROUTINE CALLED GRABUSY IS PROVIDED (USE IS OPTIONAL) TO PUT YOUR
R2587   JOB TO SLEEP UNTIL  THE SYSTEM IS FREED BY THE JOB HOLDING IT.
R2588   GRABUSY CANNOT BE CALLED FROM E MEMORY, SINCE JOBSLEEP AND JOBWAKE
R2589   HANDLE ONLY FIXED MEMORY.
R2590  2YOUR CADR IS PUT AT FIRST AVAILABLE SLOT IN A WAITING LIST (FIFO).
R2591         THE CALLING SEQUENCE IS
R2592            CAF    WAKEFCADR
R2593  2         TC     GRABUSY
R2594         A ROUTINE CALLED  NVSUBUSY IS PROVIDED (USE IS OPTIONAL)  TO PUT
R2595   YOUR JOB TO SLEEP UNTIL THE OPERATOR RELEASES IT.
R2596   NVSUBUSY CANNOT BE CALLED FROM E MEMORY, SINCE JOBSLEEP AND JOBWAKE
R2597   HANDLE ONLY FIXED MEMORY.
R2598                                               YOUR CADR IS PUT
R2599  2ON TOP OF A WAITING LIST (FIFO). IT ALSO TURNS ON KEY RELEASE LIGHT.
R2600          THE CALLING SEQUENCE IS
R2601            CAF    WAKEFCADR
R2602  4         TC     NVSUBUSY
R2603   AFTER A TC FREEDSP, THE INTERNAL INTERLOCK IS KEPT BUSY FOR 10 SECONDS,
R2604   AFTER WHICH A CADR IS CALLED FROM THE LIST. THIS INSURES THAT ALL
R2605  4DISPLAYS WAITING WILL BE VISIBLE.
R2606   GRABLOCK IS THE INTERNAL INTERLOCK FOR THE USE OF THE KEYBOARD
R2607   AND DISPLAY SYSTEM.
R2608   +0  FREE
R2609   +1  SOME INTERNAL ROUTINE HAS GRABBED DSP SYST
R2610  4+2  SOME INTERNAL ROUTINE HAS GONE TO NVSUBUSY
 2611   GRABDSP  CCS    GRABLOCK
 2612            TC     Q               ALREADY GRABBED, RETURN TO L+1
 2613            CAF    ONE             NOT GRABBED, SET TO +1
 2614            TS     GRABLOCK        AND RETURN TO L+2
 2615            INDEX  Q
 2616  4         TC     1
 2617   PREGBSY  CAF    LOW10           SPECIAL ENTRANCE FOR ROUTINES IN FIXED
 2618            MASK   Q               BANKS ONLY DESIRING THE FCADR OF
 2619            AD     FBANK           1 + (LOC FROM WHICH TC PREGBSY WAS DONE)
 2620   GRABUSY  TC     POSTJUMP        TO BE ENTERED.
 2621            CADR   GRABUSYB
 2622            SETLOC DOPROC  +2
 2623   GRABUSY1 TS     L
 2624            CCS    GRABLOCK
 2625            TC     +3              STILL GRABBED
 2626            CA     L               NOT GRABBED SO DO DIRECT CALL
 2627            TC     BANKJUMP
 2628            CAF    TWO
 2629            TS     LSTPTR
 2630            INDEX  LSTPTR          SEARCH LIST FOR FIRST AVAILABLE SPACE
 2631            CCS    DSPLIST         FROM BOTTOM.
 2632            TC     +2
 2633            TC     PUTINLST        SPACE FOUND
 2634            CCS    LSTPTR          DECREMENT POINTER
 2635            TC     -6
 2636            TC     LSTFULL
 2637   PUTINLST CA     L
 2638            INDEX  LSTPTR
 2639            TS     DSPLIST
 2640  4         TC     JOBSLEEP
R2641   GRABWAIT IS A SPECIAL ENTRANCE FOR ROUTINES IN FIXED BANKS ONLY. IF
R2642   SYSTEM IS NOT GRABBED, IT GRABS IT AND RETURNS TO L+1 ( L = LOC FROM
R2643   WHICH THE TC GRABWAIT WAS DONE). IF SYSTEM IS GRABBED, IT PUTS CALLING
R2644   JOB TO SLEEP WITH L+1 GOING INTO LIST FOR EVENTUAL WAKING UP WHEN
R2645  2SYSTEM IS FREED.
 2646            SETLOC GRABUSY  +2
 2647   GRABWAIT CCS    GRABLOCK
 2648            TCF    PREGBSY         GRABBED. PUT L+1 INTO LIST. GO TO SLEEP.
 2649            CAF    ONE             NOT GRABBED. GRAB AND RETURN TO L+1.
 2650            TS     GRABLOCK
 2651  4         TC     Q
 2652   PRENVBSY CS     2K+3            SPECIAL ENTRANCE FOR ROUTINES IN FIXED
 2653            AD     Q               BANKS ONLY DESIRING THE FCADR OF(LOC
 2654            AD     FBANK           FROM WHICH THE TC PRENVBSY WAS DONE) -2
 2655   NVSUBUSY TC     POSTJUMP        TO BE ENTERED.
 2656            CADR   NVSUBSYB
 2657  22K+3     OCT    2003
 2658            SETLOC PUTINLST  +4
 2659   NVSUBSY1 TS     L
 2660            CCS    DSPLOCK         TEST IF REALLY LOCKED OUT
 2661            TC     +3              STILL BUSY
 2662            CA     L               DSPLOCK = +0 SO RETURN DIRECTLY
 2663            TC     BANKJUMP
 2664            CAF    TWO             SET FOR GRABBED STATE AND NVSUBUSY USE
 2665            TS     GRABLOCK
 2666            CA     L
 2667            XCH    DSPLIST +2      ENTER CADR INTO FIRST POSITION OF LIST
 2668            XCH    DSPLIST +1              (BOTTOM)
 2669            XCH    DSPLIST
 2670            CCS    A
 2671            TC     LSTFULL
 2672            TC     +2
 2673            TC     LSTFULL
 2674            TC     RELDSPON
 2675            CA     L
 2676  4ENDNVBSY TC     JOBSLEEP
R2677   NVSBWAIT IS A SPECIAL ENTRANCE FOR ROUTINES IN FIXED BANKS ONLY. IF
R2678   SYSTEM IS NOT BUSY, IT EXECUTES V/N AND RETURNS TO L+1 (L= LOC FROM
R2679   WHICH THE TC NVSBWAIT WAS DONE). IF SYSTEM IS BUSY, IT PUTS CALLING JOB
R2680   TO SLEEP WITH L-1 GOING INTO LIST FOR EVENTUAL WAKING UP WHEN SYSTEM
R2681  2IS NOT BUSY.
 2682            SETLOC NVSUBUSY +3
 2683   NVSBWAIT TS     NVTEMP
 2684            CCS    DSPLOCK
 2685            TCF    NVSBWT1         BUSY
 2686            CA     Q               FREE. NVSUB WILL SAVE L+1 FOR RETURN
 2687            TCF    NVSUB   +5      AFTER EXECUTION.
 2688   NVSBWT1  INCR   Q               L+2. PRENVBSY WILL PUT L-1 INTO LIST AND
 2689  4         TCF    PRENVBSY        GO TO SLEEP.
 2690   RELDSP   XCH    Q               SET DSPLOCK TO +0, TURN RELDSP LIGHT
 2691            TS     RELRET          OFF,  SEARCH DSPLIST
 2692            CAF    NEG1
 2693            AD     GRABLOCK
 2694            EXTEND                 SEARCH LIST ONLY IF GRABLOCK = +2
 2695            BZMF   RELDSP2           (SOMEONE USED NVSUBUSY)
 2696            TC     WKSEARCH
 2697            TC     RELDSP2         LIST EMPTY
 2698            TC     JOBWAKE         LIST NOT EMPTY
 2699            CAF    ONE
 2700            TS     GRABLOCK
 2701   RELDSP2  INHINT
 2702            CS     BIT5            TURN OFF KEY RELEASE LIGHT
 2703            EXTEND                 (BIT 5 OF CHANNEL 11)
 2704            WAND   DSALMOUT
 2705            CAF    ZERO
 2706            TS     DSPLOCK
 2707            RELINT
 2708            TC     RELRET
 2709   RELDSP1  XCH    Q               SET DSPLOCK TO +0, RELDSP LIGHT OFF,
 2710            TS     RELRET          NO LIST SEARCH
 2711  4         TC     RELDSP2
 2712   WKSEARCH CAF    ZERO            SEARCHES LIST. LEAVES RESULT IN A.
 2713            XCH    DSPLIST         IF EMPTY, RETURN TO L+1.
 2714            XCH    DSPLIST +1      IF NOT EMPTY, INHINT AND RETURN TO L+2.
 2715            XCH    DSPLIST +2
 2716            EXTEND
 2717            BZF    +4              EMPTY
 2718            INHINT                 NOT EMPTY
 2719            INDEX  Q               RETURN TO L+2
 2720            TC     1
 2721  4         TC     Q               RETURN TO L+1
 2722   FREEDSP  XCH    Q
 2723            TS     FREERET
 2724            INHINT
 2725            CAF    SHOTIME
 2726            TC     WAITLIST
 2727            EBANK= DSPCOUNT
 2728            2CADR  FREEWAIT
 2729            RELINT
 2730  2         TC     FREERET
 2731   SHOTIME  DEC    600             6 SECOND WAITING PERIOD.
 2732  2ENDPINBF EQUALS
 2733  2         SETLOC ENDNVBSY +1
 2734   FREEWAIT CAF    CHRPRIO         CALLED BY T3RUPT
 2735            TC     NOVAC
 2736            EBANK= DSPCOUNT
 2737            2CADR  FREDSPDO
 2738  4         TC     TASKOVER
 2739   FREDSPDO TC     WKSEARCH        CALLED BY EXECUTIVE
 2740            TC     LSTEMPTY        LIST EMPTY
 2741            TC     JOBWAKE         LIST NOT EMPTY
 2742            RELINT
 2743            CAF    ONE             SET FOR GRABBED CONDITION
 2744            TS     GRABLOCK
 2745            TC     ENDOFJOB
 2746   LSTEMPTY CAF    ZERO            SET FOR FREE CONDITION
 2747  4         TC     -3
 2748   LSTFULL  TC     ABORT
 2749  2         OCT    01206           PINBALL WAITING LINE FULL.
 2750   ENDPINS1 EQUALS
P2751   VBTSTLTS TURNS ON ALL DISPLAY PANEL LIGHTS. AFTER 5 SEC, IT TURNS
R2752  2OFF THE CAUTION AND STATUS LIGHTS.
 2753  2         SETLOC DSPMMEND +1
 2754   VBTSTLTS INHINT
 2755            CS     BIT1            SET BIT 1 OF IMODES33 SO IMUMON WONT
 2756            MASK   IMODES33        TURN OUT ANY LAMPS.
 2757            AD     BIT1
 2758  2         TS     IMODES33
 2759            CAF    TSTCON1         TURN ON UPLINK ACTIVITY, TEMP, KEY RLSE,
 2760            EXTEND                 V/N FLASH, OPERATOR ERROR.
 2761            WOR    DSALMOUT
 2762            CAF    TSTCON2         TURN ON NO ATT, GIMBAL LOCK, TRACKER,
 2763            TS     DSPTAB  +11D    PROG ALM.
 2764            CAF    BIT10           TURN ON TEST ALARM OUTBIT
 2765            EXTEND
 2766            WOR    CHAN13
 2767            CAF    TEN
 2768   TSTLTS1  TS     ERCNT
 2769            CS     FULLDSP
 2770            INDEX  ERCNT
 2771            TS     DSPTAB
 2772            CCS    ERCNT
 2773            TC     TSTLTS1
 2774            CS     FULLDSP1
 2775            TS     DSPTAB  +1      TURN ON 3 PLUS SIGNS
 2776            TS     DSPTAB  +4
 2777            TS     DSPTAB  +6
 2778            CAF    ELEVEN
 2779            TS     NOUT
 2780            RELINT
 2781            CAF    SHOLTS
 2782            INHINT
 2783            TC     WAITLIST
 2784            EBANK= DSPTAB
 2785            2CADR  TSTLTS2
 2786            TC     ENDOFJOB        DSPLOCK IS LEFT BUSY (FROM KEYBOARD
A2787                                   ACTION) UNTIL TSTLTS3 TO INSURE THAT
A2788  4                                LIGHTS TEST WILL BE SEEN.
 2789   FULLDSP  OCT    05675           DISPLAY ALL 8:S
 2790   FULLDSP1 OCT    07675           DISPLAY ALL 8:S AND +
 2791   TSTCON1  OCT    00175
A2792                                   UPLINK ACTIVITY, TEMP, KEY RLSE,
A2793                                   V/N FLASH, OPERATOR ERROR.
 2794   TSTCON2  OCT    40650           DSPTAB+11D  BITS 4,6,8,9.
A2795                                   NO ATT, GIMBAL LOCK, TRACKER, PROG ALM.
 2796   TSTCON3  OCT    00115           CHAN 11  BITS 1, 3, 4, 7.
A2797                                   UPLINK ACTIVITY, TEMP, OPERATOR ERROR.
 2798  4SHOLTS   OCT    764             5 SEC
 2799   TSTLTS2  CAF    CHRPRIO         CALLED BY WAITLIST
 2800            TC     NOVAC
 2801            EBANK= DSPTAB
 2802            2CADR  TSTLTS3
 2803  4         TC     TASKOVER
 2804   TSTLTS3  CS     TSTCON3         CALLED BY EXECUTIVE
 2805            INHINT
 2806            EXTEND                 TURN OFF  UPLINK ACTIVITY, TEMP,
 2807            WAND   DSALMOUT        OPERATOR ERROR.
 2808            CS     BIT10           TURN OFF TEST ALARM OUTBIT
 2809            EXTEND
 2810            WAND   CHAN13
 2811            CAF    BIT15           TURN OFF AUTO, HOLD, FREE, NO ATT, SPARE
 2812            TS     DSPTAB  +11D    GIMBAL LOCK, SPARE, TRACKER, PROG ALM
 2813            CS     13-11,1         SET BITS TO INDICATE ALL LAMPS OUT. TEST
 2814            MASK   IMODES33        LIGHTS COMPLETE.
 2815            AD     PRIO16
 2816  2         TS     IMODES33
 2817            CS     OCT55000
 2818            MASK   IMODES30
 2819            AD     PRIO15          15000.
 2820  2         TS     IMODES30
 2821            CS     RFAILS2
 2822            MASK   RADMODES
 2823            AD     BIT7
 2824  2         TS     RADMODES
 2825  2         RELINT
 2826            TC     DSPMM           REDISPLAY C(MODREG)
 2827            TC     POSTJUMP        TURN OFF KEY RLSE LIGHT (AND SEARCH LIST
 2828            CADR   VBTERM          IF APPROPRIATE).
A2829                                   TURN OFF V/N FLASH, SET LOADSTAT FOR
A2830                                   FOR TERMINATE CONDITION, AND GO TO
A2831  2                                RECALTST. FINALLY DO TC ENDOFJOB.
 2832   13-11,1  OCT    16001
 2833   RFAILS2  OCT    330             RADAR CDU AND DATA FAIL FLAGS.
 2834   OCT55000 OCT    55000
 2835   ENDPINS2 EQUALS
L      2ALARM AND ABORT
R0001            THE FOLLOWING SUBROUTINE MAY BE CALLED TO DISPLAY A NON-ABORTIV
 0002  9E ALARM CONDITION. IT MAY BE CALLED
R0003  2EITHER IN INTERRUPT OR UNDER EXECUTIVE CONTROL.
R0004  2         CALLING SEQUENCE IS AS FOLLOWS:
R0005            TC     ALARM
R0006            OCT    AAANN           ALARM NO. NN IN GENERAL AREA AAA.
R0007  2                                (RETURNS HERE)
 0008            SETLOC ENDPINBF
 0009  2         EBANK= FAILREG
 0010   ALARM    INHINT
 0011            XCH    Q
 0012  2         TS     RUPTREG4
 0013            CCS    FAILREG         SEE IF ONE FAILURE HAS OCCURRED SINCE
A0014                                    THE LAST ERROR RESET.
 0015            TC     MULTFAIL        YES - INDICATE MULTIPLE FAILURES.
 0016  2         TC     NEWALARM        FIRST SINCE RESET.
 0017   MULTEXIT CA     RUPTREG4        FREE RUPTREG4 BEFORE RELINT.
 0018            RELINT
 0019            INDEX  A
 0020  2         TC     1               RETURN TO CALLER.
 0021   MULTFAIL AD     OCT40001        BIT 15 = 1 INDICATES MULTIPLE FAILURES.
 0022            TS     FAILREG
 0023  2         TC     MULTEXIT
 0024  2NEWALARM TC     PROGLARM        TURN ON THE PROGRAM ALARM LIGHT.
 0025            CAF    PRIO37
 0026            TC     NOVAC
 0027            2CADR  DOALARM         CALL (SEPARATE) JOB FOR DISPLAY.
 0028            INDEX  RUPTREG4
 0029            CAF    0
 0030  2         TC     MULTFAIL +1
 0031   PROGLARM CS     OCT40400        TURN ON PROGRAM ALARM LIGHT VIA OUT0.
 0032            MASK   DSPTAB +11D
 0033            AD     OCT40400
 0034            TS     DSPTAB +11D
 0035  2         TC     Q
 0036   OCT40400 OCT    40400
P0037            THE FOLLOWING ROUTINE IS CALLED TO INITIATE AN ABORT. FAILREG I
 0038  9S SET (ACCORDING TO THE MULTIPLE
R0039  2FAILURES CONVENTION) AND A RE-START IS INITIATED BY TC-SELF. THIS IS CAL
 0040  9LED ONLY UNDER RARE CIRCUMSTANCES.
 0041   ABORT    INHINT                 MAY BE CALLED IN INTERRUPT OR UNDER EXEC
 0042            INDEX  Q               PICK UP FAILURE CODE.
 0043            CAF    0
 0044  2         TS     ITEMP1
 0045            CCS    FAILREG         SEE IF THIS IS A MULTIPLE FAILURE.
 0046            TC     SETMULTF        SET BIT 15 TO INDICATE YES.
 0047  2         TC     NEWABORT        FIRST FAILURE.
 0048  2WHIMPER  TC     WHIMPER         NOT WITH A BANG...
 0049   SETMULTF AD     OCT40001        RESTORE AND SET BIT 15.
 0050  2         TC     +3
 0051   NEWABORT TC     PROGLARM        FIRST FAILURE - TURN ON ALARM LIGHT.
 0052            XCH    ITEMP1
 0053    +3      TS     FAILREG
 0054  2         TC     WHIMPER         UNIVERSAL ABORT LOCATION.
 0055   CCSHOLE  XCH    Q
 0056  2         TS     SFAIL
 0057            TC     ABORT
 0058  2         OCT    1103
 0059  2ENDFAILF EQUALS
R0060  2         JOB WHICH CALLS NVSUB FOR ALARM DISPLAY.
 0061  2         SETLOC ENDWAITS
 0062   DOALARM  TC     GRABWAIT        DISPLAY FAILREG.
 0063            CAF    FAILDISP
 0064  2         TC     NVSBWAIT
 0065  2         TC     EJFREE          FREE DISPLAY AND END JOB.
 0066  2FAILDISP OCT    00531
 0067   ENDFAILS EQUALS
L      2CONTROLLER AND METER ROUTINES
 0001            SETLOC ENDEXTVS
 0002  2         EBANK= PCOM
 0003   RHCNTRL  CAF    BIT15
 0004            EXTEND
 0005            RAND   31              CHECK PGNCS CONTROL OF S/C
 0006            EXTEND
 0007            BZF    +2
 0008            TCF    NORATE
 0009            CAF    BIT3
 0010            EXTEND
 0011            RAND   31              CHECK OUT-OF-DETENT BIT
 0012            CCS    A
 0013  2         TCF    NORATE
 0014            CAF    ZERO            ZERO COUNTERS
 0015            TS     RHCP
 0016            TS     RHCY
 0017            TS     RHCR
 0018            CAF    BIT8            ENABLE COUNTERS
 0019            AD     BIT9            START READING INTO COUNTERS
 0020            EXTEND
 0021            WOR    13
 0022            CAF    BIT5
 0023            TC     WAITLIST        COUNTERS FILLED
 0024            2CADR  ATTCONT
 0025  2         TC     TASKOVER
 0026   ATTCONT  CS     BIT8
 0027            EXTEND
 0028            WAND   13              RESET COUNTER ENABLE
 0029            CAF    BIT11
 0030            EXTEND
 0031            RAND   32              CHECK IF IN ATTITUDE HOLD MODE
 0032            EXTEND
 0033            BZF    +2
 0034            TC     XAXOVRD
 0035            CA     RHCP
 0036            EXTEND
 0037            MP     BIT10
 0038            CAF    RHCSCALE
 0039            EXTEND
 0040            MP     L
 0041            TS     PCOM
 0042            CA     RHCR
 0043            EXTEND
 0044            MP     BIT10
 0045            CAF    RHCSCALE
 0046            EXTEND
 0047            MP     L
 0048            TS     RCOM
 0049   XAXOVRD  CA     RHCY            YAW CHANNEL ONLY IN AUTO MODE
 0050            EXTEND
 0051            MP     BIT10
 0052            CAF    RHCSCALE
 0053            EXTEND
 0054            MP     L
 0055            TS     YCOM
 0056  2         TCF    RHCNTRL
 0057   NORATE   CAF    ZERO            SET RATE COMMANDS TO ZERO
 0058            TS     PCOM
 0059            TS     RCOM
 0060            TS     YCOM
 0061  2         TC     TASKOVER
 0062   RHCSCALE DEC    .44488          LEAVES INPUTS SCALED AS PI/4 RAD/SEC.
 0063   ENDCMS   EQUALS
L      2DOWN-TELEMETRY PROGRAM
 0001            BANK   15
 0002  2         EBANK= DNTMBUFF
 0003  2LOWIDCOD OCT    00437           FOD'S CHOICE.
R0004  2         SPECIAL DOWNLINK LIST FOR AGS INITIALIZATION. MUST BE IN LOCATI
 0005  9ON 2001 OF DOWNLINK FBANK.
 0006   AGSLIST  ECADR  UPLOCK
 0007            ECADR  TIME1
 0008            ECADR  TIME2
 0009            ECADR  AGSWORD
 0010            ECADR  AGSBUFF +27D
 0011            ECADR  AGSBUFF +26D
 0012            ECADR  AGSBUFF +25D
 0013            ECADR  AGSBUFF +24D
 0014            ECADR  AGSWORD
 0015            ECADR  AGSBUFF +23D
 0016            ECADR  AGSBUFF +22D
 0017            ECADR  AGSBUFF +21D
 0018            ECADR  AGSBUFF +20D
 0019            ECADR  AGSWORD
 0020            ECADR  AGSBUFF +19D
 0021            ECADR  AGSBUFF +18D
 0022            ECADR  AGSBUFF +17D
 0023            ECADR  AGSBUFF +16D
 0024            ECADR  AGSWORD
 0025            ECADR  AGSBUFF +15D
 0026            ECADR  AGSBUFF +14D
 0027            ECADR  AGSBUFF +13D
 0028            ECADR  AGSBUFF +12D
 0029            ECADR  AGSWORD
 0030            ECADR  AGSBUFF +11D
 0031            ECADR  AGSBUFF +10D
 0032            ADRES  AGSBUFF +9D
 0033            ADRES  AGSBUFF +8D
 0034            ADRES  AGSWORD
 0035            ADRES  AGSBUFF +7
 0036            ADRES  AGSBUFF +6
 0037            ADRES  AGSBUFF +5
 0038            ADRES  AGSBUFF +4
 0039            ADRES  AGSWORD
 0040            ADRES  AGSBUFF +3
 0041            ADRES  AGSBUFF +2
 0042            ADRES  AGSBUFF +1
 0043  8         ADRES  AGSBUFF
R0044            THIS ROUTINE IS INITITATED EVERY 20 MS BY AN INTERRUPT TRIGGERE
 0045  9D
R0046  2BY THE RECEIPT OF AN ENDPULSE FROM THE SPACECRAFT TELEMETRY PROGRAMMER.
 0047   DODOWNTM TS     BANKRUPT        DO APPROPRIATE TM PHASE.
 0048            INDEX  DNTMGOTO
 0049  2         TCF    0
 0050   DNPHASE1 CA     DNLSTADR        ONCE PER CYCLE (1 SECOND), AN ID IS SENT
 0051            TS     LDATALST        AND THE DATA LIST SWITCHED TO THAT
 0052            MASK   LOW10           SELECTED BY A MISSION OR TEST PROGRAM.
 0053            EXTEND
 0054            WRITE  DNTM1
 0055            CS     BIT7            WORD ORDER BIT IS 0 FOR ID OWRD ONLY.
 0056            EXTEND
 0057  2         WAND   13
 0058            CAF    LDNPHAS2        SWITCH TO PHASE 2.
 0059            TS     DNTMGOTO
 0060            CAF    LOWIDCOD        SPECIAL ID CODE IN L.
 0061  2         TCF    TMEXITL
 0062   DNPHASE2 CAF    BIT7            SET WORD ORDER BACK TO 1 FOR REMAINDER
 0063            EXTEND                 OF CYCLE AND SET UP TO PICK UP 12 PAIRS
 0064  2         WOR    13              FROM ANYWHERE IN COMMON ERASABLE OR E7.
 0065            CAF    ZERO
 0066            TS     ITEMP1          TAKE SNAPSHOT OF 12 DP WORDS.
 0067  2         CAF    TEN
 0068   LOOP     TS     ITEMP2          THESE 12 DP WORDS ARE READ INTO AN
 0069            AD     LDATALST        INTERMEDIATE BUFFER SO THEY REFER TO THE
 0070            EXTEND                 SAME POINT IN THE EXECUTION OF A MISSION
 0071            INDEX  A               PROGRAM. THE WORDS MAY BE IN NON-
 0072            INDEX  26D
 0073            DCA    0               12 OF THE DATA LIST ARE USED AS
 0074            INDEX  ITEMP1          ADDRESSES OF THE DESIRED DATA.
 0075  2         DXCH   DNTMBUFF
 0076            CAF    TWO
 0077            ADS    ITEMP1
 0078            CCS    ITEMP2
 0079  2         TCF    LOOP
 0080            CAF    DEC11           SET UP TO SEND 11 REMAINING WORDS
 0081            TS     TMINDEX
 0082            CAF    LDNPHASX
 0083  2         TS     DNTMGOTO
 0084            EXTEND
 0085            INDEX  LDATALST
 0086            INDEX  37D
 0087            DCA    0
 0088  2         TCF    DNTMEXIT
 0089   DNPHASXA TS     TMINDEX
 0090            EXTEND
 0091            INDEX  A               SENDS SNAPSHOT BUFFER.
 0092            INDEX  FIXLISTB
 0093            DCA    0
 0094  2         TCF    DNTMEXIT
 0095   DNPHASEX CCS    TMINDEX         AT END OF SNAPSHOT TRANSMISSION, SET UP
 0096  2         TCF    DNPHASXA        TO SEND 26 PRS FROM ANY ERASABLE LOC AS
 0097            CAF    LDNPHAS3        SPECIFIED BY WORDS 1 - 26 OF THE DATA
 0098            TS     DNTMGOTO        LIST.
 0099  2         CAF    NOGENWDS
 0100   PHASE3A  TS     TMINDEX         GET DP WORD FROM ANY EBANK.
 0101            AD     LDATALST
 0102            EXTEND
 0103            INDEX  A
 0104            DCA    0               THIS GETS THE ADDRESS - MUST USE DCA
 0105            TS     EBANK
 0106            MASK   LOW8
 0107            EXTEND
 0108            INDEX  A
 0109            DCA    3400            (NOTE ASSEMBLY AS DCA 1400)
 0110   DNTMEXIT EXTEND                 GENERAL DNTM EXIT LOCATION.
 0111            WRITE  DNTM1
 0112            CA     L
 0113   TMEXITL  EXTEND
 0114            WRITE  DNTM2
 0115  2         TCF    NOQRSM
 0116   DNPHASE3 CCS    TMINDEX
 0117  2         TCF    PHASE3A
 0118            CAF    LDNPHAS4        SEND FIXED FORMAT LIST OF DSPTAB AND
 0119            TS     DNTMGOTO        T2,T1.
 0120  2         CAF    SIX
 0121   PHASE4A  TS     TMINDEX
 0122            EXTEND                 FIXED DATA LIST FOR DSPTAB AND TIME.
 0123            INDEX  A
 0124            INDEX  FIXLIST
 0125            DCA    0
 0126  8         TCF    DNTMEXIT
 0127   DNPHASE4 CCS    TMINDEX
 0128  2         TCF    PHASE4A
 0129            CAF    LPHASE5         SET UP FOR CHANNEL TRANSMISSION.
 0130            TS     DNTMGOTO
 0131  2         CAF    THREE           FOUR PAIRS OF CHANNELS.
 0132   PHASE5A  TS     TMINDEX
 0133            EXTEND
 0134            INDEX  A
 0135            INDEX  FIXLSTCL
 0136            READ   0
 0137            TS     L
 0138            EXTEND
 0139            INDEX  TMINDEX
 0140            INDEX  FIXLSTCA
 0141            READ   0
 0142  2         TCF    DNTMEXIT
 0143   DNPHASE5 CCS    TMINDEX
 0144            TCF    PHASE5A
 0145            TCF    DNPHASE1        START NEXT CYCLE.
P0146  2         CONSTNATS AND FIXED FORMAT DATA LIST.
 0147   LDNPHAS2 ADRES  DNPHASE2
 0148   LDNPHASX ADRES  DNPHASEX
 0149   LDNPHAS3 ADRES  DNPHASE3
 0150   LDNPHAS4 ADRES  DNPHASE4
 0151  2LPHASE5  ADRES  DNPHASE5
 0152   NOGENWDS DEC    25              26 WORDS SENT DURING PHASE 3.
 0153  2DEC11    DEC    11
 0154   FIXLIST  ADRES  TIME2           FIXED-FORMAT PORTION INCLUDES BUFFER,
 0155            ADRES  DSPTAB +10D     DSPTAB, AND TIME.
 0156            ADRES  DSPTAB +8D
 0157            ADRES  DSPTAB +6
 0158            ADRES  DSPTAB +4
 0159            ADRES  DSPTAB +2
 0160  2         ADRES  DSPTAB
 0161   FIXLISTB ADRES  DNTMBUFF +20D
 0162            ADRES  DNTMBUFF +18D
 0163            ADRES  DNTMBUFF +16D
 0164            ADRES  DNTMBUFF +14D
 0165            ADRES  DNTMBUFF +12D
 0166            ADRES  DNTMBUFF +10D
 0167            ADRES  DNTMBUFF +8D
 0168            ADRES  DNTMBUFF +6D
 0169            ADRES  DNTMBUFF +4D
 0170            ADRES  DNTMBUFF +2D
 0171  2         ADRES  DNTMBUFF
 0172   FIXLSTCA OCT    32              CHANNEL ADDRESSES.
 0173            OCT    30
 0174            OCT    13
 0175  2         OCT    11
 0176   FIXLSTCL OCT    33
 0177            OCT    31
 0178            OCT    14
 0179            OCT    12
P0180            SPECIAL DATA LIST FOR HIGH SPEED RADAR SAMPLING. TELEMETERS TAB
 0181  9LE OF 12 MEASUREMENTS OF 5 WORDS EACH -
R0182  2DATA IN WORDS 1 & 2, RR CDU ANGLES IN 3 & 4, AND TIME 1 IN 5.
 0183   FSTRADTM ECADR  UPLOCK
 0184            ECADR  RFAILCNT        COUNTS BAD SAMPLES.
 0185            ECADR  RSTACK +70D
 0186            ECADR  RSTACK +68D
 0187            ECADR  RSTACK +66D
 0188            ECADR  RSTACK +64D
 0189            ECADR  RSTACK +62D
 0190            ECADR  RSTACK +60D
 0191            ECADR  RSTACK +58D
 0192            ECADR  RSTACK +56D
 0193            ECADR  RSTACK +54D
 0194            ECADR  RSTACK +52D
 0195            ECADR  RSTACK +50D
 0196            ECADR  RSTACK +48D
 0197            ECADR  RSTACK +46D
 0198            ECADR  RSTACK +44D
 0199            ECADR  RSTACK +42D
 0200            ECADR  RSTACK +40D
 0201            ECADR  RSTACK +38D
 0202            ECADR  RSTACK +36D
 0203            ECADR  RSTACK +34D
 0204            ECADR  RSTACK +32D
 0205            ECADR  RSTACK +30D
 0206            ECADR  RSTACK +28D
 0207            ECADR  RSTACK +26D
 0208            ECADR  RSTACK +24D
 0209            ADRES  RSTACK +22D
 0210            ADRES  RSTACK +20D
 0211            ADRES  RSTACK +18D
 0212            ADRES  RSTACK +16D
 0213            ADRES  RSTACK +14D
 0214            ADRES  RSTACK +12D
 0215            ADRES  RSTACK +10D
 0216            ADRES  RSTACK +8D
 0217            ADRES  RSTACK +6
 0218            ADRES  RSTACK +4
 0219            ADRES  RSTACK +2
 0220            ADRES  RSTACK
P0221  2         NOMINAL AURORA DOWNLIST.
 0222   NOMDNLST ECADR  UPLOCK
 0223            ECADR  DATAPL +6
 0224            ECADR  DATAPL +4
 0225            ECADR  DATAPL +2
 0226            ECADR  DATAPL
 0227            ECADR  VLAUN +4
 0228            ECADR  VLAUN
 0229            ECADR  ANGX
 0230            ECADR  ANGY
 0231            ECADR  ANGZ
 0232            ECADR  INTY
 0233            ECADR  DRIFTT
 0234            ECADR  DRIFTI
 0235            ECADR  DRIFTO
 0236            ECADR  MARKSTAT
 0237            ECADR  THETAD +2
 0238            ECADR  THETAD
 0239            ECADR  TANG
 0240            ECADR  LASTYCMD
 0241            ECADR  LMPCMD
 0242            ECADR  REDOCTR         INCLUDES FAILREG.
 0243            ECADR  STATE +2
 0244            ECADR  STATE
 0245            ECADR  OPTY
 0246            ECADR  CDUZ
 0247            ECADR  CDUX
 0248            ADRES  FORVEL
 0249            ADRES  FINALT
 0250            ADRES  ALTSAVE
 0251            ADRES  ALTRATE
 0252            ADRES  ALT
 0253            ADRES  TIMEHOLD
 0254            ADRES  OPTYHOLD
 0255            ADRES  SAMPLSUM
 0256            ADRES  OLDATAGD
 0257            ADRES  RADMODES
 0258            ADRES  PIPAZ
 0259            ADRES  PIPAX
 0260   ENDDNTMS EQUALS
LINS   2AGC BLOCK TWO SELF-CHECK
 0001  2         BANK   20
 0002   SBIT1    EQUALS BIT1
 0003   SBIT2    EQUALS BIT2
 0004   SBIT3    EQUALS BIT3
 0005   SBIT4    EQUALS BIT4
 0006   SBIT5    EQUALS BIT5
 0007   SBIT6    EQUALS BIT6
 0008   SBIT7    EQUALS BIT7
 0009   SBIT8    EQUALS BIT8
 0010   SBIT9    EQUALS BIT9
 0011   SBIT10   EQUALS BIT10
 0012   SBIT11   EQUALS BIT11
 0013   SBIT12   EQUALS BIT12
 0014   SBIT13   EQUALS BIT13
 0015   SBIT14   EQUALS BIT14
 0016  2SBIT15   EQUALS BIT15
 0017   S+ZERO   EQUALS ZERO
 0018   S+1      EQUALS BIT1
 0019   S+2      EQUALS BIT2
 0020   S+3      EQUALS THREE
 0021   S+4      EQUALS FOUR
 0022   S+5      EQUALS FIVE
 0023   S+6      EQUALS SIX
 0024   S+7      EQUALS SEVEN
 0025   S8BITS   EQUALS LOW8            00377
 0026   CNTRCON  OCTAL  00051           USED IN CNTRCHK
 0027   ERASCON1 OCTAL  00062           USED IN ERASCHK
 0028   ERASCON2 OCTAL  01374           USED IN ERASCHK
 0029   ERASCON6 OCTAL  01400           USED IN ERASCHK
 0030   ERASCON3 OCTAL  01462           USED IN ERASCHK
 0031   ERASCON4 OCTAL  01774           USED IN ERASCHK
 0032   S10BITS  EQUALS LOW10           01777, USED IN ERASCHK
 0033   SBNK03   EQUALS PRIO6           06000, USED IN ROPECHK
 0034   S13BITS  OCTAL  17777
 0035   CONC+S1  OCTAL  25252           USED IN CYCLSHFT
 0036   OVCON    OCTAL  37737           USED IN RUPTCHK
 0037   DVCON    OCTAL  37776
 0040   CONC+S2  OCTAL  52400           USED IN CYCLSHFT
 0041   ERASCON5 OCTAL  76777
 0042   S-7      OCTAL  77770
 0043   S-4      EQUALS NEG4
 0044   S-3      EQUALS NEG3
 0045   S-2      EQUALS NEG2
 0046   S-1      EQUALS NEGONE
 0047  2S-ZERO   EQUALS NEG0
 0048            EBANK= 3
 0049   ADRS1    ADRES  SKEEP1
 0050   SRADRS   ADRES  SR
 00501  SELFADRS ADRES  SELFCHK         SELFCHK RETURN ADDRESS. SHOULD BE PUT
A00502                                  IN SELFRET WHEN GOING FROM SELFCHK TO
A00503                                  SHOWSUM AND PUT IN SKEEP1 WHEN GOING
A00504 2                                FROM SHOWSUM TO SELF-CHECK.
 0051   ERRORS   CA     Q
 0052            TS     SFAIL           SAVE Q FOR FAILURE LOCATION
 0053            INCR   ERCOUNT         KEEP TRACK OF NUMBER OF MALFUNCTIONS.
 0054            TC     ALARM
 0055            OCT    01102           SELF-CHECK MALFUNCTION INDICATOR
 0056            CCS    SMODE
 0057            CA     S+ZERO
 0058            TS     SMODE
 0059            TC     SELFCHK         GO TO IDLE LOOP
 0060  2         TC     SFAIL           CONTINUE WITH SELF-CHECK
 0061   +0CHK    CS     A
 0062   -0CHK    CCS    A
 0063            TCF    ERRORS
 0064            TCF    ERRORS
 0065            TCF    ERRORS
 0066  2         TC     Q
 0067   +1CHK    CS     A
 0068   -1CHK    CCS    A
 0069            TCF    ERRORS
 0070            TCF    ERRORS
 0071            CCS    A
 0072            TCF    ERRORS
 0073  2         TC     Q
 0074   SMODECHK EXTEND
 0075            QXCH   SKEEP1
 0076            TC     CHECKNJ         CHECK FOR NEW JOB
 0077            CCS    SMODE
 0078            TC     SOPTIONS
 0079            TC     SMODECHK +2     TO BACKUP IDLE LOOP
 0080            TC     SOPTIONS
 00801           INCR   SCOUNT
 0081  2         TC     SKEEP1          CONTINUE WITH SELF-CHECK
 0082   SOPTIONS AD     S-7
 0083            EXTEND
 0084            BZMF   +3              FOR OPTIONS BELOW NINE.
 0085   BNKOPTN  TC     POSTJUMP        GO TO ANOTHER BANK FOR OPTIONS ABOVE 8.
 0086            CADR   SBNKOPTN
 0087            INCR   SCOUNT          FOR OPTIONS BELOW NINE.
 0088  2         AD     S+7
 0089            INDEX  A
 0090            TC     SOPTION1
 0091   SOPTION1 TC     TC+TCF
 0092   SOPTION2 TC     IN-OUT1
 0093   SOPTION3 TC     COUNTCHK
 0094   SOPTION4 TC     ERASCHK
 0095   SOPTION5 TC     ROPECHK
 0096   SOPTION6 TC     MPNMBRS
 0097   SOPTION7 TC     DVCHECK
 0098  2SOPTON10 TC     SKEEP1          CONTINUE WITH SELF-CHECK
 0099  2SELFCHK  TC     SMODECHK        ** CHARLEY, COME IN HERE
R0100   TC+TCF CHECKS ALL OF THE PULSES OF TCF AND ALL OF THE PULSES OF TC
R0101   EXCEPT ABILITY TO TC TO ERASABLE.
R0102   ALSO FIRST TIME CS FIXED MEMORY IS USED
 0103   TC+TCF   TC     +2
 0104            TC     CCSCHK
 0105            TCF    +2              $ TCF FIXED MEMORY
 0106            TC     ERRORS
 0107            CS     S+3             $ CS FIXED MEMORY
 0108            TC     Q               $
 0109  2         TC     ERRORS
R0110   CCSCHK CHECKS ALL OF CCS EXCEPT RB WG.
R0111   ALSO CHECKS TS ERASABLE, CS SC, AND CS ERASABLE MEMORY.
 0112   CCSCHK   CCS    A               $ CCS SC, C(A) = -3
 0113            TC     ERRORS
 0114            TC     ERRORS
 0115            TC     +2
 0116            TC     ERRORS
 0117            CCS    A               $ C(A) = +2, RESULT OF CCS -NUMBER
 0118            TC     +4
 0119            TC     ERRORS
 0120            TC     ERRORS
 0121            TC     ERRORS
 0122            TS     SKEEP1          $ TS ERASABLE
 0123            CCS    SKEEP1          $ CCS ERASABLE, C(A) = +1, RESULT OF
 0124            TC     +4              CCS +NUMBER
 0125            TC     ERRORS
 0126            TC     ERRORS
 0127            TC     ERRORS
 0128            CCS    A               $ C(A) = +0, RESULT OF CCS +1, CHECKS CI
 0129            TC     ERRORS
 0130            TC     +3
 0131            TC     ERRORS
 0132            TC     ERRORS
 0133            CS     A               $ CS SC
 0134            CCS    A               $ C(A) = -0, RESULT OF CCS +0
 0135            TC     ERRORS
 0136            TC     ERRORS
 0137            TC     ERRORS
 0138            CCS    A               $ RESULT OF CCS -0
 0139            TC     ERRORS
 0140            TC     +3
 0141            TC     ERRORS
 0142            TC     ERRORS
 0143            CS     SKEEP1          $ CS ERASABLE. ALSO CHECKS BACK INTO
 0144  2         TC     -1CHK           ERASABLE SEQUENCE.
R0145   BZMFCHK CHECKS ALL PULSES OF BZMF.
R0146   ALSO CHECKS CA FIXED MEMORY.
 0147   BZMFCHK  CAF    SBIT9           $ CA FIXED MEMORY
 0148            EXTEND
 0149            BZMF   ERRBZMF
 0150            CS     A
 0151            EXTEND
 0152            BZMF   +2              $
 0153            TC     ERRORS
 0154            CA     S+MAX
 0155            AD     S+1
 0156            EXTEND
 0157            BZMF   ERRBZMF2        $ + OVERFLOW, CHECK 01-0000
 0158            CA     S+ZERO
 0159            EXTEND
 0160            BZMF   +2              $
 0161            TC     ERRORS
 0162            CS     A
 0163            EXTEND
 0164            BZMF   +4              $
 0165            TC     ERRORS
 0166   ERRBZMF  TC     ERRORS          FROM BZMF WITH +NON-ZERO
 0167  2ERRBZMF2 TC     ERRORS          OVERFLOW WITH +0
R0168   RESTORE1 AND 2 CHECKS INSTRUCTIONS (WITH STAR) ABILITY TO READ BACK INTO
R0169   ERASABLE MEMORY. NOT NORMALLY INTERESTED IN CONTENTS OF A REGISTER.
R0170   FIRST TIME MANY INSTRUCTIONS ARE USED.
R0171   RESTORE1 ALSO CHECKS INDEX (WITHOUT EXTRACODE) ERASABLE, CA ERASABLE,
R0172   AND MASK ERASABLE.
 0173   RESTORE1 CAF    SRADRS          ADDRESS OF SR
 0174            TS     SKEEP7
 0175            CA     S8BITS          00377
 0176            NDX    SKEEP7          $ INDEX ERASABLE                       *
 0177            TS     0000            TS SR, C(SR) = 00177
 0178            CCS    SR              C(SR) = 00077                          *
 0179            NDX    SKEEP7          CHECKS C(SKEEP7) CORRECT
 0180            CS     0000            C(SR) = 00037
 0181            AD     SR              C(SR) = 00017                          *
 0182            EXTEND
 0183            MSU    SR              C(SR) = 00007                          *
 0184            EXTEND
 0185            SU     SR              C(SR) = 00003                          *
 0186            CA     SR              $ C(SR) = +1, C(A) = +3, CA ERASABLE   *
 0187            MASK   SR              $ B(SR) = C(SR) = +1, MASK ERASABLE    *
 0188            TC     +1CHK
 0189            EXTEND
 0190            MP     SR
 0191            EXTEND
 0192            DV     SR
 0193            CA     SR              $ CA ERASABLE
 0194  2         TC     +1CHK           MAKES SURE MASK, MP, AND DV DO NOT EDIT.
R0195   RESTORE2 ALSO CHECKS XCH ERASABLE,INDEX (WITH EXTRACODE) ERASABLE AND
R0196   FIXED MEMORY, DCS ERASABLE, CA SC, AND DCA ERASABLE.
 0197   RESTORE2 CAF    ADRS1           ADDRESS OF SKEEP1
 0198            TS     SKEEP6
 0199            CA     S-1
 0200            TS     SKEEP1          -1
 0201            CS     A
 0202            XCH    SKEEP1          $ XCH ERASABLE, C(SKEEP1) = +1
 0203            XCH    SKEEP2          $ XCH ERASABLE, C(SKEEP2) = -1
 0204            EXTEND
 0205            NDX    SKEEP6          $ NDX ERASABLE                         *
 0206            DCA    0000            DCA ERASABLE                           *
 0207            EXTEND
 0208            NDX    ADRS1           $ NDX FIXED MEMORY                     *
 0209            DCS    0000            $ DCS ERASABLE MEMORY                  *
 0210            TC     -1CHK           MAKES SURE DCS ERASABLE OK
 0211            CA     L               $ CA SC
 0212            TC     +1CHK
 0213            EXTEND
 0214            NDX    SKEEP6          MAKE SURE C(SKEEP6) IS STILL CORRECT
 0215            DCA    0000            $ DCA ERASABLE
 0216            TC     +1CHK
 0217            CA     L
 0218  2         TC     -1CHK
R0219   RESTORE3 CHECKS ABILITY TO RESTORE INSTRUCTIONS BACK INTO ERASABLE
R0220   MEMORY. IT IS ONLY NECESSARY TO RESTORE ONE INSTRUCTION BECAUSE THE
R0221   G REGISTER DOES NOT CHANGE.
R0222   ALSO CHECKS TC TO ERASABLE MEMORY.
 0223   RESTORE3 CA     SBIT15          CS
 0224            TS     SKEEP1          40000
 0225            CA     S+2             TC Q
 0226            TS     SKEEP2
 0227            CA     S+1             +1
 0228            TC     SKEEP1          $ TC ERASABLE
 0229            TC     -1CHK           FIRST TIME BACK FROM ERASABLE.
 0230            TC     SKEEP1
 0231  2         TC     -0CHK           SECOND TIME BACK FROM ERASABLE.
R0232   BZFCHK CHECKS ALL PULSES OF BZF.
 0233   BZFCHK   CAF    S+5
 0234            EXTEND
 0235            BZF    ERRBZF1         $
 0236            CS     A
 0237            EXTEND
 0238            BZF    ERRBZF2         $
 0239            CA     S+MAX
 0240            AD     S+1             01-00000
 0241            EXTEND
 0242            BZF    ERRBZF3         $
 0243            CS     A
 0244            EXTEND
 0245            BZF    ERRBZF4         $
 0246            CAF    S+ZERO
 0247            EXTEND
 0248            BZF    +2              $
 0249            TC     ERRORS
 0250            CS     A
 0251            EXTEND
 0252            BZF    +6              $
 0253            TC     ERRORS
 0254   ERRBZF1  TC     ERRORS          +NON-ZERO
 0255   ERRBZF2  TC     ERRORS          -NON-ZERO
 0256   ERRBZF3  TC     ERRORS          01-00000
 0257  2ERRBZF4  TC     ERRORS          10-37777
R0258   DXCH+DIM CHECKS ALL PULSES OF DXCH AND DIM.
R0259   ALSO CHECKS TS WITH OVERFLOW, TS SC, CA SC, AND AD ERASABLE.
 0260   DXCH+DIM CA     S+MAX
 0261            AD     S+2             OVERFLOW WITH +1
 0262            TS     SKEEP1          $ TS WITH OVERFLOW, +1
 0263            TC     ERRORS
 0264            CS     A
 0265            TS     SKEEP2
 0266            CS     S+MAX
 0267            TS     L               $ TS SC,  40000
 0268            CS     A               37777
 0269            DXCH   SKEEP1          $ DXCH ERASABLE
 0270            TC     +1CHK
 0271            CA     L               $ CA SC
 0272            TC     -1CHK
 0273            EXTEND
 0274            DIM    SKEEP1          $ DIM ERASABLE, DIM + NUMBER, 37776
 0275            EXTEND
 0276            DIM    SKEEP2          $ DIM - NUMBER, 40001
 0277            CA     S+MAX           37777
 0278            AD     SKEEP2          $ AD ERASABLE, +1
 0279            TC     +1CHK
 0280            CS     S+MAX           40000
 0281            AD     SKEEP1          -1
 0282            TC     -1CHK
 0283            CA     S+1             +1
 0284            EXTEND
 0285            DIM    A               $ DIM SC, DIM +1
 0286            EXTEND
 0287            DIM    A               $ DIM -0
 0288            TC     -0CHK
 0289            EXTEND
 0290            DIM    A               $ DIM +0
 0291  2         TC     +0CHK
R0292   DAS+INCR CHECKS ALL PULSES OF DAS AND INCR.
R0293   ALSO CHECKS DCA FIXED, LXCH SC, DCA ERASABLE, AD ERASABLE, DCS FIXED,
R0294   DCS ERASABLE, AND XCH SC.
 0295   DAS+INCR CA     S-1
 0296   DAS++    TS     L               -1
 0297            CA     S+2             +2
 0298            DAS    A               $ DAS SC, C(A) = +4 AND C(L) = -2
 0299            AD     S-3             $ AD FIXED MEMORY
 0300            TC     +1CHK
 0301            CA     S+1
 0302            AD     L               $ AD SC, -1
 0303            TC     -1CHK
R0304   DAS WITH INTERFLOW IN LOW ORDER AND NET OVERFLOW
 0305   DAS+-    EXTEND
 0306            DCA    S+MAX           $DCA FIXED MEMORY
 0307            DXCH   SKEEP3          37777, 40000
 0308            CA     S-2
 0309            TS     L
 0310            CA     S+3             C(A) = +3, C(L) = -2
 0311            DAS    SKEEP3          $ DAS ERASABLE
 0312            LXCH   A               $ LXCH SC
 0313            TC     +0CHK
 0314            CA     L
 0315            TC     +1CHK
 0316            EXTEND
 0317            DCA    SKEEP3          $ DCA ERASABLE
 0318            LXCH   A               C(A) = -1, C(L) = +1
 0319            TC     -1CHK
 0320            CA     L
 0321            TC     +1CHK
R0322   INCRCHK CHECKS ALL INCR PULSES EXCEPT WOVR.
 0323   INCRCHK  INCR   SKEEP4          $ INCR ERASABLE, -0
 0324            AD     SKEEP4          $ AD ERASABLE
 0325            TC     -0CHK
 0326            INCR   A               $ INCR SC, +1
 0327            TC     +1CHK
R0328   DAS WITH OVERFLOW IN LOW ORDER AND NET UNDERFLOW
 0329   DAS-+    EXTEND
 0330            DCS    S+MAX           $ DCS FIXED MEMORY
 0331            DXCH   SKEEP1          40000, 37777
 0332            CA     S+3             +3
 0333            TS     L
 0334            CS     A               -3
 0335            DAS    SKEEP1          $
 0336            TC     -1CHK
 0337            EXTEND
 0338            DCS    SKEEP1          $ DCS ERASABLE (+1, -2)
 0339            XCH    L               $ XCH SC (-2, +1)
 0340            AD     S+1
 0341            TC     -1CHK
 0342            CA     L
 0343  2         TC     +1CHK
R0344   MPCHK CHECKS ALL PULSES OF MP, AUG, AND ADS.
 0345   MPCHK    CA     S+1
 0346            EXTEND
 0347            AUG    A               $ AUG SC, +2
 0348            TS     SKEEP5          +2
 0349            CS     A
 0350            TS     Q               -2
 0351            CS     A
 0352   MP++     EXTEND
 0353            MP     S+MAX           $ MP FIXED MEMORY, +1, 37776
 0354            AD     L               37777
 0355   MP+-     EXTEND
 0356            MP     Q               $ MP SC, -1, 40001
 0357            ADS    L               $ ADS SC, 40000
 0358            AD     DVCON
 0359            TC     -1CHK
 0360            CA     L
 0361   MP-+     EXTEND
 0362            MP     SKEEP5          $ MP ERASABLE, -1, 40001
 0363            TS     SKEEP6
 0364            EXTEND
 0365            AUG    SKEEP6          $ AUG ERASABLE, -2
 0366            AD     L               40000
 0367   MP--     EXTEND
 0368            MP     SKEEP6          $ +1, 37776
 0369            TC     +1CHK
 0370            CS     L               40001
 0371            AD     DVCON
 0372            TC     -0CHK
 0373            CA     S+1
 0374            ADS    SKEEP6          $ ADS ERASABLE, +1
 0375            TC     -1CHK
 0376            CA     SKEEP6
 0377  2         TC     -1CHK
R0378   DVCH AND DVQXCHK CHECK ALL OF PULSES OF DV AND QXCH.
R0379   ALSO CHECKS TS WITH UNDERFLOW
 0380   DVCHK    CA     SBIT14          20000
 0381            TS     SKEEP1
 0382            AD     A               OVERFLOW
 0383            AD     S+1
 0384            TS     L               $ TS SC WITH OVERFLOW, +1
 0385            TC     ERRORS
 0386            CS     A
 0387            TS     SKEEP2          -1
 0388            CA     S-ZERO          -0
 0389            LXCH   SKEEP1          $ LXCH ERASABLE
 0390   DV++     EXTEND
 0391            DV     SKEEP1          $ DV ERASABLE, C(A) = 20000, C(L) = +0
 0392            CS     A
 0393            LXCH   A
 0394            TC     +0CHK
 0395   DV--     EXTEND
 0396            DV     SKEEP2          $ 20000, +0
 0397            TS     SKEEP4          20000
 0398            CS     A
 0399            TS     SKEEP3          -(20000)
 0400            AD     SBIT14
 0401            TC     -0CHK
 0402            CA     L
 0403            TC     -0CHK
 0404   DV+-     CA     S+MAX
 0405            TS     L
 0406            CA     S13BITS
 0407            EXTEND
 0408            DV     SKEEP3          $ -(37777), +(17777)
 0409            XCH    L
 0410            CS     A
 0411   DV-+     EXTEND
 0412            DV     SKEEP4          $ -(37777), -(17777)
 0413            AD     DVCON
 0414            TC     -1CHK
 0415            CA     S+MAX
 0416            XCH    L               ALSO PUTS 37777 IN L FOR DV-+,-
 0417            AD     SBIT14
 0418            TC     +1CHK
 0419   DV-+,+   CS     S13BITS         -(17777)
 0420            EXTEND
 0421            DV     SKEEP4
 0422            AD     L               -(37775)
 0423            AD     DVCON
 0424            TC     +1CHK
 0425            XCH    L
 0426            TC     -1CHK           ALSO PUTS +0 IN L FOR DVQXCH
 0427   DVQXCHK  CS     DVCON
 0428            TS     Q               40001
 0429            CS     A
 0430            EXTEND
 0431            DV     Q               $ DV SC, -(37777), +(37776)
 0432            EXTEND
 0433            QXCH   L               $ QXCH SC, C(L) = 40001, C(Q) = 37776
 0434            AD     Q
 0435            TC     -1CHK
 0436            CA     L
 0437            AD     S+MAX
 0438            TC     +1CHK
 0439            EXTEND
 0440            QXCH   SKEEP1          $ QXCH ERAS., C(Q) = +1, C(SKEEP1) = +3
 0441            CA     Q
 0442            TC     +1CHK
 0443            CS     SKEEP1          -3
 0444            AD     S+2
 0445  2         TC     -1CHK
R0446   MSUCHK CHECKS ALL PULSES OF MSU EXCEPT RB WG.
 0447   MSUCHK   CA     S+ZERO
 0448            TS     SKEEP1          +0
 0449            CS     A
 0450            TS     SKEEP2          -0
 0451            EXTEND
 0452            MSU    A               $ MSU SC, +0
 0453            TC     +0CHK
 0454            EXTEND
 0455            MSU    SKEEP2          $ MSU ERASABLE, +1
 0456            TC     +1CHK
 0457            EXTEND
 0458            DCA    S+MAX
 0459            EXTEND
 0460            MSU    L               $ CHECKS RUS WA, ALSO -1 FROM NEG. NO.
 0461            TS     A
 0462            TC     +2
 0463            TC     ERRORS
 0464  2         TC     -1CHK
R0465   MASKCHK  FINISHES CHECKING MASK INSTRUCTION.
 0466   MASKCHK  CA     S+7
 0467            TS     L
 0468            MASK   S-7             $ MASK FIXED MEMORY
 0469            TC     +0CHK
 0470            CA     S+1
 0471            MASK   L               $ MASK SC
 0472  2         TC     +1CHK
R0473   NDX+SU FINISHES CHECKING BOTH INDEX INSTRUCTIONS. ALSO CHECKS ALL OF SU
R0474   EXCEPT RB WG.
 0475   NDX+SU   CA     S+1
 0476            TS     L
 0477            TS     SKEEP1
 0478            NDX    A               $ NDX SC
 0479            AD     0000            AD L, +2
 0480            EXTEND
 0481            SU     SKEEP1          $ SU ERASABLE
 0482            TC     +1CHK
 0483            EXTEND
 0484            NDX    L               $ NDX SC
 0485            SU     0000            $ SU SC, SU L
 0486  2         TC     -1CHK
R0487   D--SC CHECKS DCS SC, DXCH SC, AND DCA SC.
 0488   D--SC    CA     S+2
 0489            TS     L               +2
 0490            CA     S+1
 0491            EXTEND
 0492            DCS    A               $ DCS SC, C(L) = -2
 0493            TC     -1CHK
R0494   AFTER DXCH C(A) = B(Q) = +3, C(L) = B(A) = +0, C(Q) = B(L) = -1.
 0495            DXCH   L               $ DXCH SC
 0496            TS     SKEEP3
 0497            AD     Q
 0498            TC     +1CHK
 0499            CA     L
 0500            TC     +0CHK
 0501            CA     S-1
 0502            TS     Q
 0503            CS     A
 0504            EXTEND
R0505   AFTER DCA C(A) = C(L) = C(Q) = B(Q) = -1.
 0506            DCA    L               $ DCA SC
 0507            AD     Q
 0508            AD     SKEEP3
 0509            TC     +1CHK
 0510            CA     L
 0511  2         TC     -1CHK
R0512   D--LCHK CHECKS THAT OVERFLOW IS LOST IN PROCESS OF GOING THROUGH L REG.
R0513   ALSO CHECKS THAT Q WILL HOLD 16 BITS
 0514   D--LCHK  CA     S-2
 0515            TS     Q
 0516            CA     S-MAX
 0517            ADS    Q
 0518            CS     Q
 0519            TS     A
 0520            TC     ERRORS
 0521            EXTEND
 0522            DCA    L
 0523            TS     A
 0524            TC     +2
 0525            TC     ERRORS
 0526  2         TC     -1CHK
R0527   CHECKS OVERFLOW, UNDERFLOW,END-AROUND-CARRY, AND SIGN CHANGE OF ADDER.
R0528   ALSO CHECKS ADS SC WITH OVERFLOW AND TS A WITH UNDERFLOW
 0529   ADDRCHK  CA     SBIT14          20000
 0530            TS     Q
 0531            ADS    Q               $ ADS SC, OVERFLOW
 0532            ADS    Q               UNDERFLOW
 0533            TS     A               $ TS SC WITH UNDERFLOW
 0534            TC     ERRORS
 0535            ADS    Q
 0536  2         TC     +1CHK
R0537   RUPTCHK CHECKS THAT INTERRUPT DOES NOT OCCUR WHILE OVERFLOW OR UNDERFLOW
R0538   IS IN THE A REGISTER. ALSO CHECKS THAT INHINT RELINT WORK PROPERLY.
 0539   RUPTCHK  INHINT
 0540            CA     S+ZERO
 0541            TS     ZRUPT
 0542            RELINT
 0543            AD     TIME4
 0544            TS     SKEEP1
 0545   TENMS    CS     SKEEP1
 0546            AD     TIME4           WAIT FOR NEXT TIME4 INCREMENT
 0547            EXTEND
 0548            BZF    TENMS
 0549            INHINT
 0550            CA     ZRUPT
 0551            EXTEND
 0552            BZF    +2              NO INTERRUPT.
 0553            TC     RUPTCHK         THERE WAS AN INTERRUPT. START AGAIN.
 0554            CAF    S+1             2 1/2 MS UNTILE NEXT T3 INTERRUPT.
 0555            TC     WAITLIST
 0556            EBANK= LST1
 0557            2CADR  TSKADRS
 0558            CA     S+MAX
 0559            AD     OVCON           CONTROLS TIME SPENT IN OF-UF LOOP
 0560            RELINT
 0561   WAIT     CS     A
 0562            CCS    A
 0563            TC     INHNTCHK
 0564   RUPTCON  ADRES  C(BRUPT)
 0565            AD     S+2
 0566            TC     WAIT
 0567   INHNTCHK INHINT                 T3 RUPT SHOULD BE WAITING
 0568            TS     SKEEP5
 0569            TC     ERRORS
 0570            RELINT
 0571   C(BRUPT) CS     ZRUPT           INTERRUPT SHOULD HAPPEN HERE
 0572            EXTEND
 0573            BZF    ERRORS          MAKES SURE AN INTERRUPT DID HAPPEN
 0574            TC     +5              END OF RUPTCHK
 0575   TSKADRS  CS     ZRUPT
 0576            AD     RUPTCON
 0577            TC     -1CHK
 0578  2         TC     TASKOVER
 0579  2         TC     SMODECHK
R0580   IN-OUT1 CHECKS ALL PULSES OF WRITE AND READ
 0581   IN-OUT1  CA     S-1
 0582   WRITECHK EXTEND
 0583            WRITE  Q
 0584            LXCH   Q               PUT C(Q) IN L
 0585            TC     -1CHK
 0586   READCHK  EXTEND                 C(L) = 77776
 0587            READ   L
 0588            TC     -1CHK
 0589            CA     L
 0590  2         TC     -1CHK
R0591   IN-OUT2 CHECKS ALL PULSES OF ROR AND WOR
 0592   IN-OUT2  CS     S+3
 0593   RORCHK   TS     L               77774
 0594            CA     DVCON           37776
 0595            EXTEND
 0596            ROR    L               $ ROR, -1
 0597            TC     -1CHK
 0598   WORCHK   CA     DVCON           C(L) STILL 77774
 0599            EXTEND
 0600            WOR    L               $ WOR, -1
 0601            TC     -1CHK
 0602            CA     L
 0603  2         TC     -1CHK
R0604   IN-OUT3 CHECKS ALL PULSES OF RAND, WAND, AND RXOR
 0605   IN-OUT3  CS     DVCON
 0606   RANDCHK  TS     L               40001
 0607            CA     S13BITS         17777
 0608            EXTEND
 0609            RAND   L               $ RAND, +1
 0610            TC     +1CHK
 0611   WANDCHK  CA     S13BITS         C(L) STILL 40001
 0612            EXTEND
 0613            WAND   L               $ WAND, +1
 0614            TC     +1CHK
 0615            CS     S+5
 0616            XCH    L               ALSO PUT -5 IN L FOR RXORCHK
 0617            TC     +1CHK
 0618   RXORCHK  CA     S+6
 0619            EXTEND
 0620            RXOR   L               $ RXOR, -3
 0621            AD     S+2
 0622            TC     -1CHK
 0623            CA     L
 0624            AD     S+4
 0625  2         TC     -1CHK
 0626  2         TC     SMODECHK
R0627   COUNTCHK COUNTS UP 14 BIT NUMBER WITH SIGN.
R0628   TAKES APPROXIMATELY 8.7 SECONDS.
R0629   ** PUT IN CCS NEWJOB FOR ROPE.
 0630   COUNTCHK EXTEND
 0631            DCA    S+MAX
 0632            DXCH   SKEEP6          PUT 37777 IN SKEEP6 AND 40000 IN SKEEP7
 0633   +LOOP    CA     SKEEP6
 0634            XCH    Q
 0635            EXTEND
 0636            DCS    L
 0637            CCS    A
 0638            TC     -NMBR
 0639            TC     ENDCOUNT
 0640            TS     SKEEP6
 0641            AD     SKEEP7
 0642            TC     -1CHK
 0643            INCR   SKEEP7
 0644            TC     +LOOP
 0645   -NMBR    AD     L
 0646            TC     -1CHK
 0647            TC     CHECKNJ         CHECK FOR NEW JOB
 0648            CS     SKEEP6
 0649            TC     +LOOP +1
 0650   ENDCOUNT CA     SKEEP7          -0
 0651            AD     SKEEP6          SKEEP6 SHOULD BE +0
 0652  2         TC     -0CHK
R0653   O-UFLOW COUNTS DOWN OVERFLOW AND UNDERFLOW NUMBERS.
R0654   TAKES APPROXIMATELY 10.8 SECONDS
 0655   O-UFLOW  CA     S-MAX
 0656            TS     SKEEP5          40000
 0657            CS     A
 0658   OFLOOP   INHINT
 0659            AD     S+MAX
 0660            AD     S+1
 0661            XCH    Q
 0662            CCS    Q
 0663            TC     -NMBRS
 0664            TC     ERRORS          CAN PUT IN CONSTANT
 0665            TS     SKEEP3
 0666            TC     ERRORS
 0667            CA     SKEEP3
 0668            AD     SKEEP5
 0669            TC     -1CHK
 0670            RELINT
 0671            TC     CHECKNJ         CHECK FOR NEW JOB
 0672            CA     SKEEP4
 0673            EXTEND
 0674            DIM    SKEEP5
 0675            TC     OFLOOP
 0676   -NMBRS   TS     SKEEP4
 0677            TC     ENDOFUF
 0678            CA     SKEEP4
 0679            AD     SKEEP5
 0680            TC     -1CHK
 0681            CA     SKEEP5
 0682            AD     S-MAX
 0683            AD     S-1
 0684            TC     OFLOOP +3
 0685   ENDOFUF  CA     SKEEP5
 0686            TC     -0CHK
 0687            CS     SKEEP4
 0688            AD     DVCON
 0689            TC     -1CHK
 0690  2         RELINT
 0691  2         TC     SMODECHK
R0692   SKEEP7 HOLDS LOWEST OF TWO ADDRESSES BEING CHECKED.
R0693   SKEEP6 HOLDS B(X+1).
R0694   SKEEP5 HOLDS B(X).
R0695   SKEEP4 CONTROLS CHECKING OF NON-SWITCHABLE ERASABLE MEMORY WITH
R0696   BANK NUMBERS IN EB.
R0697   SKEEP3 HOLDS LAST ADDRESS BEING CHECKED (HIGHEST ADDRESS).
R0698   SKEEP2 HOLDS C(EBANK) DURING CHECKNJ
R0699   ERASCHK TAKES APPROXMATELY 7 SECONDS
 0700   ERASCHK  CA     S+1
 0701            TS     SKEEP4
 0702   0EBANK   CA     S+ZERO
 0703            TS     EBANK
 0704            CA     ERASCON3        01462
 0705            TS     SKEEP7          STARTING ADDRESS
 0706            CA     S10BITS         01777
 0707            TS     SKEEP3          LAST ADDRESS CHECKED
 0708  2         TC     ERASLOOP
 0709   E134567B CA     ERASCON6        01400
 0710            TS     SKEEP7          STARTING ADDRESS
 0711            CA     S10BITS         01777
 0712            TS     SKEEP3          LAST ADDRESS CHECKED
 0713  2         TC     ERASLOOP
 0714   2EBANK   CA     ERASCON6        01400
 0715            TS     SKEEP7          STARTING ADDRESS
 0716            CA     ERASCON4        01774
 0717            TS     SKEEP3          LAST ADDRESS CHECKED
 0718  2         TC     ERASLOOP
 0719   NOEBANK  TS     SKEEP4          +0
 0720            CA     ERASCON1        00062
 0721            TS     SKEEP7          STARTING ADDRESS
 0722            CA     ERASCON2        01374
 0723  2         TS     SKEEP3          LAST ADDRESS CHECKED
 0724   ERASLOOP INHINT
 0725            CA     SKEEP7
 0726            TS     L
 0727            INCR   L
 0728            NDX    A
 0729            DXCH   0000            PUTS OWN ADDRESS IN X AND X +1
 0730            DXCH   SKEEP5          STORES C(X) AND C(X-1) IN SKEEP6 AND 5
 0731            NDX    SKEEP7
 0732            CS     0001            CS  X+1
 0733            NDX    SKEEP7
 0734            AD     0000            AD X
 0735            TC     -1CHK
 0736            EXTEND
 0737            NDX    SKEEP7
 0738            DCS    0000            COMPLEMENT OF ADDRESS OF X AND X+1
 0739            NDX    SKEEP7
 0740            DXCH   0000            PUT COMPLEMENT OF ADDRESS OF X AND X+1
 0741            NDX    SKEEP7
 0742            CS     0000            CS  X
 0743            NDX    SKEEP7
 0744            AD     0001            AD X+1
 0745            TC     -1CHK
 0746            DXCH   SKEEP5
 0747            NDX    SKEEP7
 0748            DXCH   0000            PUT B(X) AND B(X+1) BACK INTO X AND X+1
 0749            RELINT
 0750            CA     EBANK           STORES C(EBANK)
 0751            TS     SKEEP2
 0752            TC     CHECKNJ         CHECK FOR NEW JOB
 0753            CA     SKEEP2          REPLACES B(EBANK)
 0754            TS     EBANK
 0755            INCR   SKEEP7
 0756            CS     SKEEP7
 0757            AD     SKEEP3
 0758            EXTEND
 0759            BZF    +2
 0760            TC     ERASLOOP        GO TO NEXT ADDRESS IN SAME BANK
 0761            CCS    SKEEP4
 0762            TC     NOEBANK
 0763            INCR   SKEEP4          PUT +1 IN SKEEP4
 0764            CA     EBANK
 0765            AD     SBIT9
 0766            TS     EBANK
 0767            AD     ERASCON5        76377 CHECK FOR BANK E3
 0768            EXTEND
 0769            BZF    2EBANK
 0770            CCS    EBANK
 0771            TC     E134567B        GO TO EBANKS 1,3,4,5,6, AND 7
 0772            CA     ERASCON6        END OF ERASCHK
 0773            TS     EBANK
R0774   CNTRCHK PERFORMS A CS OF ALL REGISTERS FROM OCT. 61 THROUGH OCT. 10.
R0775   INCLUDED ARE ALL COUNTERS, T6-1, CYCLE AND SHIFT, AND ALL RUPT REGISTERS
 0776   CNTRCHK  CAF    CNTRCON         00051
 0777   CNTRLOOP TS     SKEEP2
 0778            AD     SBIT4           +10 OCTAL
 0779            INDEX  A
 0780            CS     0000
 0781            CCS    SKEEP2
 0782  2         TC     CNTRLOOP
R0783   CYCLSHFT CHECKS THE CYCLE AND SHIFT REGISTERS
 0784   CYCLSHFT CA     CONC+S1         25252
 0785            TS     CYR             C(CYR) = 12525
 0786            TS     CYL             C(CYL) = 52524
 0787            TS     SR              C(SR) = 12525
 0788            TS     EDOP            C(EDOP) = 00125
 0789            AD     CYR             37777         C(CYR) = 45252
 0790            AD     CYL             00-12524      C(CYL) = 25251
 0791            AD     SR              00-25251      C(SR) = 05252
 0792            AD     EDOP            00-25376      C(EDOP) = +0
 0793            AD     CONC+S2         C(CONC+S2) = 52400
 0794            TC     -1CHK
 0795            AD     CYR             45252
 0796            AD     CYL             72523
 0797            AD     SR              77775
 0798            AD     EDOP            77775
 0799            AD     S+1             77776
 0800  2         TC     -1CHK
 0801            INCR   SCOUNT +1
 0802            TC     SMODECHK
 0803  2         TC     ROPECHK
R0804   SKEEP1 HOLDS SUM
R0805   SKEEP2 HOLDS PRESENT CONTENTS OF ADDRESS IN ROPECHK AND SHOWSUM ROUTINES
R0806   SKEEP2 HOLDS BANK NUMBER IN LOW ORDER BITS DURING SHOWSUM DISPLAY
R0807   SKEEP3 HOLDS PRESENT ADDRESS (00000 TO 01777 IN COMMON FIXED BANKS)
R0808                                (04000 TO 07777 IN FXFX BANKS)
R0809   SKEEP3 HOLDS BUGGER WORD DURING SHOWSUM DISPLAY
R0810   SKEEP4 HOLDS BANK NUMBER
R0811   SKEEP5 COUNTS 2 SUCCESSIVE TC SELF WORDS
R0812   SKEEP6 CONTROLS ROPECHK OR SHOWSUM OPTION
R0813  2SKEEP7 CONTROLS WHEN ROUNTINE IS IN COMMON FIXED OR FIXED FIXED BANKS
 0814   STSHOSUM TC     GRABDSP
 0815            TC     PREGBSY
 0816            TC     +3
 0817   ROPECHK  CA     S-ZERO
 0818            TS     SKEEP6          ROPECHK OPTION
 0819            CA     S+ZERO
 0820            TS     SKEEP4          BANK NUMBER
 0821            CA     S+1
 0822   COMMFX   TS     SKEEP7
 0823            CA     S+ZERO
 0824            TS     SKEEP1
 0825            TS     SKEEP3
 0826            CA     S+1
 0827            TS     SKEEP5          COUNTS DOWN 2 TC SELF WORDS
 0828   COMADRS  CA     SKEEP3
 0829            AD     SKEEP4
 0830            TC     DATACALL
 0831            TC     ADSUM
 0832            AD     SBIT11          02000
 0833  2         TC     ADRSCHK
 0834   FXFX     CS     A
 0835            TS     SKEEP7
 0836            EXTEND
 0837            BZF    +3
 0838            CA     SBIT12          04000, STARTING ADDRESS OF BANK 02
 0839            TC     +2
 0840            CA     SBNK03          06000, STARTING ADDRESS OF BANK 03
 0841            TS     SKEEP3
 0842            CA     S+ZERO
 0843            TS     SKEEP1
 0844            CA     S+1
 0845            TS     SKEEP5          COUNTS DOWN 2 TC SELF WORDS
 0846   FXADRS   EXTEND
 0847            NDX    SKEEP3
 0848            DCA    0000
 0849            TC     ADSUM
 0850  2         TC     ADRSCHK
 0851   ADSUM    TS     SKEEP2
 0852            AD     SKEEP1
 0853            TS     SKEEP1
 0854            CAF    S+ZERO
 0855            AD     SKEEP1
 0856            TS     SKEEP1
 0857            CS     SKEEP2
 0858            AD     SKEEP3
 0859  2         TC     Q
 0860   ADRSCHK  CCS    A
 0861            TC     CONTINU
 0862            TC     CONTINU
 0863            TC     CONTINU
 0864            CCS    SKEEP5
 0865            TC     CONTINU +1
 0866            CA     L
 0867            TC     ADSUM
 0868            TC     SOPTION         GO TO ROPECHK SHOSUM OPTION
 0869   CONTINU  CA     S+1             MAKE SURE TWO CONSECUTIVE TC SELF WORDS
 0870            TS     SKEEP5
 0871            CCS    SKEEP6          +1 IN SKEEP6, SHOWSUM VIA EXECUTIVE
 0872            CCS    NEWJOB
 0873            TC     CHANG1
 0874            TC     +2
 0875  2         TC     CHECKNJ         -0 IN SKEEP6 FOR ROPECHK
 0876   ADRS+1   INCR   SKEEP3
 0877            CCS    SKEEP7
 0878            TC     COMADRS
 0879            TC     COMADRS
 0880            TC     FXADRS
 0881  2         TC     FXADRS
 0882   NXTBNK   CA     SKEEP4
 0883            AD     SBIT11
 0884            TS     SKEEP4
 0885            TC     +3
 0886            CA     SBIT15
 0887            TS     SKEEP4
 0888            AD     NOBANKNO        FIRST BANK NOT USED.
 0889            EXTEND
 0890            BZF    ENDSUMS
 0891            CCS    SKEEP7
 0892            TC     COMMFX
 0893            CA     S+1
 0894            TC     FXFX
 0895            CA     SBIT7           CAN BE ANY NUMBER LARGER THAN 36 DECIMAL
 0896  2         TC     COMMFX
 0897   ENDSUMS  CCS    SKEEP6
 0898            TC     ROPECHK +2      START SHOWSUM AGAIN
 0899   S+MAX    OCTAL  37777           ** S+MAX AND S-MAX MUST BE TOGETHER
 0900   S-MAX    OCTAL  40000           FOR DOUBLE PRECISION CHECKING.
 0901  2         TC     MPNMBRS -1      ROPECHK IS COMPLETED
 0902   SOPTION  CCS    SKEEP6          DECIDE ON ROPECHK OR SHOWSUM OPTION
 0903            TC     SDISPLAY
 0904   VNCON    OCTAL  00501           USED IN SHOWSUM. DISPLAY 3 REGISTERS.
 0905   NOBANKNO OCTAL  33777           * CONSTANT, COMPLEMENT OF LAST BANK +1.
R0906   CHANGE TO 33777 IF BANK 21 IS LAST BANK USED
 0907   BNKCHK   CCS    SKEEP1          WHEN C(SKEEP6) = -0
 0908            TC     +4
 0909   SCADR    FCADR  SDISPLAY        * CONSTANT, USED IN SHOWSUM ONLY
 0910            TC     +2
 0911            CA     S-1             FOR BANK 00
 0912            TS     SKEEP1
 0913            CA     SKEEP4
 0914            TC     LEFT5
 0915            CS     A
 0916            AD     SKEEP1
 0917            TC     -1CHK
 0918  2         TC     NXTBNK
R0919   INITIALIZE SKEEP6 TO +1 TO PERFORM SHOWSUM
R0920   START OF ROUTINE THAT DISPLAYS SUM OF EACH BANK
 0921   SHOWSUM  CAF    S+1
 0922            TS     SKEEP6          SHOWSUM OPTION
 0923            CAF    S+ZERO
 0924            TS     SMODE           PUT SELF-CHECK TO SLEEP
 09241           CA     SELFADRS        INITIALIZE SELFRET TO GO TO SELFCHK.
 09242           TS     SELFRET
 0925            INHINT
 0926            CAF    PRIO2
 0927            TC     NOVAC
 0928            EBANK= SELFRET
 0929            2CADR  STSHOSUM
 0930            RELINT
 0931  2         TC     ENDOFJOB
 0932   SDISPLAY CA     SKEEP4
 0933            TC     LEFT5           CYCLES LEFT 5 PLACES
 0934            XCH    SKEEP2          SKEEP2 HOLDS BANK NUMBER DURING DISPLAY
 0935            TS     SKEEP3          SKEEP3 HOLDS BUGGER WORD DURING DISPLAY
 0936   NOKILL   CAF    ADRS1           ADDRESS OF SKEEP1
 0937            TS     MPAC +2
 0938            CAF    VNCON           DISPLAY 3 REGISTERS
 0939            TC     NVSUB
 0940            TC     SBUSY
 0941            TC     FLASHON
 0942            TC     ENDIDLE
 0943            TC     +3              FINISHED WITH SHOWSUM
 0944            TC     NXTBNK
 0945            TC     NOKILL          SO CAN LOAD WITHOUT KILLING SHOWSUM
 0946            TC     FREEDSP
 09461           CA     SELFADRS        INITIALIZE SKEEP1 TO GO TO SELFCHK.
 09462           TS     SKEEP1
 0947  2         TC     ENDOFJOB
 0948   SBUSY    CAF    SCADR
 0949  2         TC     NVSUBUSY
 0950  2         TC     SMODECHK
R0951   MULTIPLY SUBROUTINE TAKES APPROXIMATELY 19 SECONDS.
R0952   (37777) X (37777 THROUGH 00001)
R0953   C(A) COUNTS DOWN.  C(L) COUNTS UP.
 0954   MPNMBRS  CAF    S+MAX
 0955            TS     SKEEP2
 0956            CAF    S+MAX
 0957            EXTEND
 0958            MP     SKEEP2
 0959            AD     L               C(A) = 37777
 0960            AD     S-MAX
 0961            TC     -0CHK
 0962            TC     CHECKNJ         CHECK FOR NEW JOB
 0963            CCS    SKEEP2
 0964            TS     SKEEP2
 0965            CCS    SKEEP2
 0966            TC     MPNMBRS +2
R0967   (-1) X (37777 THROUGH 00001)
 0968            CAF    S+MAX
 0969            TS     SKEEP2
 0970   MPHIGH1  CAF    S-1
 0971            EXTEND
 0972            MP     SKEEP2          C(A) = -0
 0973            TC     -0CHK
 0974            CA     L
 0975            AD     SKEEP2
 0976            TC     -0CHK
 0977            TC     CHECKNJ         CHECK FOR NEW JOB
 0978            CCS    SKEEP2
 0979            TS     SKEEP2
 0980            CCS    SKEEP2
 0981  2         TC     MPHIGH1
R0982   INTERCHANGE MULTIPLIER AND MULTIPLICAND
R0983   (37777 THROUGH 00001) X (37777)
R0984   C(A) COUNTS DOWN.  C(L) COUNTS UP.
 0985            CAF    S+MAX
 0986            TS     SKEEP1
 0987   MPAGAIN  CA     SKEEP1
 0988            EXTEND
 0989            MP     S+MAX
 0990            AD     L               C(A) = 37777
 0991            AD     S-MAX
 0992            TC     -0CHK
 0993            TC     CHECKNJ         CHECK FOR NEW JOB
 0994            CCS    SKEEP1
 0995            TS     SKEEP1
 0996            CCS    SKEEP1
 0997            TC     MPAGAIN
R0998   (37777 THROUGH 00001) X (-1)
 0999            CAF    S+MAX
 1000            TS     SKEEP1
 1001   MPHIGH2  CA     SKEEP1
 1002            EXTEND
 1003            MP     S-1
 1004            TC     -0CHK
 1005            CA     L
 1006            AD     SKEEP1
 1007            TC     -0CHK
 1008            TC     CHECKNJ         CHECK FOR NEW JOB
 1009            CCS    SKEEP1
 1010            TS     SKEEP1
 1011            CCS    SKEEP1
 1012  2         TC     MPHIGH2
 1013  2         TC     SMODECHK
R1014   ONCE THROUGH DIVIDE SUBROUTINE TAKES APPROXIMATELY 0.01 SECOND.
R1015   TOTAL TIME SPENT IN DIVIDE SUBROUTINE IS APPROXIMATELY 21.5 SECONDS
R1016   DIVIDE +-/17777/ +-/37777/ BY +-/20000/. THE CONTENTS OF THE A REGISTER
R1017   AND THE L REGISTER WILL HAVE OPPOSITE SIGNS BEFORE DIVISION. THE
R1018   QUOTIENT SHOULD BE +-/37774/ DEPENDING ON THE SIGN OF A AND THE SIGN
R1019   OF THE DIVISOR. THE REMAINDER = +-1 DEPENDING ON THE SIGN OF A
 1020   DVCHECK  CS     SBIT12          -(04000)
 1021            TS     SKEEP4
 1022   DVLOOP   INCR   SKEEP4
 1023   DV1CHK   CA     SBIT14          20000
 1024            TS     SKEEP1
 1025            CS     A
 1026            TS     SKEEP2
 1027   DV1++    CS     S+MAX
 1028            TS     L               40000
 1029            CA     S13BITS
 1030            EXTEND
 1031            DV     SKEEP1          +37774, +1
 1032            TS     SKEEP7          37774
 1033            CA     S-MAX
 1034            XCH    L               ALSO PUT 40000 IN L
 1035            TC     +1CHK
 1036   DV1+-    CA     S13BITS         17777
 1037            EXTEND
 1038            DV     SKEEP2          -37774, +1
 1039            AD     SKEEP7
 1040            TC     -0CHK
 1041            CA     S+MAX
 1042            XCH    L               ALSO PUT 37777 IN L
 1043            TC     +1CHK
 1044   DV1-+    CS     S13BITS         60000
 1045            EXTEND
 1046            DV     SKEEP1          -37774, -1
 1047            TS     SKEEP6
 1048            AD     SKEEP7
 1049            TC     -0CHK
 1050            CA     S+MAX
 1051            XCH    L               ALSO PUT 37777 IN L
 1052            TC     -1CHK
 1053   DV1--    CS     S13BITS         60000
 1054            EXTEND
 1055            DV     SKEEP2          +37774, -1
 1056            AD     SKEEP6
 1057            TC     -0CHK
 1058            CA     S+MAX
 1059            XCH    L               ALSO PUT 37777 IN L FOR DV2
 1060            TC     -1CHK
 1061            CA     SKEEP6          -37774
 1062            AD     S-2             -37776
 1063            AD     S+MAX
 1064  2         TC     +1CHK
R1065   DIVIDE +17777 + 37777 BY +20000.  THE RESULT SHOULD BE +37777 WITH
R1066   +17777 REMAINDER.
 1067   DV2CHK   CA     S13BITS
 1068            EXTEND
 1069            DV     SKEEP1
 1070            AD     S-MAX
 1071            TC     -0CHK
 1072            CS     SBIT14          -20000
 1073            AD     L
 1074  2         TC     -1CHK
R1097   DIVIDE +37776 BY +37776.  THE RESULT SHOULD BE +37777 AND THE
R1098   REMAINDER SHOULD BE +37776.
 1099   DV4CHK   CA     S+ZERO
 1100            TS     L
 1101            CA     DVCON
 1102            TS     SKEEP1          37776
 1103            EXTEND
 1104            DV     SKEEP1
 1105            CS     A
 1106            AD     DVCON
 1107            TC     -1CHK
 1108            CA     L               37776
 1109            AD     S-MAX
 1110  2         TC     -1CHK
R1111   DIVIDE SAME (ZERO).  THE CONTENTS OF THE A REGISTER AND L REGISTER WILL
R1112   HAVE OPPOSITE SIGNS BEFORE DIVISION.  THE QUOTIENT WILL BE + OR - MAX.,
R1113   DEPENDING UPON THE SIGN OF THE L REGISTER AND THE SIGN OF THE DIVISOR.
R1114   C(L) REMAINS THE SAME BECAUSE IT IS THE DIVIDEND.
 1115   DV5CHK   CA     S+ZERO
 1116            TS     SKEEP1          +0
 1117            TS     L
 1118            CS     A
 1119            TS     SKEEP2          -0
 1120   DV5++    EXTEND
 1121            DV     SKEEP1          +37777, +0
 1122            TS     SKEEP7          37777
 1123            CA     L
 1124            TC     +0CHK
 1125   DV5+-    CS     A
 1126            EXTEND
 1127            DV     SKEEP2          40000, +0
 1128            TS     SKEEP6          40000
 1129            AD     SKEEP7
 1130            TC     -0CHK
 1131            CS     A
 1132            XCH    L               ALSO PUT -0 IN L
 1133            TC     +0CHK
 1134   DV5-+    EXTEND
 1135            DV     SKEEP1          40000, -0
 1136            AD     SKEEP7
 1137            TC     -0CHK
 1138            CA     L
 1139            TC     -0CHK
 1140   DV5--    EXTEND
 1141            DV     SKEEP2          37777, -0
 1142            AD     SKEEP6
 1143            TC     -0CHK
 1144            CA     L
 1145            TC     -0CHK
 1146            CA     SKEEP6          CHECK QUOTIENT
 1147            AD     DVCON
 1148  2         TC     -1CHK
 1149            TC     CHECKNJ         CHECK FOR NEW JOB
 1150            CA     SKEEP4
 1151            EXTEND
 1152            BZMF   DVLOOP
 1153            INCR   SCOUNT +2
 1154  2         TC     SELFCHK         START SELF-CHECK AGAIN
 1155  2ENDSLFS1 EQUALS
 1156  2         SETLOC ENDFAILS
 1157   SBNKOPTN TS     SKEEP1
 1158            CS     A               GO TO BACKUP IDLE LOOP IF C(SMODE) IS
 1159            AD     TWO             GREATER THAN OCTAL 11
 1160            EXTEND
 1161            BZMF   TOSMODE -2
 1162            CA     S+ZERO          ZERO SMODE FOR OPTIONS ABOVE 8.
 1163            TS     SMODE
 1164            CA     SKEEP1
 1165            NDX    A
 1166            TC     SOPTON11 -1
 1167  2SOPTON11 TC     DSKYCHK
 1168            CA     S+ZERO
 1169            TS     SMODE
 1170   TOSMODE  TC     POSTJUMP
 1171  2         CADR   SMODECHK
R1172   THE FOLLOWING CONSTANTS ARE USED BY DSKYCHK.
 1173   DSKYCODE OCTAL  05265           00
 1174            OCTAL  04143           11
 1175            OCTAL  05471           22
 1176            OCTAL  05573           33
 1177            OCTAL  04757           44
 1178            OCTAL  05736           55
 1179            OCTAL  05634           66
 1180            OCTAL  05163           77
 1181            OCTAL  05675           88
 1182            OCTAL  05777           99
 1183   +-ZERO   OCTAL  07265
 1184  211DEC.   OCTAL  00013
R1185   BITS 2 AND 6 TURN ON THE COMPUTER ACTIVITY AND VERB-NOUN FLASH.
 1186  2S11CHAN  OCTAL  00042
 1187   DSKYCHK  CAF    TEN
 1188            TS     SKEEP3
 1189            INHINT
 1190            CAF    S+1             SET UP TEN MS INTERRUPT
 1191            TC     WAITLIST
 1192            2CADR  NXTNMBR
 1193            RELINT
 1194  2         TC     TOSMODE         GO TO IDLE LOOP
 1195   SDSPTAB  TS     SKEEP3
 1196            INHINT
 1197            NDX    SKEEP3
 1198            CS     DSKYCODE
 1199   SBLANKS  TS     DSPTAB
 1200            TS     DSPTAB +1
 1201            TS     DSPTAB +2
 1202            TS     DSPTAB +3
 1203            TS     DSPTAB +4
 1204            TS     DSPTAB +5
 1205            TS     DSPTAB +6
 1206            TS     DSPTAB +7
 1207            TS     DSPTAB +8D
 1208            TS     DSPTAB +9D
 1209            TS     DSPTAB +10D
 1210            CA     11DEC.
 1211  2         TS     NOUT
 1212   DSKYWAIT INHINT
 1213            CAF    BIT10           5.12 SECOND WAIT
 1214            TC     WAITLIST
 1215            2CADR  NXTNMBR
 1216            RELINT
 1217  2         TC     TASKOVER
 1218   NXTNMBR  CCS    SKEEP3
 1219            TC     SDSPTAB         9 THROUGH 0
 1220            TC     -SIGN           -ZEROS
 1221            TC     +SIGN           +ZEROS
 1222            CCS    SKEEP2
 1223            TC     NODSPLAY        PUTS BLANKS IN DSKY DISPLAY
 1224  2         TC     LITESOUT        TURN OFF LIGHTS
 1225   -SIGN    CS     S+1
 1226            TS     SKEEP3
 1227            CA     S11CHAN         TURN ON VERB-NOUN FLASH
 1228            EXTEND                 AND COMPUTER ACTIVITY LIGHTS.
 1229            WOR    DSALMOUT
 1230            CS     +-ZERO
 1231            INHINT
 1232            TS     DSPTAB
 1233            TS     DSPTAB +3
 1234            TS     DSPTAB +5
 1235            CAF    THREE
 1236            TS     NOUT
 1237  2         TC     DSKYWAIT
 1238   +SIGN    CS     ZERO
 1239            TS     SKEEP3
 1240            CA     S+1
 1241            TS     SKEEP2
 1242            INHINT
 1243            CS     +-ZERO
 1244            TS     DSPTAB +1
 1245            TS     DSPTAB +4
 1246            TS     DSPTAB +6
 1247            CAF    THREE
 1248            TS     NOUT
 1249  2         TC     DSKYWAIT
 1250   NODSPLAY TS     SKEEP2          +0
 1251            CS     BIT12           BLANKS
 1252            INHINT
 1253  2         TC     SBLANKS         PUTS BLANKS IN ALL DISPLAYS
 1254   LITESOUT CS     S11CHAN
 1255            EXTEND
 1256            WAND   DSALMOUT        TURN OFF COMPUTER ACTIVITY LIGHT.
 1257  2         TC     TASKOVER        END OF DSKYCHK
 1258   ENDSLFS2 EQUALS
L       INFLIGHT ALIGNMENT ROUTINES
 0001            SETLOC ENDDNTMS
 0002  4         EBANK= XSM
R0003  2CALCGTA COMPUTES THE GYRO TORQUE ANGLES REQUIRED TO BRING THE STABLE MEM
 0004  9BER INTO THE DESIRED ORIENTATION.
R0005   THE INPUT IS THE DESIRED STABLE MEMBER COORDINATES REFERRED TO PRESENT S
 0006  9TABLE MEMBER COORDINATES. THE THREE
R0007  2HALF-UNIT VECTORS ARE STORED AT XDC, YDC, AND ZDC.
R0008   THE OUTPUTS ARE THE THREE GYRO TORQUING ANGLES TO BE APPLIED TO THE Y, Z
 0009  9, AND X GYROS AND ARE STORED DP AT IGC,
R0010  4MGC, AND OGC RESPECTIVELY. ANGLES ARE SCALED PROPERLY FOR IMUPULSE.
 0011   CALCGTA  ITA    DLOAD           PUSHDOWN  00,02,16D,18D,22D-26D,32D-36D
 0012                   S2              XDC = (XD1 XD2 XD3)
 0013                   XDC             YDC = (YD1 YD2 YD3)
 0014            PDDL   PDDL            ZDC = (ZD1 ZD2 ZD3)
 0015                   ZERODP
 0016                   XDC +4
 0017            DCOMP  VDEF
 0018            UNIT
 0019            STODL  ZPRIME          ZP = UNIT(-XD3 O XD1) = (ZP1 ZP2 ZP3)
 0020  2                ZPRIME
 0021            SR1
 0022            STODL  SINTH           SIN(IGC) = ZP1
 0023                   ZPRIME +4
 0024            SR1
 0025            STCALL COSTH           COS(IGC) = ZP3
 0026  2                ARCTRIG
 0027            STODL  IGC             Y GYRO TORQUING ANGLE   FRACTION OF REV.
 0028                   XDC +2
 0029            SR1
 0030            STODL  SINTH           SIN(MGC) = XD2
 0031  2                ZPRIME
 0032            DMP    PDDL
 0033                   XDC +4          PD00 = (ZP1)(XD3)
 0034  2                ZPRIME +4
 0035            DMP    DSU
 0036                   XDC             MPAC = (ZP3)(XD1)
 0037            STADR
 0038            STCALL COSTH           COS(MGC) = MPAC - PD00
 0039  2                ARCTRIG
 0040            STOVL  MGC             Z GYRO TORQUING ANGLE   FRACTION OF REV.
 0041                   ZPRIME
 0042            DOT
 0043                   ZDC
 0044            STOVL  COSTH           COS(OGC) = ZP . ZDC
 0045                   ZPRIME
 0046            DOT
 0047                   YDC
 0048            STCALL SINTH           SIN(OGC) = ZP . YDC
 0049  2                ARCTRIG
 0050            STCALL OGC             X GYRO TORQUING ANGLE   FRACTION OF REV.
 0051  8                S2
R0052  2ARCTRIG COMPUTES AN ANGLE GIVEN THE SINE AND COSINE OF THIS ANGLE.
R0053  2THE INPUTS ARE SIN/4 AND COS/4 STORED DP AT SINTH AND COSTH.
R0054   THE OUTPUT IS THE CALCULATED ANGLE BETWEEN +.5 AND -.5 REVOLUTIONS AND S
 0055  9TORED AT THETA. THE OUTPUT IS ALSO
R0056  4AVAILABLE AT MPAC.
 0057   ARCTRIG  DLOAD  ABS             PUSHDOWN  16D,18D,20D,22D-26D
 0058                   SINTH
 0059            DSU    BMN
 0060                   QTSN45          ABS(SIN/4) - SIN(45)/4
 0061  4                TRIG1           IF (-45,45) OR (135,-135)
 0062            DLOAD  SL1             (45,135) OR (-135,-45)
 0063                   COSTH
 0064            ACOS   SIGN
 0065                   SINTH
 0066            STORE  THETA           X = ARCCOS(COS) WITH SIGN(SIN)
 0067  4         RVQ
 0068   TRIG1    DLOAD  SL1             (-45,45) OR (135,-135)
 0069                   SINTH
 0070            ASIN
 0071            STODL  THETA           X = ARCSIN(SIN) WITH SIGN(SIN)
 0072                   COSTH
 0073            BMN
 0074  2                TRIG2           IF (135,-135)
 0075            DLOAD  RVQ
 0076  4                THETA           X = ARCSIN(SIN)    (-45,45)
 0077   TRIG2    DLOAD  SIGN            (135,-135)
 0078                   HALFDP
 0079                   SINTH
 0080            DSU
 0081                   THETA
 0082            STORE  THETA           X = .5 WITH SIGN(SIN) - ARCSIN(SIN)
 0083  8         RVQ                                     (+) - (+) OR (-) - (-)
R0084  2SMNB TRANSFORMS A STAR DIRECTION FROM STABLE MEMBER TO NAVIGATION BASE C
 0085  9OORDINATES.
R0086   THE INPUTS ARE  1) THE STAR VECTOR REFERRED TO PRESENT STABLE MEMBER COO
 0087  9RDINATES STORED AT LOCATION 32D OF THE
R0088   VAC AREA.  2) THE GIMBAL ANGLES (CDUY,CDUZ,CDUX) STORED AT ALTERNATING L
 0089  9OCATIONS RESPECTIVELY. THE ANGLES ARE
R0090   USUALLY STORED AT LOCATIONS 2,4, AND 6 OF THE MARK VAC AREA. THEY CAN BE
 0091  9 STORED AT LOCATIONS 20,22, AND 24 OF
R0092  2YOUR JOB VAC AREA.  3) THE BASE ADDRESS OF THE GIMBAL ANGLES STORED SP A
 0093  9T LOCATION S1 OF YOUR JOB VAC AREA.
R0094   THE OUTPUT IS THE STAR VECTOR REFERRED TO NAVIGATION BASE COORDINATES ST
 0095  9ORED AT 32D OF THE VAC AREA. THE OUTPUT
R0096  4IS ALSO AVAILABLE AT MPAC.
 0097   SMNB     ITA    CLEAR           PUSHDOWN  00,02,04-10D,30D,32D-36D
 0098                   S2
 0099  2                NBSMBIT         SET NBSMBIT = 0
 0100   SMNB1    AXT,1  AXT,2           ROTATE X,Z, ABOUT Y
 0101                   4
 0102                   0
 0103            CALL
 0104  2                AXISROT
 0105            AXT,1  AXT,2           ROTATE Y,X ABOUT  Z
 0106                   2
 0107                   4
 0108            CALL
 0109  2                AXISROT
 0110            AXT,1  AXT,2           ROTATE Z,Y ABOUT  X
 0111                   0
 0112                   2
 0113            CALL
 0114  2                AXISROT
 0115            GOTO
 0116  8                S2
R0117  2NBSM TRANSFORMS A STAR DIRECTION FROM NAVIGATION BASE TO STABLE MEMBER
 0118  9COORDINATES.
R0119   THE INPUTS ARE  1) THE STAR VECTOR REFERRED TO NAVIGATION BASE COORDINAT
 0120  9ES STORED AT LOCATION 32D OF THE VAC
R0121   AREA.  2) THE GIMBAL ANGLES (CDUY,CDUZ,CDUX) STORED AT ALTERNATING LOCAT
 0122  9IONS RESPECTIVELY. THE ANGLES ARE
R0123   USUALLY STORED AT LOCATIONS 2,4, AND 6 OF THE MARK VAC AREA. THEY CAN BE
 0124  9 STORED AT LOCATIONS 20,22, AND 24 OF
R0125  2YOUR JOB VAC AREA.  3) THE BASE ADDRESS OF THE GIMBAL ANGLES STORED SP A
 0126  9T LOCATION S1 OF YOUR JOB VAC AREA.
R0127   THE OUTPUT IS THE STAR VECTOR REFERRED TO PRESENT STABLE MEMBER COORDINA
 0128  9TES STORED AT LOCATION 32D OF THE VAC
R0129  4AREA. THE OUTPUT IS ALSO AVAILABLE AT MPAC.
 0130   NBSM     ITA    SET             PUSHDOWN  00,02,04-10D,30D,32D-36D
 0131                   S2
 0132  2                NBSMBIT         SET NBSMBIT = 1
 0133   NBSM2    AXT,1  AXT,2           ROTATE Z,Y ABOUT  X
 0134                   0
 0135                   2
 0136            CALL
 0137  2                AXISROT
 0138            AXT,1  AXT,2           ROTATE Y,X ABOUT  Z
 0139                   2
 0140                   4
 0141            CALL
 0142  2                AXISROT
 0143            AXT,1  AXT,2           ROTATE X,Z, ABOUT Y
 0144                   4
 0145                   0
 0146            CALL
 0147  2                AXISROT
 0148            GOTO
 0149  8                S2
R0150  4AXISROT IS UTILIZED BY THE SMNB AND NBSM ROUTINES. SEE REMARKS ON THESE
 0151  9                                ROUTINES FOR INPUTS AND OUTPUTS.
 0152   AXISROT  XSU,1  SLOAD*
 0153                   S1                   SMNB          .       NBSM
 0154                   4,1             IG    MG    OG     .  OG    MG    IG
 0155            RTB    XAD,1
 0156                   CDULOGIC
 0157                   S1
 0158  2         STORE  30D
 0159   ACCUROT  COS
 0160            STODL  8D,1                          COS(ANGLE)
 0161                   30D
 0162            SIN
 0163  2         STORE  10D,1                         SIN(ANGLE)
 0164            DMP*   SL1
 0165                   32D +4,2
 0166            PDDL*  DMP*                              PD0
 0167                   8D,1            S3SIN S1SIN S2SIN  .  S2SIN S1SIN S3SIN
 0168  2                32D +4,2
 0169            SL1    PDDL*                             PD2
 0170  2                10D,1           S3COS S1COS S2COS  .  S2COS S1COS S3COS
 0171            DMP*   SL1                              MPAC
 0172  2                32D +4,1        S1SIN S2SIN S3SIN  .  S3SIN S2SIN S1SIN
 0173            BOFF
 0174                   NBSMBIT
 0175  2                AXISROT1
 0176            BDSU   STADR                              .    PD2 - MPAC
 0177            STODL* 32D +4,2                           .  S2    S1    S3
 0178  2                8D,1
 0179            DMP*   SL1                                .       MPAC
 0180  2                32D +4,1                           .  S3COS S2COS S1COS
 0181            DAD    STADR                              .    PD0 + MPAC
 0182            STOVL  32D +4,1                           .  S3    S2    S1
 0183                   32D
 0184  2         RVQ
 0185   AXISROT1 DAD    STADR             MPAC + PD2       .
 0186            STODL* 32D +4,2        S3    S1    S2     .
 0187                   8D,1
 0188            DMP*   SL1                  MPAC          .
 0189  2                32D +4,1        S1COS S2COS S3COS  .
 0190            DSU    STADR             MPAC - PD0       .
 0191            STOVL  32D +4,1        S1    S2    S3     .
 0192                   32D
 0193  8         RVQ
R0194  2CALCGA COMPUTES THE CDU DRIVING ANGLES REQUIRED TO BRING THE STABLE MEMB
 0195  9ER INTO THE DESIRED ORIENTATION.
R0196   THE INPUTS ARE  1) THE NAVIGATION BASE COORDINATES REFERRED TO ANY COORD
 0197  9INATE SYSTEM. THE THREE HALF-UNIT
R0198   VECTORS ARE STORED AT XNB,YNB, AND ZNB.  2) THE DESIRED STABLE MEMBER CO
 0199  9ORDINATES REFERRED TO THE SAME
R0200  2COORDINATE SYSTEM ARE STORED AT XSM, YSM, AND ZSM.
R0201  4THE OUTPUTS ARE THE THREE CDU DRIVING ANGLES AND ARE STORED SP AT THETAD
 0202  9, THETAD +1, AND THETAD +2.
 0203   CALCGA   VLOAD  VXV             PUSHDOWN  00-04,16D,18D
 0204                   XNB             XNB = OGA (OUTER GIMBAL AXIS)
 0205                   YSM             YSM = IGA (INNER GIMBAL AXIS)
 0206  2         UNIT   PUSH            PD0 = UNIT(OGA X IGA) = MGA
 0207            DOT    ITA
 0208                   ZNB
 0209                   S2
 0210            STOVL  COSTH           COS(OG) = MGA . ZNB
 0211                   0
 0212            DOT
 0213                   YNB
 0214            STCALL SINTH           SIN(OG) = MGA . YNB
 0215                   ARCTRIG
 0216            STOVL  OGC
 0217  2                0
 0218            VXV    DOT             PROVISION FOR MG ANGLE OF 90 DEGREES
 0219                   XNB
 0220                   YSM
 0221            SL1
 0222            STOVL  COSTH           COS(MG) = IGA . (MGA X OGA)
 0223                   YSM
 0224            DOT
 0225                   XNB
 0226            STCALL SINTH           SIN(MG) = IGA . OGA
 0227                   ARCTRIG
 0228  2         STORE  MGC
 0229            ABS    DSU
 0230                   .166...
 0231            BPL
 0232  2                GIMLOCK1        IF ANGLE GREATER THAN 60 DEGREES
 0233   CALCGA1  VLOAD  DOT
 0234                   ZSM
 0235                   0
 0236            STOVL  COSTH           COS(IG) = ZSM . MGA
 0237                   XSM
 0238            DOT    STADR
 0239            STCALL SINTH           SIN(IG) = XSM . MGA
 0240  2                ARCTRIG
 0241            STOVL  IGC
 0242                   OGC
 0243            RTB
 0244                   V1STO2S
 0245            STCALL THETAD
 0246  2                S2
 0247   GIMLOCK1 EXIT
 0248            TC     ALARM
 0249            OCT    00401
 0250            TC     INTPRET
 0251            GOTO
 0252  8                CALCGA1
R0253  2AXISGEN COMPUTES THE COORDINATES OF ONE COORDINATE SYSTEM REFERRED TO AN
 0254  9OTHER COORDINATE SYSTEM.
R0255   THE INPUTS ARE  1) THE STAR1 VECTOR REFERRED TO COORDINATE SYSTEM A STOR
 0256  9ED AT STARAD.  2) THE STAR2 VECTOR
R0257   REFERRED TO COORDINATE SYSTEM A STORED AT STARAD +6.  3) THE STAR1 VECTO
 0258  9R REFERRED TO COORDINATE SYSTEM B STORED
R0259   AT LOCATION 6 OF THE VAC AREA.  4) THE STAR2 VECTOR REFERRED TO COORDINA
 0260  9TE SYSTEM B STORED AT LOCATION 12D OF
R0261  2THE VAC AREA.
R0262   THE OUTPUT DEFINES COORDINATE SYSTEM A REFERRED TO COORDINATE SYSTEM B.
 0263  9THE THREE HALF-UNIT VECTORS ARE STORED
R0264  4AT LOCATIONS XDC, XDC +6, XDC +12D, AND STARAD, STARAD +6, STARAD +12D.
 0265   AXISGEN  AXT,1  SSP             PUSHDOWN  00-22D,24D-28D,30D
 0266                   STARAD +6
 0267                   S1
 0268  2                STARAD -6
 0269   AXISGEN1 VLOAD* VXV*            06D   UA = S1
 0270                   STARAD +12D,1          STARAD +00D   UB = S1
 0271                   STARAD +18D,1
 0272            UNIT                   12D   VA = UNIT(S1 X S2)
 0273            STOVL* STARAD +18D,1          STARAD +06D   VB = UNIT(S1 X S2)
 0274  2                STARAD +12D,1
 0275            VXV*   VSL1
 0276                   STARAD +18D,1   18D   WA = UA X VA
 0277  2         STORE  STARAD +24D,1          STARAD +12D   WB = UB X VB
 0278            TIX,1
 0279  2                AXISGEN1
 0280            AXC,1  SXA,1
 0281                   6
 0282  2                30D
 0283            AXT,1  SSP
 0284                   18D
 0285                   S1
 0286  2                6
 0287            AXT,2  SSP
 0288                   6
 0289                   S2
 0290  2                2
 0291   AXISGEN2 XCHX,1 VLOAD*
 0292                   30D             X1=-6 X2=+6   X1=-6 X2=+4   X1=-6 X2=+2
 0293                   0,1
 0294            VXSC*  PDVL*           J=(UA)(UB1)   J=(UA)(UB2)   J=(UA)(UB3)
 0295                   STARAD +6,2
 0296                   6,1
 0297            VXSC*
 0298                   STARAD +12D,2
 0299            STOVL* 24D             K=(VA)(VB1)   J=(VA)(VB2)   J=(VA)(VB3)
 0300  2                12D,1
 0301            VXSC*  VAD
 0302                   STARAD +18D,2   L=(WA)(WB1)   J=(WA)(WB2)   J=(WA)(WB3)
 0303            VAD    VSL1
 0304                   24D
 0305            XCHX,1
 0306                   30D
 0307  2         STORE  XDC +18D,1      XDC = L+J+K   YDC = L+J+K   ZDC = L+J+K
 0308            TIX,1
 0309  2                AXISGEN3
 0310   AXISGEN3 TIX,2
 0311  2                AXISGEN2
 0312            VLOAD
 0313                   XDC
 0314            STOVL  STARAD
 0315                   YDC
 0316            STOVL  STARAD +6
 0317                   ZDC
 0318  2         STORE  STARAD +12D
 0319  8         RVQ
R0418  2TRANSPSE COMPUTES THE TRANSPOSE OF A MATRIX (TRANSPOSE = INVERSE OF ORTH
 0419  9OGONAL TRANSFORMATION).
R0420   THE INPUT IS A MATRIX DEFINING COORDINATE SYSTEM A WITH RESPECT TO COORD
 0421  9INATE SYSTEM B STORED IN STARAD THRU
R0422  2STARAD +17D.
R0423   THE OUTPUT IS A MATRIX DEFINING COORDINATE SYSTEM B WITH RESPECT TO COOR
 0424  9DINATE SYSTEM A STORED IN STARAD THRU
R0425  2STARAD +17D.
 0426   TRANSPSE DXCH   STARAD +2       PUSHDOWN  NONE
 0427            DXCH   STARAD +6
 0428  2         DXCH   STARAD +2
 0429            DXCH   STARAD +4
 0430            DXCH   STARAD +12D
 0431  2         DXCH   STARAD +4
 0432            DXCH   STARAD +10D
 0433            DXCH   STARAD +14D
 0434            DXCH   STARAD +10D
 0435  4         TCF    DANZIG
R0436   SMD/EREF TRANSFORMS STABLE MEMBER DESIRED COORDINATES FROM STABLE MEMBER
 0437  9 DESIRED (DESIRED = PRESENT HERE) TO
R0438  2EARTH REFERENCE COORDINATES TO ALIGN THE STABLE MEMBER TO SPECIFIED GIMB
 0439  9AL ANGLES.
R0440   THE INPUTS ARE 1) THE MATRIX DEFINING THE EARTH REFERENCE COORDINATE FRA
 0441  9ME WITH RESPECT TO THE NAVIGATION BASE
R0442  2COORDINATE FRAME. 2) SAME AS 2) AND 3) OF SMNB.
R0443   THE OUTPUT IS THE DESIRED STABLE MEMBER COORDINATES WITH RESPECT TO THE
 0444  9EARTH REFERENCE COORDINATE FRAME. THE
R0445  2THREE UNIT VECTORS ARE STORED AT XSM, YSM, AND ZSM.
 0446   SMD/EREF ITA    VLOAD           PUSHDOWN  00,02,04-10D,30D,32D-36D
 0447                   12D
 0448                   XUNIT
 0449            STCALL 32D
 0450                   SMNB            STABLE MEMBER TO NAVIGATION BASE
 0451            MXV    VSL1
 0452                   STARAD          THEN TO EARTH REFERENCE
 0453            STOVL  XSM
 0454  2                YUNIT
 0455            STCALL 32D
 0456                   SMNB            STABLE MEMBER TO NAVIGATION BASE
 0457            MXV    VSL1
 0458                   STARAD          THEN TO EARTH REFERENCE
 0459            STOVL  YSM
 0460  2                ZUNIT
 0461            STCALL 32D
 0462                   SMNB            STABLE MEMBER TO NAVIGATION BASE
 0463            MXV    VSL1
 0464                   STARAD          THEN TO EARTH REFERENCE
 0465            STCALL ZSM
 0466  2                12D
 0467   270DEG   2DEC   -.25
 0468   QTSN45   2DEC   .1768
 0469   HALFDP   2DEC   .5
 0470   ZUNIT    2DEC   0
 0471   YUNIT    2DEC   0
 0472   XUNIT    2DEC   0.5
 0473   ZERODP   2DEC   0
 0474            2DEC   0
 0475            2DEC   0
 0476   .166...  2DEC   .1666666667
P0477   AOTNB CONVERTS THE TWO RETICLE ROTATION ANGLES (YROT AND SROT) AND
R0478   THE DETENT SETTING TO A HALF UNIT STAR VECTOR REFERRED TO THE
R0479   NAVIGATION BASE.
R0480
R0481   THE INPUTS ARE
R0482
R0483      Y RET. LINE RATATION S(YROT) STORED IN LOC 3 OF THE MARK VAC AREA
R0484      SPIRAL ROTATION ANGLE S(SROT) STORED IN LOC 5 OF MARK VAC AREA
R0485      ANGLE OF CENTER OF FIELD OF VIEW S(ELV) STORED IN LOC 9 OF MARK VAC
R0486      AOT ASZIMUTH ANGLE S(DET) STORED IN LOC 8 OF MARK VAC AREA
R0487      THE COMPLEMENT OF BASE ADDRESS OF MARK VAC IS STORED AT X1
R0488
R0489   THE OUTPUT IS A HALF UNIT STAR VECTOR IN NB COORDINATES STORED
R0490   AT 32D AND AVAILABLE IN VAC ON RETURN TO THE CALLING PROGRAM
R0491
 0492   AOTNB    SETPD  SLOAD*
 0493                   0
 0494                   3,1
 0495            RTB    PUSH
 0496                   CDULOGIC
 0497            STORE  14D
 0498            COS    PDDL
 0499            SIN    PUSH
 0500            SLOAD* RTB
 0501                   5,1
 0502                   CDULOGIC
 0503            STORE  16D             STORE S IF S AND Y ARE ZERO, S=0
 0504            BZE    GOTO            S NOT ZERO
 0505                   SISZ            S=0
 0506                   SCOMP
 0507   SISZ     DLOAD  BZE             IS Y ZERO
 0508                   14D
 0509                   YISZ            Y=0
 0510            GOTO
 0511                   SCOMP
 0512   YISZ     DLOAD  GOTO
 0513                   ZERODP
 0514                   SGOT
 0515   SCOMP    DLOAD  DSU
 0516                   14D
 0517                   16D             Y-S
 0518            BDSU
 0519                   NEARONE         S=360-(Y-S)
 0520   SGOT     DMP    PUSH
 0521                   DP1/12
 0522            COS    PDDL
 0523            SIN    PUSH
 0524            DMP    SL1
 0525                   0
 0526            STODL  0
 0527                   2
 0528            DMP    STADR
 0529  2         STORE  2
 0530            SLOAD* RTB
 0531                   9D,1
 0532                   CDULOGIC
 0533            PUSH   SIN
 0534            PDDL   COS
 0535            PUSH   DMP
 0536                   0
 0537            PDDL   DMP
 0538                   4
 0539                   6
 0540            DAD    SL1
 0541            STADR
 0542  2         STODL  32D
 0543            DMP
 0544                   4
 0545  2         STODL  4
 0546            DMP    BDSU
 0547                   0
 0548            PUSH   SLOAD*
 0549                   8D,1
 0550            RTB    PUSH
 0551                   CDULOGIC
 0552            COS    PDDL
 0553            SIN
 0554  2         STORE  0
 0555            DMP    PDDL
 0556                   4
 0557                   6
 0558            DMP    DAD
 0559                   2
 0560            SL2
 0561  2         STODL  34D
 0562            DMP    STADR
 0563  2         STODL  36D
 0564            DMP
 0565            BDSU   SL2
 0566                   36D
 0567            STOVL  36D
 0568                   32D
 0569  2         RVQ
 0570   DP1/12   2DEC   .0833333333
 0571   NEARONE  2DEC   .999999999
P0572   AOTSM CALCULATES A HALF UNIT STAR VECTOR IN STABLE MEMBER COORDINATES
R0573   FROM TWO PLANES CONTAINING THE STAR REFERRED TO NB
R0574
R0575   THE INPUTS ARE
R0576
R0577     AOT AZIMUTH AND ELEVATION STORED IN 8D AND 9D RESP. OF VAC AREA
R0578     CDUY, CDUZ AND CDUX FROM A YMARK STORED AT 3, 5, AND 7 OF VAC AREA
R0579     CDUY, CDUZ AND CDUX FROM A XMARK STORED AT 2, 4, AND 6 OF VAC AREA
R0580   THE BASE ADDRESS OF THE CDUS IS STORED AT LOCATION S1
R0581
R0582   THE OUTPUT IS A STAR VECTOR REFERRED TO STABLE MEMBER AT LOC 32D
R0583   AND AVAILBLE IN MPAC
R0584
 0585   AOTSM    ITA
 0586                   29D
 0587            SETPD  LXC,1           PUT BASE ADR OF VAC AREA IN X1
 0588                   12D
 0589                   S1
 0590            DLOAD  PUSH            ZERO 12 - 13
 0591                   ZERODP
 0592            SLOAD* RTB             LOAD AZIMUTH ANGLE (D)
 0593                   6,1
 0594                   CDULOGIC
 0595            PUSH   COS
 0596            PDDL   SIN             1/2 COSD 14-15
 0597            DCOMP  PUSH            -1/2 SIND 16-17
 0598            SLOAD* RTB             LOAD ELEVATION ANGLE (E)
 0599                   7,1
 0600                   CDULOGIC
 0601            PUSH   COS
 0602            STODL  32D             1/2COSE
 0603            SIN    PUSH            1/2 SINE 18-19
 0604            DMP    SL1
 0605                   16D
 0606            STODL  34D             -1/2 SINE SIND UP 18-19
 0607            DMP    DCOMP
 0608                   14D
 0609            SL1
 0610            STCALL 36D             -1/2SINE COSD
 0611                   NBSM            GET X PLANE IN SM
 0612            PDVL   STADR           X PLANE IN SM IN 12-17
 0613            STORE  32D             Y PLANE IN NB
 0614            XCHX,1 INCR,1
 0615                   S1              ADD ONE TO BASE ADR OF VAC AREA
 0616                   1
 0617            XCHX,1 CALL
 0618                   S1              PUT NEW BASE ADR BACK IN S1
 0619                   NBSM            GET Y PLANE IN SM
 0620            VXV    VSL1
 0621            VCOMP
 0622            STORE  32D             STORE STAR VEC REFERRED TO SM
 0623            GOTO
 0624                   29D
P0625            GIVEN RR TRUNION AND SHAFT (T,S) IN TANG,+1, FIND THE ASSOCIATE
 0626  9D LINE OF SIGNT IN NAV BASE AXES.
R0627  2THE HALF UNIT VECTOR, .5( SIN(S)COS(T),-SIN(T),COS(S)COS(T) ) IS LEFT IN
 0628  9 MPAC AND 32D.
 0629   RRNB     SLOAD  RTB
 0630                   TANG
 0631                   CDULOGIC
 0632            SETPD  PUSH            TRUNNION ANGLE TO 0.
 0633                   0
 0634            SIN    DCOMP
 0635  2         STODL  34D             Y COMPONENT.
 0636            COS    PUSH            .5 COS(T) TO 0.
 0637            SLOAD  RTB
 0638                   TANG +1
 0639                   CDULOGIC
 0640            PUSH   COS             SHAFT ANGLE TO 2.
 0641            DMP    SL1
 0642                   0
 0643  2         STODL  36D             Z COMPONENT
 0644            SIN    DMP
 0645            SL1
 0646            STOVL  32D
 0647                   32D
 0648            RVQ
P0649            THE FOLLOWING ROUTINE TAKES A HALF UNIT TARGET VECTOR REFERRED
 0650  9TO NAV BASE COORDINATES AND FINDS BOTH
R0651   GIMBAL ORIENTATIONS AT WHICH THE RR MIGHT SIGHT THE TARGET. THE GIMBAL A
 0652  9NGLES CORRESPONDING TO THE PRESENT MODE
R0653   ARE LEFT IN MODEA AND THOSE WHICH WOULD BE USED AFTER A REMODE IN MODEB.
 0654  9 THIS ROUTINE ASSUMES MODE 1 IS TRUNNION
R0655   ANGLE LESS THAN 90 DEGS IN ABS VALUE WITH ARBITRARY SHAFT, WITH A CORRES
 0656  9PONDING DEFINITION FOR MODE 2. MODE
R0657  2SELECTION AND LIMIT CHECKING ARE DONE ELSEWHERE.
R0658  2         THE MODE 1 CONFIGURATION IS CALCULATED FROM THE VECTOR AND THEN
 0659  9 MODE 2 IS FOUND USING THE RELATIONS
R0660            S(2) = 180 + S(1)
R0661  2         T(2) = 180 - T(1)
 0662   RRANGLES DLOAD  DCOMP           SINCE WE WILL FIND THE MODE 1 SHAFT
 0663                   34D             ANGLE LATER, WE CAN FIND THE MODE 1
 0664            SETPD  ASIN            TRUNNION BY SIMPLY TAKING THE ARCSIN OF
 0665                   0               THE Y COMPONENT, THE ASIN GIVING AN
 0666            PUSH   BDSU            ANSWER WHOSE ABS VAL IS LESS THAN 90 DEG
 0667                   HALFDP
 0668  2         STODL  4               MODE 2 TRUNNION TO 4.
 0669                   ZERODP
 0670            STOVL  34D             UNIT THE PROJECTION OF THE VECTOR IN THE
 0671                   32D             X-Z PLANE.
 0672            UNIT   BOVB            CALL FOR S/C MANEUVER ON GIMBAL LOCK.
 0673                   DESRETRN +1
 0674            STODL  32D             PROJECTION VECTOR.
 0675                   32D
 0676            SR1    STQ
 0677                   S2
 0678            STODL  SINTH           USE ARCTRIG SINCE SHAFT COULD BE ARB.
 0679                   36D
 0680            SR1
 0681            STCALL COSTH
 0682  8                ARCTRIG
 0683            PUSH   DAD             MODE 1 SHAFT TO 2.
 0684                   HALFDP          (OVERFLOW DOESNT MATTER SINCE SCALED REV
 0685            STOVL  6
 0686                   4
 0687            RTB                    FIND MODE 2 CDU ANGLES.
 0688                   2V1STO2S
 0689            STOVL  MODEB
 0690                   0
 0691            RTB                    MODE 1 ANGLES TO MODE A.
 0692                   2V1STO2S
 0693            STORE  MODEA
 0694  2         EXIT
 0695            CS     RADMODES        SWAP MODEA AND MODEB IF RR IN MODE 2.
 0696            MASK   BIT12
 0697            CCS    A
 0698  2         TCF    +4
 0699            DXCH   MODEA
 0700            DXCH   MODEB
 0701  2         DXCH   MODEA
 0702            TC     INTPRET
 0703            GOTO
 0704  2                S2
 0705   ENDINFSS EQUALS
L      2RTB OP CODES
 0001  2         SETLOC ENDINFSS
R0002  2         LOAD TIME2, TIME1 INTO MPAC:
 0003   LOADTIME EXTEND
 0004            DCA    TIME2
 0005  2         TCF    SLOAD2
R0006            CONVERT THE SINGLE PRECISION 2'S COMPLEMENT NUMBER ARRIVING IN
 0007  9MPAC (SCALED IN HALF-REVOLUTIONS) TO A
R0008  2DP 1'S COMPLEMENT NUMBER SCALED IN REVOLUTIONS.
 0009   CDULOGIC CCS    MPAC
 0010            CAF    ZERO
 0011            TCF    +3
 0012            NOOP
 0013  2         CS     HALF
 0014            TS     MPAC +1
 0015            CAF    ZERO
 0016            XCH    MPAC
 0017            EXTEND
 0018            MP     HALF
 0019            DAS    MPAC
 0020  2         TCF    SLOAD2 +2       C(A) = +0.
R0021  2         READ IMU CDUS INTO MPAC AS A VECTOR. ESPECIALLY USEFUL IN CONNE
 0022  9CTION WITH SMNB, ETC.
 0023   READCDUS INHINT
 0024            CA     CDUY            IN ORDER Y Z X
 0025            TS     MPAC
 0026            CA     CDUZ
 0027            TS     MPAC +3
 0028            CA     CDUX
 0029  2         TCF    READPIPS +6     COMMON CODING.
R0030  2         READ THE PIPS INTO MPAC WITHOUT CHANGING THEM:
 0031   READPIPS INHINT
 0032            CA     PIPAX
 0033            TS     MPAC
 0034            CA     PIPAY
 0035            TS     MPAC +3
 0036            CA     PIPAZ
 0037            RELINT
 0038  2         TS     MPAC +5
 0039            CAF    ZERO
 0040            TS     MPAC +1
 0041            TS     MPAC +4
 0042  2         TS     MPAC +6
 0043   VECMODE  CS     ONE
 0044  2         TCF    NEWMODE
R0045  2         FORCE TP SIGN AGREEMENT IN MPAC:
 0046   SGNAGREE TC     TPAGREE
 0047  2         TCF    DANZIG
R0048            CONVERT THE DP 1'S COMPLEMENT ANGLE SCALED IN REVOLUTIONS TO A
 0049  9SINGLE PRECISION 2'S COMPLEMENT ANGLE
R0050  2SCALED IN HALF-REVOLUTIONS.
 0051   1STO2S   TC     1TO2SUB
 0052            CAF    ZERO
 0053            TS     MPAC +1
 0054  2         TCF    NEWMODE
R0055  2         DO 1STO2S ON A VECTOR OF ANGLES:
 0056  2V1STO2S  TC     1TO2SUB         ANSWER ARRIVES IN A AND MPAC.
 0057            DXCH   MPAC +5
 0058            DXCH   MPAC
 0059            TC     1TO2SUB
 0060  2         TS     MPAC +2
 0061            DXCH   MPAC +3
 0062            DXCH   MPAC
 0063            TC     1TO2SUB
 0064  2         TS     MPAC +1
 0065            CA     MPAC +5
 0066  2         TS     MPAC
 0067            CAF    ONE             MODE IS TP.
 0068  2         TCF    NEWMODE
R0069  2         V1STO2S FOR 2 COMPONENT VECTOR. USED BY RR.
 0070   2V1STO2S TC     1TO2SUB
 0071            DXCH   MPAC +3
 0072            DXCH   MPAC
 0073            TC     1TO2SUB
 0074            TS     L
 0075            CA     MPAC +3
 0076  2         TCF    SLOAD2
R0077  2         SUBROUTINE TO DO DOUBLING AND 1'S TO 2'S CONVERSION:
 0078   1TO2SUB  DXCH   MPAC            FINAL MPAC +1 UNSPECIFIED.
 0079            DDOUBL
 0080            CCS    A
 0081            AD     ONE
 0082            TCF    +2
 0083  2         COM                    THIS WAS REVERSE OF MSU.
 0084            TS     MPAC            AND SKIP ON OVERFLOW.
 0085  2         TC     Q
 0086            INDEX  A               OVERFLOW UNCORRECT AND IN MSU.
 0087            CAF    LIMITS
 0088            ADS    MPAC
 0089            TC     Q
P0090            SUBROUTINE TO INCREMENT CDUS
 0091   INCRCDUS CAF    LOCTHETA
 0092            TS     BUF             PLACE ADRES(THETA) IN BUF.
 0093            CAE    MPAC            INCREMENT IN 1S COMPL.
 0094  2         TC     CDUINC
 0095            INCR   BUF
 0096            CAE    MPAC +3
 0097  2         TC     CDUINC
 0098            INCR   BUF
 0099            CAE    MPAC +5
 0100  2         TC     CDUINC
 0101  2         TCF    VECMODE
 0102  2LOCTHETA ADRES  THETAD
R0103            THE FOLLOWING ROUTINE INCREMENTS IN 2S COMPLEMENT THE REGISTER
 0104  9WHOSE ADDRESS IS IN BUF BY THE 1S COMPL.
R0105   QUANTITY FOUND IN TEM2. THIS MAY BE USED TO INCREMENT DESIRED IMU AND OP
 0106  9TICS CDU ANGLES OR ANY OTHER 2S COMPL.
R0107  2(+0 UNEQUAL TO -0) QUANTITY. MAY BE CALLED BY BANKCALL/SWCALL.
 0108   CDUINC   TS     TEM2            1S COMPL.QUANT. ARRIVES IN ACC. STORE IT
 0109            INDEX  BUF
 0110            CCS    0               CHANGE 2S COMPL. ANGLE(IN BUF)INTO 1S
 0111            AD     ONE
 0112            TCF    +4
 0113            AD     ONE
 0114            AD     ONE             OVERFLOW HERE IF 2S COMPL. IS 180 DEG.
 0115  2         COM
 0116            AD     TEM2            ADD IN INCREMENT. WILL OVERFLOW IF RE-
 0117  9SULT MOVES FROM 2ND TO 3D QUAD.(OR BACK)
 0118            CCS    A               BACK TO 2S COMPL.
 0119            AD     ONE
 0120            TCF    +2
 0121            COM
 0122            TS     TEM2            STORE 14BIT QUANTITY WITH PRESENT SIGN
 0123            TCF    +4
 0124            INDEX  A               OVERFLOW MEANS CORRECT 14BIT VALUE,WRONG
 0125  9 SIGN.
 0126            CAF    LIMITS          FIX IT,BY ADDING IN 37777 OR 40000
 0127  2         AD     TEM2
 0128            INDEX  BUF
 0129            TS     0               STORE NEW ANGLE IN 2S COMPLEMENT.
 0130            TC     Q
P0131  2         RTB TO TORQUE GYROS, EXCEPT FOR THE CALL TO IMUSTALL. ECADR OF
 0132  9COMMANDS ARRIVES IN X1.
 0133   PULSEIMU INDEX  FIXLOC          ADDRESS OF GYRO COMMANDS SHOULD BE IN X1
 0134            CA     X1
 0135            TC     BANKCALL
 0136            CADR   IMUPULSE
 0137            TCF    DANZIG
P0138  2         THE FOLLOWING ROUTINE IS USED ONLY IN BENCH TESTING THE RR.
 0139   RRSIM    TC     FIXDELAY
 0140  2         DEC    50
 0141   RRSIM2   CAF    BIT2            SEE IF RR ECTR ENABLED.
 0142            EXTEND
 0143            RAND   12
 0144            EXTEND
 0145  2         BZF    RRSIM
 0146            CA     TEM2            SAVE EXEC TEMPS SINCE IN RUPT.
 0147            TS     RUPTREG1
 0148            CAF    LOPTY
 0149            XCH    BUF
 0150            TS     RUPTREG2
 0151            CA     LASTYCMD        ECTR.
 0152            DOUBLE
 0153            EXTEND
 0154            MP     RRSIMG
 0155            TC     CDUINC
 0156            INCR   BUF
 0157            CA     OPTY            SHAFT CMD IS DIVIDED BY THE ABS VALUE OF
 0158            EXTEND                 THE COS OF THE TRUNNION ANGLE.
 0159            MSU    7               TO 1S COMPLEMENT.
 0160            TC     SPCOS                                           *
 0161            EXTEND                 SPCOS NOW GIVES COS SCALED AT 1 *
 0162            MP     BIT14               (A DAP GROUP FIX)           *
 0163            CCS    A
 0164            TCF    +3
 0165            TCF    +2
 0166            TCF    +1
 0167            AD     ONE
 0168  2         TS     ITEMP1
 0169            CA     LASTXCMD        SHAFT RATE DEPENDS ON TRUNNION.
 0170            EXTEND
 0171            MP     RRSIMG
 0172            EXTEND
 0173            DV     ITEMP1
 0174            TC     CDUINC
 0175            CA     RUPTREG1
 0176            TS     TEM2
 0177            CA     RUPTREG2
 0178            TS     BUF
 0179  2         TCF    RRSIM
 0180   LOPTY    ADRES  OPTY
 0181   RRSIMG   DEC    .59259
 0182   ENDRTBSS EQUALS
L       LEM FLIGHT CONTROL SYSTEM TEST
 0001            BANK   6
 0002  4         EBANK= JETSTEP
R0003  2LEM FCS TEST  ENTRY AND INITIALIZATION JOB.
R0004         THIS JOB INITIALIZES THE ERASABLE TABLES FOR THE FCS TEST AND PUTS
 0005  9 THE FOLLOWING PROGRAMS UNDER
R0006   WAITLIST CONTROL.
R0007              (1) RCS JET SET TASK
R0008              (2) ENGINE ON - OFF TASK
R0009              (3) DESCENT ENGINE GIMBAL TRIM TASK
R0010              (4) DESCENT ENGINE THROTTLE TASK
R0011  4           (5) INTERFACE CHANNEL LOOK TASK
 0012   FCSSTART TC     GRABWAIT        SO NOTHING DISRUPTS THE LOAD.
 0013            CAF    JSTEPADR        THE START OF THE LIST.
 0014   FCS3     CCS    A
 0015            TS     MPAC +2
 0016   FCS2     CAF    V04N01K         DISPLAY PRESENT CONTENTS IN R2.
 0017            TC     NVSBWAIT
 0018            INCR   MPAC +2
 0019            CAF    V21N02K
 0020            TC     NVSBWAIT        IN CASE IT,S BUSY BUT IT SHOULDN,T BE.
 0021            TC     ENDIDLE         WHILE LOADING.
 0022            TC     +3              V34E. TERMINATE LOAD OF THIS LIST
A0023                                   SECTION, GO TO NEW SECTION OR TO TEST.
 0024            TC     +1              V33E. PRESENT CONTENTS OK, PROCEED TO
A0025                                   NEXT LOCATION IN LIST.
 0026            TC     FCS2
 0027            CAF    V21N30K
 0028            TC     NVSBWAIT
 0029            TC     ENDIDLE
 0030            TC     EJFREE
 0031            TC     FCSTEST1        PROCEED TO TEST.
 0032            CAE    DSPTEM1         NEW ADDRESS.
 0033            TC     FCS3
 0034   FCSTEST1 CAF    V47K
 0035            TC     NVSBWAIT        OUR VERB IN THE LIGHTS.
 0036   FCSTEST  INHINT
 0037            EBANK= JETSTEP
 0038            CAF    TWO             20MS.
 0039            TC     WAITLIST
 0040            EBANK= JETSTEP
 0041            2CADR  JETSTART
 0042            CAF    BIT1            10MS.
 0043            TC     WAITLIST
 0044            EBANK= JETSTEP
 0045            2CADR  ENGSTART
 0046            CAF    THREE           30MS.
 0047            EBANK= JETSTEP
 0048            TC     WAITLIST
 0049            2CADR  TRIMTOP
 0050            CAF    FOUR            40MS.
 0051            TC     WAITLIST
 0052            EBANK= JETSTEP
 0053            2CADR  THRSTART
 0054            CAF    FIVE            50MS.
 0055            TC     WAITLIST
 0056            EBANK= JETSTEP
 0057            2CADR  LOOKTOP
 0058  2         TC     EJFREE          NOW THEY START.
 0059   JSTEPADR ECADR  JETSTEP
 0060   V21N02K  OCT    02102
 0061   V21N30K  OCT    02130
 0062   V04N01K  OCT    00401
 0063   V47K     OCT    04700
P0064   LEM FCS TEST   RCS JETSET TASK
R0065       THIS JOB ISSUES A PROFILE OF  JET ON-OFF SIGNALS AS DETERMINED BY TH
 0066  9E CONSTANTS IN A SET OF SIX REGISTERS.
R0067   THE SIX REGISTERS ARE, (1) NTIMES, THE NUMBER OF TIMES A PARTICULAR STEP
 0068  9 WILL BE PERFORMED. (2) NEXTTIME, THE
R0069   TIME BETWEEN STEPS, A MAXIMUM OF 2 MINUTES, (3) JETONTM, THE TIME TO TUR
 0070  9N THE JETS ON, SCALED FOR T3, (4) JET-
R0071   OFFTM, THE TIME AFTER ONTM TO TURN THE JETS OFF, (5) XJETS, THE PARTICUL
 0072  9AR X JETS TO BE TURNED ON AND OFF
R0073   DURING EACH REPEAT OF A STEP, AND (6) YZJETS,, THE Y AND Z JETS TO BE TU
 0074  9RNED ON AND OFF DURING EACH REPEAT OF A
R0075   STEP.  XJETS AND YZJETS MUST BE IN THE SAME FORMAT AS CHANNELS 5 AND6 RE
 0076  9SPECTIVELY.  THERE ARE EIGHT SETS OF
R0077   THESE SIX REGISTERS.
R0078       THE REGISTER JETSTEP IS USED TO INDEX THE 8 SETS OF REGISTERS, THE A
 0079  9LLOWABLE VALUES OF JETSTEP ARE +0 THRU 7
R0080  4    THIS JOB WILL BE ENTERED BUT IMMEDIATELY ENDED IF THE INITIAL VALUES
 0081  9 OF JETSTEP AND NTIMES ARE +0.
 0082   NEXTSET  CCS    JETSTEP         IT MAY BE ZERO.
 0083            TC     +2              NOPE
 0084            TC     TASKOVER        IT IS SO WE ARE DONE WITH THIS TASK.
 0085  2         TS     JETSTEP
 0086   JETSTART NDX    JETSTEP         ENTER HERE.
 0087            CCS    NTIMES          SEE IF THIS STEP IS FINISHED.
 0088            TC     +2              NO
 0089            TC     NEXTSET         YES
 0090            NDX    JETSTEP
 0091            CAE    NEXTTIME        MUST BE SCALED FOR T3.  REMEMBER TO BIAS
A0092                                   THIS FOR ON TIME.
 0093            TC     WAITLIST
 0094            EBANK= JETSTEP
 0095            2CADR  JTOP
 0096  2         TC     TASKOVER
 0097   JETOFF   CAF    ZERO
 0098            EXTEND
 0099            WRITE  5
 0100            EXTEND
 0101            WRITE  6
 0102            NDX    JETSTEP
 0103            CCS    NTIMES
 0104            NDX    JETSTEP
 0105            TS     NTIMES          ONE LESS TIME.
 0106   JTOP     NDX    JETSTEP
 0107            CCS    NTIMES          FOR LOOPING.
 0108            TC     +2
 0109            TC     NEXTSET
 0110            NDX    JETSTEP
 0111            CAE    JETONTM         SCALED FOR T3.  TIME FOR JETS ON.
 0112            TC     WAITLIST
 0113            EBANK= JETSTEP
 0114            2CADR  JETON
 0115  2         TC     TASKOVER
 0116   JETON    NDX    JETSTEP
 0117            CAE    XJETS           MUST BE IN CHANNEL 5 FORMAT.
 0118            TS     XJBUF
 0119            NDX    JETSTEP
 0120            CAE    YZJETS          MUST BE IN CHANNEL 6 FORMAT.
 0121            TS     YZJBUF
 0122   JFAILCK  EXTEND                 THIS ROUTINE EXAMINES EACH JETFAIL BIT
 0123            READ   32              AND IF A FAILURE IS INDICATED THE CORRES
 0124            COM                    PONDING COMMANDS ARE MASKED OUT .
 0125            TS     JFBUF           SAVE 32 REINVERTED.
 0126            CAF    SEVEN
 0127   JF3      TS     FCNTR
 0128            CAE    JFBUF
 0129            NDX    FCNTR
 0130            MASK   BIT8
 0131            CCS    A
 0132            TC     JFAIL
 0133   JFAIL1   CCS    FCNTR
 0134            TC     JF3
 0135            CAE    XJBUF
 0136            EXTEND
 0137            WRITE  5               XJETS GO ON.
 0138            CAE    YZJBUF
 0139            EXTEND
 0140            WRITE  6               YZJETS GO ON.
 0141            NDX    JETSTEP
 0142            CAE    JETOFFTM        JET OFF TIME SCALED FOR T3.
 0143            TC     WAITLIST
 0144            EBANK= JETSTEP
 0145            2CADR  JETOFF
 0146  2         TC     TASKOVER
 0147   JFAIL    NDX    FCNTR
 0148            CS     XJETMASK
 0149            MASK   XJBUF
 0150            TS     XJBUF
 0151            NDX    FCNTR
 0152            CS     YZJETMSK
 0153            MASK   YZJBUF
 0154            TS     YZJBUF
 0155            TC     ALARM
 0156            OCT    01410           TEMPORARY JET FAIL ALARM CODE.
 0157  8         TC     JFAIL1
 0158   YZJETMSK OCT    00010           JET 11
 0159            OCT    00020           JET 12
 0160            OCT    00004           JET 15
 0161            OCT    00200           JET 16
 0162            OCT    00001           JET 7
 0163            OCT    00002           JET 3
 0164            OCT    00040           JET 8
 0165  2         OCT    00100           JET 4
 0166   XJETMASK OCT    00040           JET 10
 0167            OCT    00020           JET 9
 0168            OCT    00100           JET 13
 0169            OCT    00200           JET 14
 0170            OCT    00010           JET 6
 0171            OCT    00001           JET 1
 0172            OCT    00004           JET 5
 0173            OCT    00002           JET 2
P0174   LEM FCS TEST  ENGINE ON - OFF TASK
R0175   THIS TASK TURNS THE LEM ASCENT OR DESCENT ENGINE ON AND OFF ACCORDING TO
 0176  9THE CONSTANTS STORED IN THE FIVE SETS OF
R0177   REGISTERS, (1) CYLTIMES, WHICH CONTAINS THE NUMBER OF TIMES A PARTICULAR
 0178  9STEP WILL BE REPEATED, (2) NEXTCYLT,
R0179    WHICH CONTAINS THE TIME BETWEEN STEPS SCALED FOR T3, (3) ONTIME, WHICH
 0180  9CONTAINS THE TIME TO TURN THE ENGINE ON
R0181   WHICH ALSO DETERMINES THE LENGTH OF TIME THE ENGIME WILL BE OFF WITHIN A
 0182  9 SERIES OF ON:OFF CYCLES, (4) OFFTIME,
R0183    WHICH CONTAINS THE NUMBER OF 2 MINUTES BEFORE THE ENGINE WILL BE TURNED
 0184  9 OFF, AND (5) OFFTIMER, WHICH
R0185   CONTAINS THE RESIDUAL TIME BEFORE THE ENGINE WILL BE TURNED OFF.  OFFTIM
 0186  9E AND OFFTIMER DETERMINE THE LENGTH
R0187   OF TIME THE ENGINE WILL BE ON IN ANY ONE CYCLE. THERE ARE THREE SETS OF
 0188  9THESE REGISTERS.
R0189       THE ENGSTEP REGISTER IS USED AS AN INDEX TO PICK UP A PARTICULAR SET
 0190  9  OF THE ABOVE 5 REGISTERS.  THIS TASK
R0191   WILL BE ENTERED BUT IMMEDIATELY ENDED IF ENGSTEP AND CYLTIMES = +0.
 0192  9THE ALLOWABLE VALUES OF ENGSTEP ARE +0,
R0193  41 AND 2.
 0194   NXTONOFF CCS    ENGSTEP
 0195            TC     +2
 0196            TC     TASKOVER        EXIT HERE WHEN STEP AND CYL ARE +0.
 0197  2         TS     ENGSTEP         ONE LESS.
 0198   ENGSTART NDX    ENGSTEP         ENTER HERE.
 0199            CCS    CYLTIMES        NUM OF EACH  ON/OFF SET
 0200            TC     +2
 0201            TC     NXTONOFF        NO MORE OF THIS SET
 0202            NDX    ENGSTEP
 0203            CAE    NEXTCYLT        START OF NEXT CYCLE.
 0204            TC     WAITLIST
 0205            EBANK= ENGSTEP
 0206            2CADR  ENGONTM
 0207  2         TC     TASKOVER
 0208   ENGRESET CS     PRIO30          BITS 13 AND 14.
 0209            EXTEND
 0210            RAND   11
 0211            AD     BIT14
 0212            EXTEND
 0213            WRITE  11              ENG ON = 0, ENG OFF = 1.
 0214            NDX    ENGSTEP
 0215            CCS    CYLTIMES
 0216            CCS    A
 0217            TC     +2
 0218            TC     NXTONOFF        WAS ONE.
 0219            AD     ONE             WAS MORE THAN ONE.
 0220            NDX    ENGSTEP
 0221  2         TS     CYLTIMES
 0222   ENGONTM  NDX    ENGSTEP
 0223            CAE    OFFTIME
 0224            TS     OFFTMBUF
 0225            NDX    ENGSTEP
 0226            CAE    ONTIME
 0227            TC     WAITLIST
 0228            EBANK= ENGSTEP
 0229            2CADR  ENGSET
 0230  2         TC     TASKOVER
 0231   ENGSET   CS     PRIO30
 0232            EXTEND
 0233            RAND   11
 0234            AD     BIT13
 0235            EXTEND
 0236            WRITE  11              ENG ON = 1, ENG OFF = 0.
 0237   ENGRST   CCS    OFFTMBUF
 0238            TC     LTIMEON         AT LEAST 2MIN. BEFORE ENGINE OFF.
 0239            NDX    ENGSTEP
 0240            CAE    OFFTIMER        LESS THAN 2MIN. TO ENGINE OFF.
 0241            TC     WAITLIST
 0242            EBANK= ENGSTEP
 0243            2CADR  ENGRESET
 0244  2         TC     TASKOVER
 0245   LTIMEON  CCS    OFFTMBUF        IS THERE ANY MORE.
 0246            TC     +2              YES.
 0247            TC     ENGRST          NO.
 0248            TS     OFFTMBUF        ONE LESS.
 0249            CAF    2MIN
 0250            TC     WAITLIST
 0251            EBANK= ENGSTEP
 0252            2CADR  LTIMEON
 0253  2         TC     TASKOVER
 0254   2MIN     DEC    12000
P0255   LEM FCS TEST  TRIM TASK
R0256   THIS PROGRAM ISSUES A PROFILE OF PITCH AND ROLL TRIM COMMANDS TO THE LEM
 0257  9 DESCENT ENGINE GIMBAL IN ACCORDANCEWITH
R0258   THE VALUE S IN THE TRIMSTEP REGISTER AND THE 12 SETS OF 5 REGISTERS CALL
 0259  9ED NUMTIMES, STEPDLYT, TRIMONT, TRIMOFFT
R0260   AND TRIMIND.  TRIMSTEP IS USED TO PICK UP A PARTICULAR SET OF THE 5 REGI
 0261  9STERS AND HAS ALLOWABLE VALUES FROM +0
R0262   THROUGH +11 DECIMAL.  THE 5 REGISTERS IN EACH SET ARE DEFINED AS FOLLOWS
R0263       (1) NUMTIMES DETERMINES THE NUMBER OF TIMES THE COMMAND IN TRIMIND
 0264  9WILL BE ISSUED.  VALUES FROM +0 TO
R0265   OCT 37777 ARE PERMITTED.
R0266       (2) STEPDLYT DETERMINES THE TIME BETWEEN THE START OF A STEP AND THE
 0267  9 BEGINNING OF TRIMONT.  STEPDLYT MUST BE
R0268   FORMATTED FOR T3, ITS MAXIMUM VALUE IS 2 MINUTES.
R0269       (3) TRIMONT DETERMINES THE TIME BETWEEN THE END OF STEPDLYT OR TRIMO
 0270  9FFT AND THE TIME THE TRIM COMMANDS ARE
R0271   ISSUED.  IT MUST BE FORMATTED FOR T3.
R0272       (4) TRIMOFFT DETERMINES THE LENGTH OF TIME THE TRIM COMMAND WILL BE
 0273  9ON, FORMATTED FOR T3.
R0274       (5) TRIMIND DETERMINES THE PITCH AND ROLL COMMAND TO BE ISSUED.  THE
 0275  9 FORMAT IS, BIT9=1=+ PITCH COMMAND,
R0276   BIT10=1=-PITCH, BIT11=1= +ROLL, BIT12=1= -ROLL.  A BIT=0 INDICATES NO CO
 0277  9MMAND.  ANY COMBINATION OF COMMANDS IS
R0278   PERMITTED.
R0279  4   THIS TASK WILL BE ENTERED BUT IMMEDIATELY ENDED IF TRIMSTEP AND NUMTI
 0280  9MES = +0.
 0281   NEXTTRIM CCS    TRIMSTEP
 0282            TC     +2
 0283            TC     TASKOVER        EXIT HERE.
 0284  2         TS     TRIMSTEP        LESS ONE.
 0285   TRIMTOP  NDX    TRIMSTEP        ENTER HERE.
 0286            CCS    NUMTIMES
 0287            TC     +2
 0288            TC     NEXTTRIM
 0289            NDX    TRIMSTEP
 0290            CAE    STEPDLYT
 0291            TC     WAITLIST
 0292            EBANK= TRIMSTEP
 0293            2CADR  TRIMSET
 0294  2         TC     TASKOVER
 0295   TRIMOFF  CS     TRIMMASK
 0296            EXTEND
 0297            WAND   12              TRIM GOES OFF.
 0298   NUMSTEP  NDX    TRIMSTEP
 0299            CCS    NUMTIMES
 0300            CCS    A
 0301            TC     +2
 0302            TC     NEXTTRIM        WAS ONE.
 0303            AD     ONE
 0304            NDX    TRIMSTEP
 0305            TS     NUMTIMES
 0306   TRIMSET  NDX    TRIMSTEP
 0307            CAE    TRIMONT
 0308            TC     WAITLIST
 0309            EBANK= TRIMSTEP
 0310            2CADR  TRIMON
 0311  2         TC     TASKOVER
 0312   TRIMON   CAF    BITS9,10        CHECK PITCH AND ROLL TRIM FAIL BITS.
 0313            EXTEND
 0314            RXOR   32
 0315            MASK   BITS9,10
 0316            EXTEND
 0317            BZF    TRIMON1
 0318            CAF    PRIO35          FAIL IS ON. FLASH FAIL CODE (01400) AND
 0319            TC     NOVAC           IDLE UNTIL SOMEONE RESETS IT, TERMINATES
 0320            2CADR  PERFORM         THE TASK, OR DECIDES TO PROCEED WITH IT.
 0321  2         TC     TASKOVER
 0322   TRIMON1  NDX    TRIMSTEP
 0323            CAE    TRIMIND
 0324            MASK   TRIMMASK        SAFETY PLAY
 0325            EXTEND
 0326            WOR    12              TRIM STARTS.
 0327            NDX    TRIMSTEP
 0328            CAE    TRIMOFFT
 0329            TC     WAITLIST
 0330            EBANK= TRIMSTEP
 0331            2CADR  TRIMOFF
 0332  2         TC     TASKOVER
 0333   PERFORM  TC     GRABWAIT        KEY RELEASE MAY COME ON.
 0334            CAF    TRIMCODE        01400
 0335            TS     DSPTEM1
 0336            CAF    V01N25K
 0337            TC     NVSBWAIT
 0338            CAF    V50K            PLEASE PERFORM.
 0339            TC     NVSBWAIT
 0340            TC     FLASHON         ANY RESPONSE TURNS IT OFF.
 0341            TC     ENDIDLE         WAIT FOR SOMEONE TO DO SOMETHING.
 0342            TC     EJFREE          V34E. TERMINATE THE TASK.
 0343            TC     TR1             V33E. PROCEED WITH THE FAIL ON.
 0344            INHINT                 ENTER. THE FAIL HAS BEEN RESET.
 0345            CAF    BIT2            20MS.
 0346            TC     WAITLIST
 0347            2CADR  TRIMON          CHECK AGAIN TO BE SURE. THEN PROCEED..
 0348  2         TC     EJFREE
 0349   TR1      INHINT                 PROCEED WITH THE FAIL.
 0350            CAF    BIT2            20MS.
 0351            TC     WAITLIST
 0352            2CADR  TRIMON1         BYPASS THE RECHECK.
 0353  2         TC     EJFREE
 0354   BITS9,10 OCT    01400
 0355   TRIMCODE EQUALS BITS9,10
 0356   TRIMMASK OCT    07400
 0357   V01N25K  OCT    00125
 0358   V50K     OCT    05000
P0359   LEM FCS TEST  THROTTLE TASK
R0360      THIS PROGRAM ISSUES A PROFILE OF THROTTLE COMMANDS TO THE LEM DESCENT
 0361  9 ENGINE.  THE PROFILE IS DETERMINED BY
R0362   THE VALUES IN THE THRTSTEP REGISTER AND THE 6  SETS OF REGISTERS, 5 PER
 0363  9SET, CALLED  DOTIMES, DELAY, THR1TIME,
R0364   THCOMM1 AND THCOMM2.  THE THRTSTEP REGISTER VALUE IS USED TO INDEX THE
 0365  96  SETS OF 5 REGISTERS AND HAS ALLOWABLE
R0366   VALUES OF +0 THROUGH +5.  THE 5 REGISTERS PER SET ARE DEFINED AS FOLLOWS
R0367       (1) DOTIMES DETERMINES THE NUMBER OF TIMES THE THROTTLE WILL BE EXER
 0368  9CISED AS PER THE VALUES OF THR1TIME,
R0369   THCOMM1 AND THCOMM2 OF THE CURRENT STEP.  IT HAS ALLOWABLE VALUES OF +0
 0370  9THROUGH 37777 OCT.
R0371       (2) DELAY DETERMINES THE TIME BETWEEN THE START OF A STEP AND THE BE
 0372  9 GINNING OF THR1TIME. ITIS CALLED ONLY
R0373   ONCE PER STEP,I.E., REPEATS OF THE SAME THCOMM1 AND THCOMM2 START AT THR
 0374  91TIME.  DELAY MUST BE FORMATTED FOR T3
R0375   AND HENCE HAS A MAXIMUM VALUE OF 2 MINUTES.
R0376       (3) THR1TIME DETERMINES THE TIME BETWEEN THE END OF DELAY OR THE END
 0377  9   OF THCOMM2 AND THE START OF
R0378   THCOMM1.  IT MUST BE FORMATTED FOR T3.
R0379       (4) THCOMM1 AND (5) THCOMM2 DETERMINE THE NUMBER OF THRUST INCREASE
 0380  9 OR DECREASE PULSES TOBE ISSUED AT A
R0381   3.2KPPS RATE.  THE RANGE OF POSSIBLE VALUES OF EITHER IS FROM POSMAX (OC
 0382  9T 37777) TO NEGMAX (OCT 40000) ALTHOUGH
R0383   THE ACTUAL THROTTLE RANGE IS FROM OCT 6116 TO OCT 71661 (+,- 3150 DEC).
R0384  4   THIS TASK WILL BE ENTERED BUT IMMEDIATELY ENDED IF THE INITIAL VALUES
 0385  9 OF THRTSTEP AND DOTIMES ARE +0.
 0386   NEXTTHRT CCS    THRTSTEP
 0387            TC     +2
 0388            TC     TASKOVER        EXIT HERE.
 0389  2         TS     THRTSTEP
 0390   THRSTART NDX    THRTSTEP        ENTER HERE.
 0391            CCS    DOTIMES         NUMBER OF TIMES COMMANDS 1 AND 2 DONE.
 0392            TC     +2
 0393            TC     NEXTTHRT
 0394            NDX    THRTSTEP
 0395            CAE    DELAY           TIME BETWEEN STEPS.  BIAS FOR THR1TIME.
A0396                                   MUST BE SCALED FOR T3.
 0397            TC     WAITLIST
 0398            EBANK= THRTSTEP
 0399            2CADR  THROTON1
 0400  2         TC     TASKOVER
 0401   THR2COMM NDX    THRTSTEP
 0402            CAE    THCOMM2         SAME REMARKS AS FOR THCOMM1.
 0403            TC     THROTON
 0404            AD     BIT1            10MS IN CASE OF NO THCOMM2.
 0405            TC     WAITLIST
 0406            EBANK= THRTSTEP
 0407            2CADR  CKDOTIME
 0408  2         TC     TASKOVER
 0409   CKDOTIME NDX    THRTSTEP
 0410            CCS    DOTIMES
 0411            CCS    A
 0412            TC     +2
 0413            TC     NEXTTHRT        WAS ONE.
 0414            AD     ONE
 0415            NDX    THRTSTEP
 0416            TS     DOTIMES
 0417   THROTON1 NDX    THRTSTEP
 0418            CAE    THR1TIME        TIME BETWEEN DOTIMES.  SCALED FOR T3.
 0419            TC     WAITLIST
 0420            EBANK= THRTSTEP
 0421            2CADR  THR1COMM
 0422  2         TC     TASKOVER
 0423   THR1COMM NDX    THRTSTEP
 0424            CAE    THCOMM1         SHOULD BE NO LARGER THAN 3150DEC.
 0425            TC     THROTON
 0426            AD     250MS           SO ACE CAN SAMPLE.
 0427            TC     WAITLIST
 0428            EBANK= THRTSTEP
 0429            2CADR  THR2COMM
 0430  2         TC     TASKOVER
 0431   THROTON  TS     THRUST          THROTTLE OUTPUT COUNTER.
 0432            TS     THBUF           SAVE FOR BZMF.
 0433            CAF    BIT4
 0434            EXTEND
 0435            WOR    14              ENABLE THRUST DRIVE.  COMMAND STARTS NOW
 0436            CAE    THBUF
 0437            EXTEND
 0438            BZMF   +2
 0439            COM
 0440            COM
 0441            EXTEND
 0442            MP     BIT10           SCALES FOR T3.
 0443            TC     Q
 0444   250MS    OCT    00031
P0445  2LEM FCS TEST  INTERFACE LOOK TASK.
R0446       THIS PROGRAM KEEPS A RUNNING HISTORY OF THE STATE OF ALL THE BITS IN
 0447  9 INPUT CHANNELS 30, 31, 32 AND 33.
R0448   IT DOES THIS BY DETECTING A CHANGE OF AN INPUT BIT FROM AN INITIAL ONE S
 0449  9TATE TO A ZERO STATE OR FROM AN INITIAL
R0450   ZERO TO A ONE.  THE HISTORY IS MAINTAINED IN TWO BUFFER REGISTERS FOR EA
 0451  9CH CHANNEL, ONE FOR STORING ONE TO ZERO
R0452   CHANGES (30BUF1, +1, +2, AND +3) AND ONE FOR ZERO TO ONE CHANGES (30BUF0
 0453  9, +1 +2 AND +3).  THE OPERATOR MUST
R0454   LOAD THE INITIAL STATES OF THE INPUT CHANNELS INTO THEIR RESPECTIVE BUFF
 0455  9ER REGISTERS BEFORE THIS PROGRAM IS IN-
R0456   ITIATED.
R0457       TO ALLOW THIS PROGRAM TO RUN C(QUITLOOK) MUST BE SET GREATER THAN +0
 0458  9 BEFORE IT IS STARTED.  IF THE OPERATOR
R0459   DOES NOT DESIRE THIS PROGRAM TO RUN HE SHOULD SET C(QUITLOOK)=+0 BEFORE
 0460  9STARTING THE FCS TEST.  AFTER THIS TASK
R0461   IS RUNNING THE OPERATOR CAN STOP IT BY SETTING C(QUITLOOK) = +0.
R0462       NO DISPLAYS OF EITHER THE BUFFER REGISTERS OR CHANNELS ARE INCORPORA
 0463  9TED INTO THIS PROGRAM.  THIS WAS DONE TO
R0464   ALLOW THE TEST OPERATOR MONITORING FLEXIBILITY.  FOR REAL TIME MONITORIN
 0465  9G IT IS SUGGESTED THAT THE BUFFER
R0466   REGISTERS BE DISPLAYED WITH THE MONITOR VERBS (11 THROUGH 15).  ON THE O
 0467  9THER HAND, THE OPERATOR MAY ELECT TO
R0468   PERFORM NO REAL TIME MONITORING UNTIL THE TEST IS COMPLETED, WHEN THE BU
 0469  9FFER REGISTERS WOULD BE CALLED FOR
R0470   DISPLAY (VERB 01) AND RECORDED.
R0471       THIS PROGRAM IS PRIMARILY INTENDED FOR INTERFACE MONITORING DURING T
 0472  9HE LEM VIBRATION TEST AT BETHPAGE, N.Y.,
R0473  2ALTHOUGH IT MAY ALSO BE USEFUL DURING VEHICAL LEVEL EMI TESTS.
 0474   LOOKTOP  CCS    QUITLOOK        IS THIS TASK WANTED.
 0475            TC     +2              YES.
 0476            TC     TASKOVER        NO.
 0477            CAF    THREE           START SCAN OF CHANNELS.
 0478   LOOKLOOP TS     CHCNTR          3, 2, 1, 0.
 0479            NDX    CHCNTR
 0480            CAE    30BUF1
 0481            EXTEND
 0482            NDX    CHCNTR
 0483            RAND   30              DETECTS CHANGES FROM 1 TO 0.
 0484            NDX    CHCNTR
 0485            XCH    30BUF1          STORE NEW ZEROS.
 0486            NDX    CHCNTR
 0487            CAE    30BUF0
 0488            EXTEND
 0489            NDX    CHCNTR
 0490            ROR    30              DETECTS CHANGES FROM 0 TO 1.
 0491            NDX    CHCNTR
 0492            XCH    30BUF0          STORE NEW ONES.
 0493            CCS    CHCNTR          IS THIS SCAN DONE.
 0494            TC     LOOKLOOP        NO.
 0495            CAF    TEN             YES.  100MS RECALL.
 0496            TC     WAITLIST
 0497            EBANK= QUITLOOK
 0498            2CADR  LOOKTOP
 0499            TC     TASKOVER
 0500   ENDLFCSS =
L       IMU PERFORMANCE TESTS 1
 0001            BANK   14
 0002  4         EBANK= XSM
 0003   AOTNBIMU CAF    ONE             AOT-NB-IMU FINE ALIGNMENT TEST
 0004  2         TS     EROPTN          ... TEST CAPABILITY ...
 0005            TC     BANKCALL
 0006            CADR   IMUZERO         IMU ZERO ENCODER MODE
 0007            TC     INTPRET
 0008            CALL
 0009                   LATAZCHK        TO LOAD AZIMUTH (SM) AND LATITUDE
 0010            CALL
 0011                   MAKEXSMD        TO SET UP A STABLE MEMBER DESIRED MATRIX
 0012            SET    CALL
 0013                   COAROFIN        FOR COARSE OR FINE ALIGN MARKS
 0014                   ERTHRVSE        TO CALCULATE EARTH RATE VECTOR
 0015  2         EXIT
 0016   POSLOAD  CAF    V24N30E         R1  0000X ENTER    POSITION 1,2, OR 3
 0017            TC     NVSBWAIT        R2  00000 ENTER    00001 FOR LAB OPTION
 0018            TC     ENDIDLE
 0019            TCF    ENDTEST
 0020            TCF    -4
 0021            XCH    DSPTEM1         DO NOT USE POSITION 3 WITH NAV BASE AT
 0022  2         TS     POSITON            ZERO DEGREE TILT ANGLE. (GIMBAL LOCK)
 0023            CCS    DSPTEM1 +1
 0024  2         TCF    LEMLAB          SPECIAL LAB TEST TO BYPASS MARKS
 0025  2         TC     POSNJUMP        SET UP STABLE MEMBER DESIRED COORDINATES
 0026  2         TC     OPTDATA         TARGETS 1,2 AZIMUTH AND ELEVATION
 0027  2         TC     FINDNAVB        COARSE ALIGN MARKS
 0028            TC     BANKCALL
 0029            CADR   IMUSTALL        INSURE IMUZERO COMPLETION
 0030  2         TCF    ENDTEST
 0031  2         TC     PUTPOSX         TO COARSE ALIGN STABLE MEMBER
 0032            TC     GMLCKCHK        CHECK FOR GIMBAL LOCK BEFORE FINE ALIGN
 0033  2         TC     OGCZERO         FOR EARTH RATE COMPENSATION
 0034            TC     BANKCALL
 0035            CADR   IMUFINE         FINE ALIGN MODE
 0036            TC     BANKCALL
 0037            CADR   IMUSTALL
 0038  2         TCF    ENDTEST
 0039  2         TC     FINDNAVB        FINE ALIGN MARKS
 0040  2         TC     FREEDSP         FREE DISPLAY SYSTEM
 0041  2         TC     SMDCALC         TO FINE ALIGN STABLE MEMBER
 0042   ERFINAL  TC     BANKCALL        LAST EARTH RATE SHOT
 0043            CADR   EARTHR
 0044            CCS    EROPTN          IF DESIRED TO COMPENSATE CONTINUALLY
 0045            TCF    MONSTART            CHANGE BY V21 N02 E XXXXX E 00000 E
 0046            TCF    ERFINAL
 0047            TCF    ENDTEST
 0048            TS     EROPTN
 0049            INHINT
 0050            CAF    PRIO21          PRIORITY 1 HIGHER THAN SXTNBIMU
 0051            TC     FINDVAC
 0052            2CADR  RDR37511
 0053            RELINT
 0054  2         TC     ERFINAL
 0055   MONSTART TC     FINETIME        TIME AT INITIAL MISALIGNMENT
 0056            DXCH   MPAC
 0057            RELINT
 0058            CAF    ZERO            ZERO PIPA COUNTERS
 0059            TS     PIPAX
 0060            TS     PIPAY
 0061            TS     PIPAZ
 0062            TS     STOREPL
 0063            TS     NDXCTR
 0064  2         TC     STORRSLT        STORE T(INITIAL) AND PIPAI = 0
 0065            INHINT
 0066            CAF    60SEC           INSURE PIPAI VARIES IN ONE DIRECTION
 0067            TC     WAITLIST
 0068            2CADR  PIP1
 0069            CAF    PIP2ADR
 0070  2         TC     JOBSLEEP
 0071   PIP1     CAF    PIP2ADR
 0072            TC     JOBWAKE
 0073  2         TC     TASKOVER
 0074   PIP2     CAE    PIPNDX
 0075            TS     PIPINDEX        POS1 PIPAY     POS2 PIPAX     POS3 PIPAX
 0076            TC     BANKCALL
 0077  2         CADR   CHECKG          SYNC ON PIPA PULSE
 0078            RELINT
 0079  2         TC     STORRSLT        STORE TIME AND PIPAI
 0080            CAE    PIPNDX +1
 0081            TS     PIPINDEX        POS1 PIPAZ     POS2 PIPAY     POS3 PIPAZ
 0082            TC     BANKCALL
 0083  2         CADR   CHECKG          SYNC ON PIPA PULSE
 0084            RELINT
 0085  2         TC     STORRSLT        STORE TIME AND PIPAI
 0086            INHINT
 0087            CAF    30SEC           MONITOR PIPAS AT 30 SECOND INTERVALS
 0088            TC     WAITLIST
 0089            2CADR  PIP1
 0090            CAF    PIP2ADR
 0091            TC     JOBSLEEP
 0092  8PIP2ADR  CADR   PIP2
 0093   FINDNAVB EXTEND                 MARKS * CALC NB OR SM WRT EARTH REF
 0094  2         QXCH   QPLACE
 0100            TC     BANKCALL
 0101            CADR   MKRELEAS        RELEASE MARK SYSTEM
 0102            CAF    ONE
 0103            TS     DSPTEM1
 0104            CAF    V01N30E         DISPLAY 00001 IN R1
 0105            TC     NVSBWAIT
 0106            CAF    ZERO            TO INDICATE GROUND MARKS
 0107            TC     BANKCALL
 0108  2         CADR   AOTMARK         MARK ON TARGET 1
 0109            TC     BANKCALL
 0110            CADR   OPTSTALL        INSURE SUCCESSFUL MARK
 0111            TCF    ENDTEST
 0112            EXTEND
 0113            INDEX  MARKSTAT
 0114            DCA    0
 0115  2         DXCH   TMARK           TIME(PRES) FOR EARTH RATE COMPENSATION
 0116  2         TC     GIMANGS1
 0117            TC     INTPRET
 0118            LXC,1  CALL
 0119                   MARKSTAT        BASE ADDRESS VAC AREA FOR AOTNB
 0120                   AOTNB           OPTICS TO NAV BASE COORDINATE FRAME
 0121            BON    CALL
 0122                   COAROFIN        COARSE MARKS = 0    FINE MARKS = 1
 0123                   +2
 0124                   NBSM            NAV BASE DIRECT TO STABLE MEMBER
 0125            STORE  STARAD          TARGET 1 WRT NAV BASE OR STABLE MEMBER
 0126            STORE  LOS1            ...FOR K...
 0127  2         EXIT
 0128            TC     BANKCALL
 0129            CADR   MKRELEAS        RELEASE MARK SYSTEM
 0130            CAF    TWO
 0131            TS     DSPTEM1
 0132            CAF    V01N30E         DISPLAY 00002 IN R1
 0133            TC     NVSBWAIT
 0134            CAF    ZERO            TO INDICATE GROUND MARKS
 0135            TC     BANKCALL
 0136  2         CADR   AOTMARK         MARK ON TARGET 2
 0137            CAF    BIT10
 0138            MASK   STATE           BIT10 = COAROFIN
 0139            CCS    A
 0140  8         TCF    EARRTCOM +5     IF COARSE ALIGN MARKS
 0141   EARRTCOM TC     BANKCALL        EARTH RATE COMPENSATION BETWEEN MARKS
 0142            CADR   EARTHR
 0143            CCS    OPTCADR         +0 IF MARK BUTTON NOT DEPRESSED
 0144            TCF    +3
 0145            TCF    EARRTCOM        CONTINUE TO COMPENSATE FOR EARTH RATE
 0146            TCF    +1
 0147            TC     BANKCALL
 0148            CADR   OPTSTALL        INSURE SUCCESSFUL MARK
 0149  2         TCF    ENDTEST
 0150  2         TC     GIMANGS1
 0151            TC     INTPRET
 0152            LXC,1  CALL
 0153                   MARKSTAT        BASE ADDRESS VAC AREA FOR AOTNB
 0154                   AOTNB           OPTICS TO NAV BASE COORDINATE FRAME
 0155            BONCLR CALL            SET TO ZERO FOR FINE ALIGN MARKS
 0156                   COAROFIN        COARSE MARKS = 0    FINE MARKS = 1
 0157                   +2
 0158                   NBSM            NAV BASE DIRECT TO STABLE MEMBER
 0159            STORE  STARAD +6       TARGET 2 WRT NAV BASE OR STABLE MEMBER
 0160  2         STORE  LOS2            ...FOR K...
 0161   MATXDET  CALL
 0162                   TAR/EREF        TARGETS 1,2 WRT EARTH REF FRAME
 0163            CALL
 0164                   AXISGEN         NAV BASE OR SM WRT EARTH REF FRAME
 0165            EXIT
 0166  4         TC     QPLACE
 0167   GIMANGS1 CAF    TWO             BASE ADDRESS GIMBAL ANGLES FOR NBSM
 0168            AD     MARKSTAT
 0169            INDEX  FIXLOC
 0170            TS     S1
 0171  8         TC     Q
 0172   PUTPOSX  EXTEND                 COARSE ALIGNS STABLE MEMBER
 0173  2         QXCH   QPLACE
 0174            TC     INTPRET
 0175            CALL
 0176                   CALCGA          CALCULATE COARSE ALIGN GIMBAL ANGLES
 0177  2         EXIT
 0178            TC     BANKCALL
 0179            CADR   IMUCOARS        COARSE ALIGN MODE
 0180            TC     BANKCALL
 0181            CADR   IMUSTALL
 0182            TCF    ENDTEST
 0183  6         TC     QPLACE
 0184   SMDCALC  EXTEND                 FINE ALIGNS STABLE MEMBER
 0185  2         QXCH   QPLACE
 0186            TC     INTPRET
 0187            VLOAD  MXV
 0188                   XSM             XSM DESIRED WRT EARTH REF FRAME
 0189                   STARAD          THEN TO SM PRESENT OR NAV BASE FRAME
 0190            VSL1   BOFF
 0191                   COAROFIN        BIT10 FOR LEMLAB TEST
 0192                   +3
 0193            STCALL 32D
 0194                   NBSM            THEN TO SM PRESENT FRAME
 0195            STOVL  XDC
 0196  2                YSM             YSM DESIRED WRT EARTH REF FRAME
 0197            MXV    VSL1
 0198                   STARAD          THEN TO SM PRESENT OR NAV BASE FRAME
 0199            BOFF
 0200                   COAROFIN        BIT10 FOR LEMLAB TEST
 0201                   +3
 0202            STCALL 32D
 0203                   NBSM            THEN TO SM PRESENT FRAME
 0204            STOVL  YDC
 0205  2                XDC
 0206            VXV    VSL1
 0207                   YDC
 0208            STCALL ZDC             ZSM DESIRED WRT SM PRESENT FRAME
 0209  2                CALCGTA         CALCULATE FINE ALIGN TORQUING ANGLES
 0210            AXT,1  RTB
 0211            ECADR  OGC             X1 = BASE ADDRESS OF TORQUING ANGLES
 0212                   PULSEIMU        TO PUT OUT GYRO TORQUING PULSES
 0213  2         EXIT
 0214            TC     BANKCALL
 0215            CADR   IMUSTALL        WAIT FOR PULSES TO GET OUT
 0216            TCF    ENDTEST
 0217  8         TC     QPLACE
 0218  2MAKEXSMD EXIT                   XSM V   YSM SW   ZSM SE
 0219            CAF    17DEC           ZERO XSM, YSM, AND ZSM
 0220            TS     ZERONDX
 0221            CAF    XSMADRX
 0222            TC     BANKCALL
 0223  2         CADR   ZEROING                 VERT       SOUTH      EAST
 0224            CAF    HALF            XSM    * +1          0          0     *
 0225            TS     XSM                    *                              *
 0226            TC     INTPRET                *                              *
 0227            DLOAD  SIN             YSM    *  0      +SIN(AZ)    +COS(AZ) *
 0228                   AZIMUTH                *                              *
 0229            STORE  XSM +8D                *                              *
 0230            STODL  XSM +16D        ZSM    *  0      -COS(AZ)    +SIN(AZ) *
 0231                   AZIMUTH
 0232            COS
 0233            STORE  XSM +10D
 0234            DCOMP
 0235            STORE  XSM +14D
 0236  4         RVQ
 0237   TAR/EREF AXT,1  AXT,2                        TARGET VECTOR
 0238                   2               SIN(EL)  -COS(AZ)COS(EL)  SIN(AZ)COS(EL)
 0239                   12D
 0240            SSP
 0241                   S2
 0242  2                6               TARGET 1                        TARGET 2
 0243   TAR1     SLOAD* SR2             X1=2  X2=12  S2=6 . X1=0  X2=6  S2=6
 0244                   TAZEL1 +3,1
 0245            STORE  0               PD00           ELEVATION            PD00
 0246            SIN
 0247  2         STODL  18D,2           PD06  ***       SIN(EL)        ***  PD12
 0248                   0
 0249            COS    PUSH            PD00            COS(EL)             PD00
 0250            SLOAD* RTB
 0251                   TAZEL1 +2,1
 0252                   CDULOGIC
 0253            STORE  2               PD02            AZIMUTH             PD02
 0254            SIN    DMP
 0255                   0
 0256            SL1
 0257  2         STODL  22D,2           PD10  ***   +SIN(AZ)COS(EL)    ***  PD16
 0258                   2
 0259            COS    DMP
 0260            SL1    DCOMP
 0261  2         STORE  20D,2           PD08  ***   -COS(AZ)COS(EL)    ***  PD14
 0262            AXT,1  TIX,2
 0263                   0
 0264                   TAR1
 0265  8         RVQ
 0266   ERTHRVSE DLOAD  PDDL
 0267                   ZERODP          PD24 = (SIN  -COS  0)(OMEG/MS)
 0268                   LATITUDE
 0269            COS    DCOMP
 0270            PDDL   SIN
 0271                   LATITUDE        EARTH RATE = .1504 ARCSEC / 10 MSEC
 0272            VDEF   VXSC            1.618 GYRO PULSES = 1 ARCSEC
 0273                   OMEG/MS         OMEG/MS = .243... GYRO PULSES / 10 MSEC
 0274  2         STORE  ERVECTOR
 0275            RTB
 0276                   LOADTIME
 0277            STORE  TMARK           TIME FOR GYRO DRIFT - PIPA SCALE FACTOR
 0278  6         RVQ
 0279   EARTHR   TC     MAKECADR        CALCULATES AND COMPENSATES EARTH RATE
 0280  2         TS     QPLACES
 0281            TC     INTPRET
 0282            RTB
 0283                   LOADTIME        T(PRESENT)
 0284            STORE  TEMPTIME
 0285            DSU    SL
 0286                   TMARK           T(PRES) - T(PREV) = DT    SCALED 10 MSEC
 0287                   9D              2 TO 21ST POWER = 1 REVOLUTION
 0288            VXSC   MXV
 0289                   ERVECTOR        VT = (SIN  -COS  0)(OMEG/MS)(DT)
 0290                   XSM             (XSM)(VT) = EARTH RATE COMPENSATION
 0291            VAD
 0292                   ERCOMP
 0293            STODL  ERCOMP
 0294                   TEMPTIME
 0295  2         STORE  TMARK           T(PREVIOUS)
 0296            AXT,1  RTB
 0297            ECADR  ERCOMP
 0298                   PULSEIMU        TO PUT OUT GYRO TORQUING PULSES
 0299  2         EXIT
 0300            TC     BANKCALL
 0301            CADR   IMUSTALL        WAIT FOR PULSES TO GET OUT
 0302            TCF    ENDTEST
 0303            CAE    QPLACES
 0304  8         TCF    BANKJUMP
 0305   STORRSLT EXTEND
 0306  2         QXCH   QPLACE
 0307            TC     INTPRET         DP TIME IN MPAC SCALED .312(5) MSEC
 0308            LXC,1  SL
 0309                   NDXCTR
 0310                   3
 0311            DMP    RTB
 0312                   SCALFTR
 0313                   SGNAGREE
 0314            STORE  GENPL,1         STORE DP TIME
 0315  2         EXIT
 0316            XCH    STOREPL         CONTAINS C(PIPAI)
 0317            INDEX  NDXCTR
 0318            TS     GENPL +2        STORE PIPA COUNTER READING
 0319            CS     NDXCTR
 0320            AD     72DEC
 0321            EXTEND
 0322            BZMF   MISALIGN        TO CALCULATE MISALIGNMENT
 0323            CAF    THREE
 0324            ADS    NDXCTR
 0325  2         TC     QPLACE
 0326   OPTDATA  EXTEND                 CALLS FOR AZIMUTH AND ELEVATION OF
 0327  2         QXCH   QPLACE             TARGET 1, THEN TARGET 2
 0328            CAF    BIT1            AZIMUTH CLOCKWISE FROM NORTH TO TARGET
 0329            ZL                     ELEVATION MEASURED FROM HORIZONTAL
 0330            LXCH   RUN
 0331            TS     DSPTEM1 +2
 0332            CAF    V05N30E         DISPLAY TARGET NUMBER IN R3
 0333            TC     NVSBWAIT
 0334            INDEX  RUN
 0335            DXCH   TAZEL1
 0336  2         DXCH   DSPTEM1
 0337            TC     CHECKLD         R1  +- XXX.XX    AZIMUTH IN DEGREES
 0338            OCT    00661           R2  +- XX.XXX    ELEVATION IN DEGREES
 0339  2         TCF    ENDTEST         R3      0000X    TARGET NUMBER 1 OR 2
 0340            DXCH   DSPTEM1         TAZEL1       TARGET 1 AZIMUTH
 0341            INDEX  RUN
 0342            DXCH   TAZEL1          TAZEL1 +2    TARGET 2 AZIMUTH
 0343            CCS    RUN
 0344            TCF    +4
 0345   OPTRDRIN CAF    TWO             SPECIAL ENTRY FOR RDR37511
 0346            TS     L
 0347            TCF    OPTDATA +4      MPAC    1ST PASS = 0    2ND PASS = 2
 0348  8         TC     QPLACE
 0349   LATAZCHK DLOAD  SL2             CALLS FOR AZIMUTH (SM) AND LATITUDE
 0350                   LATITUDE
 0351            STODL  DSPTEM1 +1
 0352  2                AZIMUTH         ...NOT REALLY...
 0353            RTB    EXIT
 0354  2                1STO2S          FRACTION OF REVOLUTION TO 2S COMPLEMENT
 0355            XCH    MPAC            AZIMUTH MUST BE 135 DEGREES  R1 = +13500
 0356            TS     DSPTEM1            FOR SXT-NB-IMU FINE ALIGNMENT TEST
 0357            TC     CHECKLD         R1  +- XXX.XX    AZIMUTH IN DEGREES (SM)
 0358            OCT    00661           R2  +- XX.XXX    LATITUDE IN DEGREES
 0359  2         TCF    ENDTEST         R3               NOT USED
 0360            TC     INTPRET
 0361            SLOAD  RTB
 0362                   DSPTEM1
 0363                   CDULOGIC        BACK TO FRACTION OF REVOLUTION
 0364  2         STORE  AZIMUTH
 0365            SLOAD  SR2
 0366                   DSPTEM1 +1
 0367            STORE  LATITUDE
 0368  4         RVQ
 0369   CHECKLD  EXTEND
 0370  2         QXCH   QPLAC
 0371            INDEX  QPLAC
 0372            CA     A
 0373            TC     NVSUB
 0374  2         TCF    CHECKLD1
 0375  2         TC     FLASHON
 0376            TC     ENDIDLE         CHANGE R1  V21 N61 E  +- XXX.XX E
 0377            TCF    +3              CHANGE R2  V22 N61 E  +- XX.XXX E
 0378            TCF    +4              VERIFY, THEN PROCEED WITH VERB 33 ENTER
 0379            TCF    CHECKLD +2
 0380            INDEX  QPLAC
 0381            TC     1
 0382            INDEX  QPLAC
 0383  2         TC     2
 0384   CHECKLD1 CAF    CHECKLD2
 0385            TC     NVSUBUSY
 0386  8CHECKLD2 CADR   CHECKLD +2
 0387   POSNJUMP EXTEND                 POSITIONS FOR SXTNBIMU
 0388  2         QXCH   QPLACE
 0389            INDEX  POSITON
 0390            TCF    +1
 0391            TCF    ENDTEST
 0392            TCF    POS1
 0393            TCF    POS2
 0394            TCF    POS3
 0395            TCF    POS4
 0396  4         TCF    POS5
 0397   POS1     CAF    ONE             XSM = V     YSM = SW    ZSM = SE
 0398            TS     PIPNDX
 0399            CAF    TWO
 0400            TS     PIPNDX +1       MONITOR PIPAY AND PIPAZ
 0401  4         TC     QPLACE
 0402   POS2     TC     INTPRET         XSM = SE    YSM = SW    ZSM = -V
 0403            VLOAD  VCOMP
 0404                   XSM
 0405            PDVL
 0406                   ZSM
 0407            STOVL  XSM
 0408            STADR
 0409            STORE  ZSM
 0410            EXIT
 0411            CAF    ZERO
 0412            TS     PIPNDX
 0413            CAF    ONE
 0414            TS     PIPNDX +1       MONITOR PIPAX AND PIPAY
 0415  4         TC     QPLACE
 0416   POS3     TC     INTPRET         XSM = SE    YSM = V     ZSM = SW
 0417            VLOAD  PDVL
 0418                   XSM
 0419                   YSM
 0420            PDVL
 0421                   ZSM
 0422  2         STOVL  XSM
 0423            STADR
 0424  2         STOVL  ZSM
 0425            STADR
 0426            STORE  YSM
 0427            EXIT
 0428            CAF    ZERO
 0429            TS     PIPNDX
 0430            CAF    TWO
 0431            TS     PIPNDX +1       MONITOR PIPAX AND PIPAZ
 0432  4         TC     QPLACE
 0433   POS4     CAF    BIT5            OPTION TO ALIGN SM TO SPECIFIED ANGLES
 0434            AD     FIXLOC
 0435            INDEX  FIXLOC
 0436            TS     S1              BASE ADDRESS GIMBAL ANGLES
 0437            CAF    V25N22E         R1  +- XXX.XX   OUTER GIMBAL ANGLE
 0438            TC     NVSBWAIT        R2  +- XXX.XX   INNER GIMBAL ANGLE
 0439            TC     ENDIDLE         R3  +- XXX.XX   MIDDLE GIMBAL ANGLE
 0440            TCF    ENDTEST
 0441            TCF    -4
 0442            CA     THETAD          SET UP ANGLES FOR SMNB
 0443            INDEX  FIXLOC
 0444            TS     24
 0445            CA     THETAD +1
 0446            INDEX  FIXLOC
 0447            TS     20
 0448            CA     THETAD +2
 0449            INDEX  FIXLOC
 0450  2         TS     22
 0451            TC     INTPRET
 0452            RTB    CALL
 0453                   TRANSPSE        EARTH REF WRT NAV BASE
 0454                   SMD/EREF        STABLE MEMBER DESIRED WRT EARTH REF
 0455            RTB
 0456                   TRANSPSE        BACK TO NAV BASE WRT TO EARTH REF
 0457            EXIT
 0458  8         TC     QPLACE
 0459   POS5     CA     QPLACE          OPTION TO ALIGN SM TO ANY ORIENTATION
 0460  2         TS     STOREPL           WRT EARTH REFERENCE FRAME
 0461  2         TC     OPTDATA         LOAD YSM AND ZSM AZIMUTH AND ELEVATION
 0462            TC     INTPRET
 0463            CALL
 0464                   TAR/EREF        CALC YSM AND ZSM WRT EARTH REF. FRAME
 0465            VLOAD  PUSH
 0466                   6D
 0467            STORE  YSM
 0468            VXV    VSL1
 0469                   12D
 0470            STORE  XSM             XSM = (YSM) X (ZSM)
 0471            VXV    VSL1
 0472            STADR
 0473            STORE  ZSM             ZSM = (XSM) X (YSM)
 0474  2         EXIT
 0475  8         TC     STOREPL
 0476   OGCZERO  EXTEND                 ZERO EARTH RATE TORQUING ANGLES
 0477  2         QXCH   QPLACE
 0478            TC     INTPRET
 0479            VLOAD
 0480                   ZERODP          VECTOR IN THIS CASE
 0481            STORE  ERCOMP
 0482            EXIT
 0483  6         TC     QPLACE
 0484   GMLCKCHK CAF    BIT6            CHECK FOR GIMBAL LOCK  (MGA GREATER 70)
 0485            MASK   DSPTAB +11D
 0486            EXTEND
 0487            BZF    +2
 0488            TCF    ENDTEST
 0489  6         TC     Q
 0490   ENDTEST  CA     IMUSEFLG        BIT8
 0491            AD     RRUSEFLG        BIT7
 0492            CS     A
 0493            INHINT
 0494            MASK   STATE
 0495  2         TS     STATE
 0496            TC     NEWMODEX
 0497  2         OCT    00000
 0498            TC     BANKCALL
 0499            CADR   MKRELEAS        RELEASE MARK SYSTEM
 0500  8         TC     EJFREE
 0501   LEMLAB   TC     INTPRET
 0502            VLOAD  VCOMP
 0503  2                YUNIT
 0504            STORE  ZNB             XNB MATRIX USED IN CALCGA
 0505            STOVL  STARAD +12D     STARAD MATRIX USED IN AXISGEN * SMDCALC
 0506  2                XUNIT
 0507            STORE  XNB             *XNB*   *1    0    0* *V*
 0508            STOVL  STARAD          *   *   *           * * *
 0509                   ZUNIT           *YNB* = *0    0    1* *S*
 0510            STORE  YNB             *   *   *           * * *
 0511            STORE  STARAD +6       *ZNB*   *0   -1    0* *E*
 0512  2         EXIT
 0513            CS     POSITON
 0514            AD     THREE
 0515            EXTEND
 0516            BZF    +2
 0517  2         TCF    LEMLAB1
 0518            TC     INTPRET
 0519            VLOAD  VCOMP
 0520                   XNB
 0521            PDVL                   *XNB*   * 0   -1    0* *V*
 0522                   ZNB             *   *   *            * * *
 0523            STORE  XNB             *YNB* = * 0    0    1* *S*
 0524            STOVL  STARAD          *   *   *            * * *
 0525            STADR                  *ZNB*   *-1    0    0* * *
 0526            STORE  ZNB
 0527            STORE  STARAD +12D
 0528  2         EXIT
 0529   LEMLAB1  TC     BANKCALL
 0530  2         CADR   IMUSTALL        INSURE IMUZERO COMPLETION
 0531  2         TCF    ENDTEST
 0532            TC     POSNJUMP        SET UP STABLE MEMBER DESIRED COORDINATES
 0533            TC     FREEDSP         FREE DISPLAY SYSTEM
 0534  2         TC     PUTPOSX         TO COARSE ALIGN STABLE MEMBER
 0535  2         TC     GMLCKCHK
 0536            TC     BANKCALL
 0537            CADR   IMUFINE         FINE ALIGN MODE
 0538            TC     BANKCALL
 0539            CADR   IMUSTALL
 0540  2         TCF    ENDTEST
 0541            CA     CDUX
 0542            INDEX  FIXLOC
 0543            TS     24
 0544            CA     CDUY
 0545            INDEX  FIXLOC
 0546            TS     20
 0547            CA     CDUZ
 0548            INDEX  FIXLOC
 0549  2         TS     22
 0550            CAF    BIT5
 0551            AD     FIXLOC
 0552            INDEX  FIXLOC
 0553  2         TS     S1
 0554  2         TC     SMDCALC         TO FINE ALIGN STABLE MEMBER
 0555            TC     INTPRET         IF EARTH RATE COMPENSATION DESIRED
 0556            RTB
 0557                   LOADTIME
 0558            STORE  TMARK
 0559  2         EXIT
 0560            CS     EROPTN
 0561            AD     TWO
 0562            EXTEND
 0563  2         BZF    +2
 0564  2         TCF    ERFINAL +2
 0565            TC     BANKCALL
 0566  8         CADR   SAMODRTN        RETURN TO SEMI-AUTOMATIC MODING TEST
 0567   RDR37511 CAF    RDRRETN         RENDEZVOUS RADAR AND ANTENNA TRACKING
 0568  2         TS     QPLACE          TO RETURN FROM OPTDATA
 0569            TC     BANKCALL
 0570  2         CADR   RRZERO
 0571            TC     BANKCALL
 0572  2         CADR   AURLOKON        OPERATOR DECISION TO LOCK ON OR NOT
 0573  2RDR1     TCF    OPTRDRIN        CALL FOR AZIMUTH AND ELEVATION
 0574            TC     BANKCALL
 0575            CADR   RADSTALL
 0576  2         TCF    ENDOFJOB
 0577            TC     INTPRET
 0578            AXT,1  AXT,2           SET UP X1 AND X2 FOR TAR/EREF
 0579                   0
 0580                   6
 0581            CALL
 0582                   TAR/EREF +3     LINE-OF-SIGHT WRT EARTH REF FRAME
 0583            VLOAD  MXV
 0584                   12D             LINE-OF-SIGHT WRT EARTH REF FRAME
 0585                   XSM             TO STABLE MEMBER PRESENT FRAME
 0586            VSL1
 0587            STCALL RRTARGET
 0588  2                RRDESSM
 0589            TCF    37511ALM
 0590            TC     BANKCALL
 0591            CADR   RADSTALL
 0592            TCF    ENDOFJOB
 0593  6         TCF    ENDOFJOB
 0594   37511ALM TC     ALARM
 0595            OCT    524
 0596  6         TCF    ENDOFJOB
 0597   RDRINIT  CS     ZERO
 0598            TS     EROPTN
 0599  8         TCF    AOTNBIMU +2
 0600   MISALIGN TC     GRABWAIT        DISPLAY SYSTEM WAS FREED
 0601            CAF    ZERO
 0602            TS     NDXCTR
 0603   BBBB     INDEX  NDXCTR
 0604            CS     GENPL +68D
 0605            INDEX  NDXCTR
 0606            ADS    GENPL +74D
 0607            CAF    63DEC
 0608            AD     NDXCTR
 0609            CCS    A
 0610            CS     THREE
 0611            ADS    NDXCTR
 0612            TCF    BBBB
 0613  4         TS     NDXCTR
 0614   CCCC     TC     INTPRET
 0615            LXA,1  DLOAD*
 0616                   NDXCTR
 0617                   GENPL +72D,1
 0618            DSU
 0619                   GENPL
 0620            STORE  GENPL +72D,1
 0621            EXIT
 0622            CS     NDXCTR
 0623            AD     69DEC
 0624            CCS    A
 0625            CAF    THREE
 0626            ADS    NDXCTR
 0627            TCF    CCCC
 0628            TS     RUN
 0629            CAF    THREE
 0630  4         TS     NDXCTR
 0631   DDDD     TC     INTPRET
 0632            VLOAD
 0633                   ZERODP
 0634            STORE  24D
 0635            STORE  30D
 0636            SLOAD
 0637                   11DEC
 0638            STORE  32D
 0639  2         EXIT
 0640   DDDD1    TC     INTPRET
 0641            LXA,1  DLOAD*
 0642                   NDXCTR
 0643                   GENPL +72D,1
 0644            DSU*   PUSH
 0645                   GENPL +66D,1
 0646            SR1    DAD*
 0647                   GENPL +66D,1
 0648  2         STORE  GENPL +72D,1
 0649            SL2    DAD
 0650                   24D
 0651            STODL* 24D
 0652                   GENPL +72D,1
 0653            SL4    DSQ
 0654            DAD
 0655                   26D
 0656            STORE  26D
 0657            EXIT
 0658            CAE    RUN
 0659            AD     NDXCTR
 0660            COM
 0661            AD     63DEC
 0662            CCS    A
 0663            CAF    SIX
 0664            ADS    NDXCTR
 0665            TCF    DDDD1
 0666            AD     RUN
 0667  4         TS     NDXCTR
 0668   EEEE     TC     INTPRET
 0669            LXC,1  SLOAD*
 0670                   NDXCTR
 0671                   GENPL +11D,1
 0672            STORE  34D
 0673            DLOAD
 0674            PUSH   SL
 0675                   8D
 0676            BDDV   DAD
 0677                   34D
 0678                   28D
 0679            STODL  28D
 0680            SL     BDDV
 0681                   6
 0682                   34D
 0683            PDDL*  SL4
 0684                   GENPL +9D,1
 0685            DMP
 0686            DAD
 0687                   30D
 0688            STORE  30D
 0689            EXIT
 0690            CS     NDXCTR
 0691            AD     60DEC
 0692            AD     RUN
 0693            CCS    A
 0694            CAF    SIX
 0695            ADS    NDXCTR
 0696  4         TCF    EEEE
 0697            TC     INTPRET
 0698            DLOAD  DMP
 0699                   24D
 0700                   30D
 0701            PDDL   DMP
 0702                   26D
 0703                   28D
 0704            DSU
 0705            PDDL   DSQ
 0706                   24D
 0707            SR1    PDDL
 0708                   32D
 0709            SL     DMP
 0710                   11
 0711                   26D
 0712            DSU    BDDV
 0713            DMP    SL
 0714                   KKKK
 0715                   3
 0716            STORE  DSPTEM2
 0717  2         EXIT
 0718            CA     POSITON
 0719  2         TS     DSPTEM2 +2
 0720            CAF    V06N66E
 0721            TC     NVSBWAIT
 0722            TC     FLASHON
 0723            TC     ENDIDLE
 0724            TCF    ENDTEST
 0725            CAF    THREE
 0726            TS     RUN
 0727            CAF    ZERO
 0728  8         TCF    DDDD -1
R0729   THIS REVISION REFLECTS CHANGES AS OF
R0730    1/31/66
R0731   ENGINE ON/OFF NOW IN CHANNEL ELEVEN.  THE BITS FOR EACH CHANNEL GET TURN
 0732  9ED ON ALL AT ONCE.  THEY STAY ON UNTIL
R0733    :ENTER:IS PUSHED.  THEN THEY ALL GO OUT AND THE NEXT CHANNEL:S BITS ARE
 0734  9 TURNED ON.
R0735   CHANNEL 5  BITS 1-8
R0736   CHANNEL 6  BITS 1-8
R0737   CHANNEL 11 BITS  13,14
R0738   CHANNEL 12 BITS 9-14
R0739   FOLLOWING THE CHANNEL 12 TESTS ENTER IS PRESSED.  CHANNEL 12 IS SET TO Z
 0740  9ERO AND THE NEXT TEST BEGUN. LOW9
R0741   GOES IN LOCATION (COUNTER) 55.
R0742   INCREASE THROTTLE RATE DESCENT ENGINE
R0743   :ENTER: NOW CAUSES THE CONTENTS OF 55 TO BE MADE NEGATIVE
R0744   DECREASE THROTTLE RATE DESCENT ENGINE
R0745   THE NEXT :ENTER: ZEROS THE REGISTER AND SENDS A PULSE TRAIN (HERE ALTERN
R0746   ZEROS FOR CLARITY) TO THE ALTITUDE METER.
R0747   THE NEXT :ENTER: WILL ADVANCE THE TEST TO THE ALTITUDE RATE METER TEST.
R0748  4THE NEXT :ENTER : WILL TERMINATE THE TEST.
 0749   SAUTOIFS CA     POSMAX
 0750            TS     NOBITS
 0751            CA     ZERO
 0752            TS     CHAN
 0753            TS     TEMP
 0754            TC     DINO
 0755  2BACK1    INCR   CHAN
 0756   DINO     INDEX  CHAN
 0757            CA     SAUTLOCS
 0758            TCF    SWCALL
 0759   SAUTLOCS CADR   CHAN5D
 0760            CADR   CHAN6D
 0761            CADR   CHAN11D
 0762            CADR   CHAN12D
 0763            CADR   PTITRDE
 0764            CADR   PTDTRDE
 0765            CADR   ALTMET
 0766            CADR   ALTRMET
 0767            CADR   ENDTEST
 0768   THROTADD CADR   PTDTRDE +5
 0769   METERADD CADR   ALTMET +3
 0770   MRATEADD CADR   ALTRMET +3
 0771   CHAN5D   CA     FIVE
 0772            TS     DSPTEM1
 0773   2ENTRY   CA     LOW8            CHANNEL 6 RETURNS HERE
 0774            TS     DSPTEM1 +1
 0775            EXTEND
 0776            INDEX  TEMP
 0777            WRITE  5
 0778   3ENTRY   CA     V04N30D         CH11,12 RETURN HERE TO USE THE DISPLAY
 0779            TC     NVSBWAIT
 0780   4ENTRY   CAF    WAITER          WAITER IS 03300
 0781            TC     NVSBWAIT
 0782            TC     ENDIDLE
 0783            TC     ENDTEST
 0784  2         TC     BACK1
 0785   CHAN6D   INCR   TEMP
 0786            INCR   DSPTEM1
 0787            CAF    ZERO
 0788            EXTEND
 0789            WRITE  5               GET RID OF CHANNEL 5 BITS
 0790            TC     2ENTRY
 0791   CHAN11D  CA     OCT11
 0792            TS     DSPTEM1
 0793            CA     BIT13-14
 0794            TS     DSPTEM1 +1
 0795            EXTEND
 0796            WOR    11              WOR IS NON EXCLUSIVE OR
 0797            CAF    ZERO
 0798            EXTEND
 0799            WRITE  6
 0800            TC     3ENTRY
 0801   CHAN12D  CA     OCT12
 0802            TS     DSPTEM1
 0803            CS     BIT13-14
 0804            EXTEND
 0805            WAND   11
 0806            CA     CH12BITS
 0807            TS     DSPTEM1 +1
 0808            EXTEND
 0809            WOR    12
 0810            TC     3ENTRY
 0811   PTITRDE  CS     CH12BITS
 0812            EXTEND
 0813            WAND   12
 0814            CA     ZERO
 0815            TS     DSPTEM1
 0816            TS     DSPTEM1 +1
 0817            TS     TEMP
 0818            CA     BIT1
 0819            TS     NOBITS
 0820   PIT      INHINT
 0821            TC     WAITLIST
 0822            2CADR  THROTASK
 0823            RELINT
 0824            CA     WAITER
 0825            TC     NVSBWAIT
 0826            TC     ENDIDLE
 0827            TC     ENDTEST
 0828            CA     ZERO
 0829            TS     NOBITS
 0830  2         TC     BACK1
 0831   PTDTRDE  CA     ZERO
 0832            TS     THRUST
 0833            CA     THROTADD
 0834            TS     TEMPADD
 0835            TC     JOBSLEEP        THIS INHIBITS THE NEXT TASK UNTIL
R0836                                            CURRENT TASK HAS BEEN COMPLETED
 0837            CA     POSMAX
 0838            TS     TEMP
 0839            CA     BIT7
 0840            TC     PIT
 0841   THROTASK CCS    NOBITS          IS THIS TASK STILL REQ
 0842            TC     +5              YES
 0843            CA     TEMPADD         NO
 0844            TS     NOBITS
 0845            TC     JOBWAKE
 0846            TC     TASKOVER
 0847            CCS    TEMP
 0848            TC     SOMETIME
 0849            CA     LOW11
 0850   ALWAYS   TS     THRUST
 0851            CA     BIT4
 0852            EXTEND                 A SMERZH FIX.
 0853            WOR    14
 0854            CA     BIT6            320 MS.DELAY
 0855            TC     WAITLIST
 0856            2CADR  THROTASK
 0857            TC     TASKOVER
 0858   SOMETIME CS     LOW11
 0859            TC     ALWAYS
 0860   ALTASK   CCS    NOBITS          IS TASK STILL REQ
 0861            TC     +5
 0862            CA     TEMPADD         NO
 0863            TS     NOBITS          ENABLES NEXT TASK
 0864            TC     JOBWAKE
 0865            TC     TASKOVER
 0866            CA     ALBITS          ACTUAL TASK STARTS HERE
 0867            TS     ALTM
 0868            CA     BIT3
 0869            EXTEND
 0870            WOR    14
 0871            CA     BIT6            320 MS. DELAY
 0872            TC     WAITLIST
 0873            2CADR  ALTASK
 0874            TC     TASKOVER
 0875   ALTMET   CA     METERADD
 0876            TS     TEMPADD
 0877            TC     JOBSLEEP
 0878            CA     ZERO
 0879            TS     TEMP
 0880            CS     BIT4
 0881            EXTEND
 0882            WAND   14
 0883            INHINT
 0884            CA     ONE
 0885            TC     WAITLIST
 0886            2CADR  ALTASK
 0887            RELINT
 0888            CA     WAITER
 0889            TC     NVSBWAIT
 0890            TC     ENDIDLE
 0891            TC     ENDTEST
 0892            CA     ZERO
 0893            TS     NOBITS
 0894  2         TC     BACK1
 0895   ALTRMET  CA     MRATEADD
 0896            TS     TEMPADD
 0897            TC     JOBSLEEP
 0898            CA     ONE
 0899            TS     TEMP            TEMP WILL BE INDEXED TO ACQUIRE BIT2 INS
 0900  9TEAD OF BIT3
 0901            CA     BIT2
 0902            EXTEND
 0903            WOR    14
 0904            TC     ALTMET +8D
P0905        THE AOT ANGLE CHECKING PROGRAM PROVIDES A SIMPLE VERIFICATION OF TH
 0906  9E ACCURACY OF THE AOT.  THE IDEA IS TO
R0907   COMPUTE THE ANGLE BETWEEN TWO LINES OF SIGHT AS INDICATED BY THE AOT, WH
 0908  9ICH IS WHAT THIS PROGRAM DOES.
R0909   INDEPENDENT KNOWLEDGE OF THE INCLUDED ANGLE PROVIDES A COMPARISON AND TH
 0910  9US A MEASURE OF THE AOT ACCURACY.
R0911  4      THE ISS NEED NOT BE ON TO RUN THIS PROGRAM.
 0912   AOTANGCK TC     INTPRET
 0913            SET    EXIT             IN CASE THE ISS IS OFF.
 0914                   COAROFIN
 0915            TC     FINDNAVB         FOR LOS1 AND LOS2.
 0916            TC     INTPRET
 0917            VLOAD  VXV
 0918                   LOS1
 0919                   LOS2
 0920            ABVAL
 0921            STOVL  SINTH            SINTH = ABVAL (VXV ).
 0922                   LOS1
 0923            DOT
 0924                   LOS2
 0925            STCALL COSTH            COSTH = V.V
 0926                   ARCTRIG
 0927            RTB
 0928                   1STO2S           DP 1S COMP TO SP 2S COMP.
 0929            STORE  THETA
 0930            EXIT
 0931            CAF    THETAADR
 0932            AD     FIXLOC
 0933            TS     MPAC +2
 0934            CAF    V06N03E          XXX.XX DEGREES IN R1.
 0935            TC     NVSBWAIT
 0936  8         TCF    ENDTEST
 0937            EBANK= 1400
 0938   ZEROERAS INHINT                 PROGRAN BY MUNTZ TO ZERO ERASEABLE
 09381           CAF    ZERO
 09382           TS     TIME3
 0939            CAF    OCT27
 0940            TS     EBANK
 0941   ZEROLP   ZL
 0942            INDEX  A
 0943            LXCH   1401
 0944            AD     TWO
 0945            ADS    EBANK
 0946            MASK   LOW8
 0947            CCS    A
 0948            TCF    ZEROLP
 0949            CCS    EBANK
 0950            TCF    ZEROLP1
 0951            TC     POSTJUMP
 0952            CADR   SLAP1
 0953   ZEROLP1  RELINT
 09531           CAF    ZERO            KEEP T4RUPT GOING, BUT NOT CYCLING.
 09532           TS     DSRUPTSW
 0954            INHINT
 0955            CS     ONE
 0956            TCF    ZEROLP
 09565 8OCT27    OCT    27
 0958            EBANK= OGC
 0960   V04N30D  OCT    00430
 0961   ALBITS   OCT    52525
 0962   THRSBITS OCT    70707
 0963   OCT12    =      TEN
 0964   OCT11    =      NINE
 0965   CH12BITS OCT    37400
 0966   V01N30D  OCT    00130
 0967  6WAITER   OCT    03300
 0968   V01N30E  OCT    00130           FOR FINDNAVB
 0969   V05N30E  OCT    00530           FOR OPTDATA
 0970   V06N03E  OCT    00603
 0971   V06N66E  OCT    00666
 0972   V24N30E  OCT    02430           FOR POSITION LOAD
 0973  2V25N22E  OCT    02522           FOR POS4
 0974   11DEC    DEC    11
 0975   17DEC    DEC    17
 0976   60DEC    DEC    60
 0977   63DEC    DEC    63
 0978   69DEC    DEC    69              FOR MISALIGN
 0979  272DEC    DEC    72              FOR STORRSLT
 0980   30SEC    DEC    3000            3000 X 10 MSEC
 0981  260SEC    DEC    6000            6000 X 10 MSEC
 0982   OGCADR   ADRES  OGC             FOR ZEROING
 0983   GENPLAD1 ADRES  GENPL
 0984   GENPLADR ECADR  GENPL           FOR POS4
 0985   KKKK     2DEC   210.39 B-14     1230 B-14 FOR CSM
 0986   RDRRETN  ADRES  RDR1 +1         FOR RDR37511
 0987   THETAADR ECADR  THETA
 0988  2XSMADRX  ADRES  XSM             FOR MAKEXSMD
 0989   SCALFTR  2DEC   .64             FOR STORRSLT
 0990   OMEG/MS  2DEC   .24339048       GYRO PULSES / 10 MSEC
P0991            THE FOLLOWING ROUTINE READS THE CLOCK AND SCALAR (CHANNELS 3 AN
 0992  9D 4) INTO A AND L, INSURING THAT THE
R0993  2DATA WAS NOT IN TRANSITION WHEN IT WAS READ.
 0994            SETLOC ENDFAILF
 0995   FINETIME INHINT                 RETURNS WITH INTERRUPT INHIBITED.
 0996            EXTEND
 0997            READ   LOSCALAR
 0998  2         TS     L
 0999            EXTEND                 SEE IF 2 READINGS AGREE. IF NOT, READ
 1000            RXOR   LOSCALAR        LOSCALAR AGAIN.
 1001            EXTEND
 1002  2         BZF    +4
 1003            EXTEND                 IF CLOCK RIPPLED BEFORE, IT WONT NOW.
 1004            READ   LOSCALAR
 1005  2         TS     L
 1006    +4      CS     POSMAX          IF LOW PART CONTAINS SOMETHING LESS THAN
 1007            AD     L               POSMAX, THE HIGH PART CAN BE READ SAFELY
 1008            EXTEND
 1009  2         BZF    FINETIME +1     TRY AGAIN - CONDITION WILL DISAPPEAR.
 1010            EXTEND
 1011            READ   HISCALAR
 1012  2         TC     Q
 1013  8ENDIMUF  =
 1014            SETLOC OMEG/MS +2
 1015   REDYTORK TC     BANKCALL
 1016            CADR   IMUSTALL
 1017  2         TCF    ENDTEST
 1018  2         TC     OGCZERO
 1019            TC     INTPRET
 1020            CALL
 1021                   ERTHRVSE        SETS UP EARTHRATE ANGLES AND TIME
 1022            EXIT
 1023            CA     OPTNREG         INITIALIZE CDUNDX FOR PULSE CATCHING
 1024            AD     NEG2            C(K) WAS 4 2 1 NOW C(A) IS 2 0 -1
 1025            TS     GYTOBETQ        C(K) = 2,0,-1 FOR  X,Y,Z.
 1026            EXTEND
 1027            BZF    +3
 1028            CAF    TWO
 1029            TC     +2
 1030            CAF    ONE
 1031            TS     CDUNDX          C(K) = 1 FOR Y, 2 FOR Z CDU SELECT
 1032            TC     BANKCALL
 1033            CADR   ENABLE
 1034   ENDIMUS1 EQUALS
L      2IMU PERFORMANCE TESTS 2
 0001            BANK   17
 0002  4         EBANK= XSM
 0003   IMUTEST  CA     ZERO
 00031           TS     DRIFTT
 00032           TS     GEOCOMPS
 00033           CAF    1SECX
 00034           TS     1SECXT
 00038  GEOIMUTT TC     INTPRET         OPTIMUM COMPASS COMES IN HERE
 0004            CALL
 0005                   LATAZCHK
 0006            EXIT
 0009            CA     ONE
 0010  2         TS     POSITON
 0011            TS     DSPTEM2 +2
 0012            TS     THETAD
 0013            TS     THETAD +1
 0014            TS     THETAD +2
 0015            TC     BANKCALL
 0016            CADR   IMUZERO
 0017            TC     BANKCALL
 0018            CADR   IMUSTALL
 0019            TCF    ENDTEST1
 0020   IMUBACK  CA     ZERO
 0021            TS     DSPTEM2 +1
 0022            TS     NDXCTR
 0023            TS     TORQNDX
 0024            TS     TORQNDX +1
 0026            CAF    TESTTIME
 0028            TS     DSPTEM2
 0029            TC     BANKCALL        ISS RETURNS IN COARSE ALIGN MODE TO
 0030            CADR   IMUCOARS        ENABLE OPERATOR TO DECIDE WHAT TO DO
R0031   ABOUT GIMBAL LOCK
 0032            TC     SHOWLD
 0033  4         TC     SHOW
 0034            TC     BANKCALL
 0035            CADR   IMUSTALL
 0036            TC     ENDTEST1
 0037            TC     NBPOSPL
 0038            TC     POSGMBL
 0039            TC     PIPACHK         IF MGA IS 60DEG+ PROG WILL STAY IN COARS
 0040  9ALIGN AND MEASURE VERITCAL PIPA RATE
 0041            TC     FALNE
 0042            TC     BANKCALL
 0043            CADR   IMUSTALL
 0044            TCF    ENDTEST1
 00442           CCS    GEOCOMPS
 00443           TC     JUMPLOAD
 0045   GUESS    TC     INTPRET         CALCULATE -COS LATITUDE AND SIN LATITUDE
 0046            DLOAD  COS             FOR ESTIMATE
 0047                   LATITUDE
 0048            DCOMP  SL1
 0049            STODL  WANGI
 0050                   LATITUDE
 0051            SIN    SL1
 0052            STOVL  WANGO            LOAD TRANSITION MATRIX INTO ERASABLE
 00521                  GEORGED
 00522           STOVL  TRANSM1
 00523                  GEORGEC
 00524           STOVL  TRANSM1 +6
 00525                  GEORGEB
 00526           STORE  TRANSM1 +12D
 0053            EXIT
 00531  JUMPLOAD TC     LOADGTSM
 0054            TC     BANKCALL
 0055            CADR   ESTIMS
 0075   TORQUE   TC     PHASCHNG        FILTER TORQUES PLTFM AND SETS UP ERATE
 0076            OCT    00000
 0081            CA     ZERO
 0082            TS     DSPTEM2
 0083            CA     DRIFTI
 0084            TS     DSPTEM2 +1
 0085            INDEX  POSITON
 0086            TS     SOUTHDR -1
 0087  2         TC     SHOW
 0088   PIPACHK  INDEX  NDXCTR          TORQUE PLATFORM TO CORRECT  LEVELING ERR
 0089            TC     +1              IN PREPARATION TO MEASURING VERTICAL
 0090            TC     BANKCALL        PIPA OUTPUT PULSE RATE
 0091  2         CADR   EARTHR
 0092            CA     DEC17            ALLOW PIP COUNTER TO OVERFLOW 17 TIMES
 0093            TS     DATAPL +4
 0094            CA     BIT10           IN THE ALLOTED TIME INTERVAL
 0095            TS     LENGTHOT
 0096            CA     ONE
 0097            TS     RESULTCT
 0098            CA     ZERO            ZERO PIPA COUNTER INITIALLY
 0099            INDEX  PIPINDEX
 0100            TS     PIPAX
 0101            TS     DATAPL
 0102            CA     DEC56            LOOP 56 TIMES 5.12 SEC "ACH. EACH INCR.
 0103            TC     WAITLOOP        WILL ALSO CORRECT EARTH RATE
 0104            INHINT
 0105            TC     CHECKG
 0106            RELINT
 0107            TC     DATALD
 0108            CA     FIVE
 0109            TS     RESULTCT
 0110            INDEX  NDXCTR
 0111            TC     +1
 0112            TC     BANKCALL
 0113            CADR   EARTHR
 0114            CCS    COUNTPL
 0115            TC     WAITLP2
 0116            CCS    DATAPL +1
 0117            TC     +4
 0118            TC     CCSHOLE
 0119            CS     DATAPL +4
 0120            TS     DATAPL +4
 0121            EXTEND
 0122            DCS    DATAPL
 0123  2         DAS    DATAPL +4
 0124            TC     INTPRET
 0125            DLOAD  DSU
 0126                    DATAPL +6
 0127                   DATAPL +2
 0128            PDDL   DDV
 0129                   DATAPL +4
 0130            PDDL   DMP
 0131                   DEC585          DEC585 HAS BEEN REDEFINED FOR LEM
 0132            RTB
 0133                   SGNAGREE
 0134            STORE  DSPTEM2
 0135            EXIT
 0136            TC     SHOW
 0137   VERTDRFT CA     3990DEC         NUMBER OF SECONDS TO SPEND ESTIMATING
 0138            TS     LENGTHOT
 01381           TC     BANKCALL        THIS WILL CORRECT FOR EARTH RATE DURING
 01382           CADR   EARTHR          TIME SPENT IN SHOW ABOVE*
 01383           CA     CDUX            STOORE AXIS  FOR LAB CALC OF DRIFT
 01384           TS     LOSVEC
 0139            INDEX  POSITON
 0140            CS     SOUTHDR -2
 0141            TS     DRIFTT
 014101          TC     LOADGTSM
 0142            CA     ZERO            ALLOW ONLY SOUTH GYRO EARTH RATE COMPENS
 0143            TS     XSM
 0144            TS     XSM +1
 0145            TS     XSM +4
 0146            TS     XSM +5
 0147            TS     YSM
 0148            TS     YSM +1
 0149            TS     YSM +4
 0150            TS     YSM +5
 0151            TS     ZSM
 0152            TS     ZSM +1
 0153            TS     ZSM +4
 0154            TS     ZSM +5
 0155   GUESS1   CAF    POSMAX
 0156            TS     TORQNDX
 0157            TS     TORQNDX +1
 0158            TC     BANKCALL
 0159            CADR   ESTIMS
 0170   VALMIS   TC     PHASCHNG
 01701           OCT    00000
 01702           CA     DRIFTO
 0171            TS     DSPTEM2 +1
 01711           CA     CDUX            STORE OG ANGLE FOR LAB CALC OF DRIFT**
 01715           TS     LOSVEC +1
 0172            CA     ZERO
 0173            TS     DSPTEM2
 0174  4         TC     SHOW
 0175   FINISH   CA     ONE
 0176            AD     POSITON
 0177            TS     DSPTEM2 +2
 0178            CA     TWO
 0179            TS     QPLACE
 0180            TC     BANKCALL
 0181            CADR   TSELECT -6
 0182   ENDTEST1 TC     BANKCALL
 0183  8         CADR   ENDTEST
 0184   OPCHK    CAF    DELYOFF         AUTOMATIC TEST FOR SYSTEM OPERATION
 0185            EXTEND
 0186            RAND   30              CHECK TO SEE IF IMU IS ON
 0187            CCS    A
 0188            TC     ALARMS
 0189            CAF    V16N20S
 0190  2         TC     NVSBWAIT
 0191            TC     FREEDSP
 0192            TC     BANKCALL
 0193            CADR   IMUZERO
 0194            TC     BANKCALL
 0195  2         CADR   IMUSTALL
 0196            TCF    ENDTEST1
 0197            CA     BIT8            ZERO ALL ERASEABLE USED IN TEST
 0198            TS     ZERONDX
 0199            CA     GENPLAD
 0200            TC     ZEROING
 0201  2         TC     NBPOSPL         ALIGN ANGLE COMPUTATION
 0202  2         TC     POSGMBL         COARSE ALIGN THOSE GIMBALS NOW
 0203            TCF    OPCHK
 0204  2         TC     FALNE           FINE ALIGN PLATFORM BY TORQUING GYROS
 0205            TC     BANKCALL
 0206            CADR   IMUSTALL
 0207            TCF    ENDTEST1
 0208            CA     TWO
 0209   CDUCHECK TS     CDUNDX          THIS LOOP CHECKS FOR NO ERROR BETWEEN
 0210            INDEX  CDUNDX          DESIRED CDU ANGLES AND THE ACTUAL ANGLES
 0211            CS     THETAD
 0212            INDEX  CDUNDX
 0213            AD     CDUX
 0214            TS     STOREPL
 0215            CCS    STOREPL
 0216            TC     ERRMASK
 0217            TC     NOERR
 0218            TC     ERRMASK
 0219   NOERR    CCS    CDUNDX
 0220            TC     CDUCHECK
 0221            TC     LOADIC
 0222   ERRMASK  MASK   LOWFOUR         ALLOW FIVE BIT ERRORS
 0223            CCS    A
 0224            TC     ALARMS
 0225            TC     NOERR
 0226   LOADIC   CA     ONE
 0227            TS     RESULTCT
 0228            CS     ONE
 0229  2         TS     MASKREG         SETS UP AZIMUTH AND VERTICAL VECTORS FOR
 0230            CA     ZERO
 0231            TS     PIPAX
 0232            TS     PIPAY
 0233  2         TS     PIPAZ
 0234            CA     BIT11
 0235            TS     LENGTHOT         VECTOR IN PIPA COUNTERS
 0236            CA     ONE
 0237            TC     WAITLOOP
 0238            CCS    COUNTPL
 0239            TC     WAITLP2
 0240            CA     DEC56
 0241            TC     WAITLOOP
 0242   OPCHK1   CA     TWO
 0243   OPCHK2   TS     PIPINDEX
 0244            INHINT
 0245            TC     CHECKG
 0246            RELINT
 0247            CA     ZERO
 0248            INDEX  PIPINDEX
 0249            TS     PIPAX
 0250            TC     DATALD          LOAD PIPA DATA AND TIME IN DATAPL
 0251            XCH    RESULTCT
 0252            AD     FOUR
 0253            TS     RESULTCT
 0254            CCS    PIPINDEX
 0255            TC     OPCHK2
 0256   READOUT  CS     FOUR
 0257            AD     RESULTCT
 0258            TS     RESULTCT
 0259            ZL
 0260            INDEX  RESULTCT
 0261            CA     DATAPL
 0262            LXCH   A
 0263            INDEX  RESULTCT
 0264            DAS    GENPL +1
 0265            CA     RESULTCT
 0266            MASK   MASKREG
 0267            CCS    A
 0268            TC     READOUT
 0269            CA     TEN
 0270            AD     THREE
 0271            TS     RESULTCT
 0272            CS     A
 0273            TS     MASKREG
 0274            CCS    COUNTPL
 0275            TC     WAITLP2
 0276            TC     COMPUT
 0277   RADCK    CA     V16N40S
 0278            TC     NVSBWAIT        OPERATOR WILL CHECK RADAR STATUS.IN LAB.
 0279            TC     FLASHON         SET RADAR OFF THEN PUT RESOLVER STANDARD
 0280            TC     ENDIDLE         ON TRUNNION AND SET TO +45 DEG.SHAFT WIL
 0281            TC     ENDTEST1
 0282            TC     +1              AFTER SETTING RES STANDARD DO A V33
 0283            CA     ZERO
 0284            TS     TANG +1
 0285            CA     45DEG
 0286            TS     TANG
 0287   DRIVRAD  TC     BANKCALL        IN SC WHEN RAD PRESENT DO V33 RIGHT AWAY
 0288            CADR   RRZERO          LGC WILL ATTEMPT TO DRIVE 45 DEG TRUNN.
 0289            TC     BANKCALL        TO MATCH STANDARD, AFTER ZEROING CDUS
 0290            CADR   RADSTALL
 0291            TC     ENDTEST1
 0292            TC     INTPRET
 0293            CALL
 0294                   RRDESNB
 0295            TC     BANKCALL
 0296            CADR   RADSTALL        IF CDU FAILS TO AGREE WITH COMMAND TO
 0297  2         TC     ALARMS          1 DEG GET ALARM HERE
 0298            TC     FLASHON         OPERATOR WILL CHECK STATUS OF RADAR
 0299            TC     ENDIDLE         IN S/C DO V33 TO CONTINUE WITH SHAFT
 0300            TC     ENDTEST1        TEST
 0301            TC     +1              IN LAB TURN RADAR OFF CHANGE RES STANDAR
 0302            CA     ZERO            TO SHAFT AND SET FOR -45DEG.
 0303            TS     TANG            THEN DO A V33 IF WANT TO REPEAT CHECK
 0304            CS     45DEG           DO A V34 TO TERMINATE
 0305            TS     TANG +1
 0306            TC     DRIVRAD
 0307   ALARMS   XCH    Q
 0308            TS     QPLACE
 0309            TC     ALARM
 0310            OCT    1411
 0311  8         TC     QPLACE
 0312   GYRSFTST TC     INTPRET         START ADRESS FOR IRIG SF TEST
 0313            CALL
 0314                   LATAZCHK        LOAD AZ AND LAT
 0315            EXIT
 0316   TESTCALL CAF    V21N30E
 0317            TC     NVSBWAIT        LOAD + OR - 1 FOR + OR - X TEST (+00001)
 0318            TC     ENDIDLE         LOAD + OR - 2 FOR + OR - Y TEST
 0319            TCF    ENDTEST1        LOAD + OR - 3 FOR + OR - Z TEST
 0320            TC     TESTCALL
 0321            XCH    DSPTEM1
 0322            TS     CALCDIR
 03221           EXTEND                 THIS ROUTINE LOOKS AT THE SIZE OF THE
 03222           BZMF   NEGSIZ          ENTRY MADE BY THE OPERATOR, IF HE DID NO
 03223  SIZLOOK  MASK   NEG3            T ENTER TEST NO THAT IS W/I PERMISSIBLE
 03224           EXTEND                 RANGE- HE WILL BE ASKED TO LOAD AGAIN.
 03225           BZF    GUDENTRY          THIS IS CONSIDERED NECESSARY BECAUSE
 03226 2         TC     TESTCALL        OF FOLLOWING INDEXED TC WHICH COULD
 03227  NEGSIZ   COM                    SEND THE COMPUTER OFF INTO THE BOONDOCKS
 03228           TC     SIZLOOK         TO PLAY WITH ITSELF IF THE OPERATOR
 03229  GUDENTRY CA     CALCDIR         MAKES ABAD ENTRY******
 0323            AD     FOUR
 0324            INDEX  A
 0325            TC     +1
 0326            TC     TESTCALL
 0327            TC     +6              C(A)=+00001 FOR -Z
 0328            TC     +4              C(A)=+00002 FOR -Y
 0329            TC     +2              C(A)=+00003 FOR -X
 0330            TC     -4              C(A)=+00004   ERROR
 0331            TC     +3              C(A)=+00005 FOR +X
 0332            TC     +6
 0333            TC     +10
 0334            CAF    FOUR
 0335            TS     POSITON         4 IS FOR A.L. POSN 4 USED FOR X SF TEST
 0336            TC     +7
 0337            TC     +6
 0338            CAF    TWO
 0339            TS     POSITON         +2 IS A.L. POS 2 USED FOR Y SF TEST
 0340            TC     +3
 0341            CAF    ONE
 0342            TS     POSITON         +1 IS A.L. POS 1 USED FOR Z SF TEST
 0343            TS     OPTNREG         C(K) = (4,2,1) FOR X,Y,Z
 0344            TS     SAVE +1
 0345            TC     FREEDSP
 0346            CAF    ZERO
 0347            TS     NBPOS           SET UP NB COORD TO Z NORTH, X UP
 0348            TS     SAVE +2         INITIALIZE FOR EARTHR DESIGNATE USAGE
 0349            TS     TESTNO          INITIALIZE FOR TEST ABORT ROUTINE
 0350            TS     CDUFLAG         ZEROS FOR STRTWACH USE
 0351            CAF    SFCONST
 0352  2         TS     SFCONST1         FOR DIVISION DURING CALCSFE
 0353            TC     BANKCALL
 0354            CADR   IMUZERO
 0355            TC     BANKCALL
 0356            CADR   IMUSTALL
 0357            TCF    ENDTEST1
 0358            TC     NBPOSPL
 0359            TC     POSGMBL
 0360            TCF    ENDTEST1
 0361            TC     FALNE
 0362            TC     BANKCALL
 0363            CADR   REDYTORK
 0364   WAITFIVE TS     SOUTHDR
 0365            CAF    BIT6            THIS SECTION CALLS FOR 2-32 MSEC WAITS
 0366            TC     DIRECTN -5
 0367   ENABLE   CAF    BIT6
 0368            EXTEND                 ENABLE GYRO TORQUING LOOP BY TURNING
 0369  2         WOR    14C             ON CAL MODULE RELAY
 0370            INHINT
 0371            CS     TWO             SETS UP EXEC SWITCH SO IMUPULSE WILL
 0372            MASK   IMODES33        NOT TURN OFF GYRO TORQ ENABLE RELAY
 0373            AD     TWO
 0374            TS     IMODES33
 0375            CAF    TWO
 0376            TS     SOUTHDR
 0377            TS     LENGTHOT         20 MSEC DELAY FOR GYRO LOOP STABILIZAT.
 0378            CA     ONE
 0379            TC     WAITLOOP
 0380            CCS    COUNTPL
 0381            TC     WAITLP2
 0382   DIRECTN  TC     BANKCALL         TORQUING ROUTINE IN IMU PERFORMANCE
 0383            CADR   SILVER             BANK 3
 0384            CCS    SOUTHDR         A ONE FIRST TIME THROUGH, THEN ZERO
 0385  2         TC     WAITFIVE
 0386   STRTWACH CCS    CDUFLAG          RETURNS HERE VIA QPLACE FROM SILVER
 0387            TC     CDUZOTST        BEEN CAUGHT AND CDU THROUGH ZERO IS
 0388            CCS    SAVE +1
 0389            TC     LOOKCDUP -4
 0390            TC     LOOKCDUP
 0391   CORRECT  CAF    ZERO
 0392            TS     LGYRO            RELEASES GYROS FOR IMUPULSE USAGE
 0393            TC     BANKCALL        EARTHRATE CORRECTION TO GYROS NOT EAST
 0394            CADR   EARTHR          OR WEST
 0395            CAF    ONE
 0396            TS     LGYRO           RESERVES GYROS FOR S.F. TEST TORQUING
 0397            TS     SAVE +2         INITIALIZES TO INSURE 5.6 DEG OF TORQ)
 0398            ADS    TESTNO          INCR THE BURST COUNTER, WHICH IS USED TO
 0399            CS     TESTNO          COUNT THE NO. OF TIMES THE GYRO COUNTER
 0400            MASK   FIVE            IS LOADED. IF A TENTH LOAD IS REQUESTED
 0401            EXTEND                 THE SFE IS TOO LARGE TO BE MEANINGFULL
 0402            BZF    STOPTEST        OR THE CDU,S ARE NOT WORKING.
 0403  2         TC     DIRECTN
 0404            CAF    ZERO            ZEROS CDU REG WHICH WILL BE USED TO
 0405            TS     SAVE +1
 0406            INDEX  CDUNDX          MEASURE ANGLE.
 0407            TS     CDUX
 0408   LOOKCDUP INHINT
 0409            CAF    BIT5
 0410   STILLOOK TS     TIMER
 0411            INDEX  CDUNDX          LOOKS FOR FIRST CDU PULSE AFTER TORQUING
 0412            CCS    CDUX            STARTS
 0413            TC     OUTPLUS         HERE IS PLUS PULSE
 0414            TC     TIMEWACH
 0415            TC     ALARMS          TTELL OPERATOR FIRST CDU PULSE WAS MISSD
 0416            TC     OUTNEG          HERE IS MINUS PULSE
 0417   TIMEWACH CCS    TIMER           WATCHES TIME IN INHINT SO COPS WILL NOT
 0418            TC     STILLOOK        CATCH US
 0419  2         RELINT
 0420            CCS    NEWJOB
 0421            TC     CHANG1
 0422  2         TC     LOOKCDUP        KEEP WATCHING IF THE PULSE IS NOT HERE
 0423   OUTPLUS  CS     DESANGLE        -2047 CDU PULSES ADDED TO CDU REG SO
 0424            INDEX  CDUNDX          ZERO CROSSOVER CAN BE DETECTED
 0425            TS     CDUX
 0426   LOADFLAG CAF    ONE
 0427            TS     CDUFLAG
 0428            CA     GYROCTR         GYRO TORQ CMDS LEFT OUT OF FIRST 5.625
 0429            TS     SAVE            DEG COMMANDED WHEN CDU PULSE ARRIVED
 0430            RELINT
 0431  2         TC     CDUZOTST
 0432   OUTNEG   CA     DESANGLE
 0433            INDEX  CDUNDX
 0434            TS     CDUX
 0435  2         TC     LOADFLAG
 0436   CDUZOTST INDEX  CDUNDX
 0437            CCS    CDUX
 0438            TC     +4
 0439            TC     ENDWATCH
 0440            TC     +2
 0441            TC     ENDWATCH
 0442            CAF    BIT10           RAND WITH BIT 10 TO SEE IF STILL TORQ.
 0443            EXTEND
 0444            RAND   14C
 0445            CCS    A
 0446  2         TC     +6
 0447            CCS    SAVE +2          SEE IF 2.8DEG OR 5.6 DEG SINCE LAST
 0448            TC     +2              EEARTHR USE, IF 2.8 DEG, DO 2.8 MORE
 0449            TC     CORRECT           THEN GO TO CORRECT
 0450            TS     SAVE +2
 0451            TC     DIRECTN
 0452            CCS    NEWJOB
 0453            TC     CHANG1
 0454  2         TC     CDUZOTST
 0455   ENDWATCH INHINT                 WWILL STOR GYROCTR AT END OF 2048 CDU
 0456            CAF    ZERO            PULSES AND STOP TORQ BY ZEROING REQUESTS
 0457            TS     LGYRO            RELEASE GYROS FOR OTHERS USAGE
 0458            XCH    GYROCTR
 0459            TS     SAVE +1         AND STOPS TORQUING BY ZEROING TORQ
 0460            CS     TWO
 0461            MASK   IMODES33        THIS TURNS OFF EXEC SWITCH SO THE GYRO
 0462            TS     IMODES33        TORQ. ENABLE RELAY CAN BE TURNED OFF.
 0463            RELINT
 0464   CALCSFE  CA     SAVE            GYROCTR AT TEST START
 0465            EXTEND
 0466            SU     SAVE +1         GYROCTR AT TEST END
 0467            TS     SAVE +2
 0468            EXTEND
 0469            BZMF   ARITH           SEE IF IT IS NEG OR ZERO,IF NEG,SFE IS +
 0470            MASK   SIZCHK
 0471            EXTEND                 THIS ROUTINE TESTS SAVE-(SAVE+1) TO SEE
 0472            BZF    NEGSFE          IF THE RESULT IS WITHIN PERMISSIBLE SIZE
 0473            CS     SAVE +2         AND DETERMINES POLARITY OF SFE USING THE
 0474            MASK   SIZCHK          PRESENCE OR ABSENCE OF BITS 12,13,14.
 0475            EXTEND                 IF BITS ARE PRESENT IN POSITIVE SAVE +2
 0476            BZF    POSSFE          THEN THE SFE MUST BE POS. IF DIFFERENCE
 0477            TC     STOPTEST        IS GREATER THAN 2047 PULSES FROM THE
 0478   NEGSFE   CAE    SAVE +2         IDEAL NO OF PULSES, THE SFE EXCEEDS
 0479  2         TC     ARITH           15600 PPM, THE TEST IS NOT VALID AND
R0480   THEREFORE ABORTS AND TURNS ON PROGRAM ALARM
 0481   POSSFE   CAF    POSMAX          POS SFE DEFINITION = IRIG SF IN SEC OF
 0482            EXTEND                 ARC PER PULSE IS GREATER THAN
 0483            SU     SAVE +2         .61798095703125  SEC OF ARC/ PULSE
 0484  2         TC     ARITH +1
 0485   ARITH    COM
 0486            ZL
 0487            EXTEND
 0488            DV     SFCONST1
 0489   LOADIT   TS     DSPTEM2
 0490  2         TC     DATADSP
 0491   DATADSP  TC     GRABDSP
 0492            TC     PREGBSY
 0493            CA     CALCDIR
 0494            TS     DSPTEM2 +2      DISPLAYS TEST NO JUST PERFORMED
 0495            CAF    VB06N66          R3 = TEST NO JUST PERFORMED
 0496            TC     NVSBWAIT
 0497            TC     FLASHON
 0498            TC     ENDIDLE         TO END TEST DO V34E
 0499            TC     +2
 0500            TC     TESTCALL        TO CONTINUE TEST DO V33E
 0501            TC     BANKCALL
 0502            CADR   IMUZERO
 0503            TC     BANKCALL
 0504            CADR   IMUSTALL
 0505            TCF    ENDTEST1
 0506  2         TCF    ENDTEST1
 0507   STOPTEST TC     BANKCALL
 0508            CADR   IMUZERO
 0509            TC     BANKCALL        CORRECT CDUCTRS AND TURN ON PROG ALARM
 0510            CADR   IMUSTALL        TO TELL OPERATOR LAST CDU PULSE WAS
 0511            TCF    ENDTEST1        MISSED OR GYRO TORQ LOOP WAY OUT OF
 0512            CAF    ZERO            ALLOWABLE LIMITS.........
 05122           TS     LGYRO           **** RELEASE GYROS FOR OTHERS USAGE*****
 05126           TC     ALARMS
 0513  8         TCF    ENDTEST1
 0514   CHECKG   EXTEND                 PIP PULSE CATCHING ROUTINE
 0515            QXCH   QPLACE          RECORDS TIME AT OCCURRENCE OF A DELTA V
 0516   CHECKG1  RELINT                 KEEPS CONTENT OF PIPA REG INTACT
 0517            CCS    NEWJOB
 0518            TC     CHANG1
 0519            INHINT
 0520            CAF    ZERO
 0521            INDEX  PIPINDEX
 0522            XCH    PIPAX
 0523            TS     STOREPL
 0524            CCS    STOREPL
 0525            TC     CHECKP
 0526            TC     RESTOREA
 0527            TC     CHECKM
 0528            TC     RESTOREA
 0529   CHECKP   CAF    BIT6            LOOKS FOR ONE MORE PLUS PULSE
 0530            TS     PIPANO
 0531            INDEX  PIPINDEX
 0532            CCS    PIPAX
 0533            TC     CHECKG3
 0534            TC     +3
 0535            TC     RESTOREA
 0536            TC     +1
 0537            CCS    PIPANO
 0538            TC     CHECKP +1
 0539            TC     RESTOREA
 0540   CHECKM   CAF    BIT6            LOOKS FOR ONE MORE MINUS PULSE
 0541            TS     PIPANO
 0542            INDEX  PIPINDEX
 0543            CCS    PIPAX
 0544            TC     RESTOREA
 0545            TC     +3
 0546            TC     CHECKG3
 0547            TC     +1
 0548            CCS    PIPANO
 0549            TC     CHECKM +1
 0550            TC     RESTOREA
 0551  2CHECKG3  TC     FINETIME        TIME IN DOUBLE PRECISION LEFT IN MPAC
 0552            DXCH   MPAC
 0553            CAF    BIT4
 0554   CHECKG5  TS     PIPANO
 0555            INDEX  PIPINDEX
 0556            CCS    PIPAX
 0557            TC     +4
 0558            TC     RESTOREA
 0559            TC     +2
 0560            TC     RESTOREA
 0561            CCS    PIPANO
 0562            TC     CHECKG5
 0563   NREAD    TC     RESTORE
 0564            TS     STOREPL
 0565            TC     QPLACE
 0566   RESTORE  XCH    STOREPL         A WILL CONTAIN PREVIOUS PIPA CNTR CONTEN
 0567            INDEX  PIPINDEX        STOREPL WILL CONTAIN ZERO
 0568            AD     PIPAX
 0569            INDEX  PIPINDEX
 0570            TS     PIPAX
 0571  8         TC     Q
 0572   RESTOREA TC     RESTORE
 0573            TC     CHECKG1
 0574   DATALD   CA     STOREPL
 0575            INDEX  RESULTCT
 0576            TS     DATAPL
 0577            CA     MPAC
 0578            INDEX  RESULTCT
 0579            TS     DATAPL +1
 0580            CA     MPAC +1
 0581            INDEX  RESULTCT
 0582            TS     DATAPL +2
 0583  6         TC     Q
 0584   POSGMBL  EXTEND                 COARSE ALIGNING SUBROUTINE
 0585  2         QXCH   QPLACE
 0586            TC     INTPRET
 0587            CALL
 0588                   CALCGA
 0589  2         EXIT
 0590            TC     BANKCALL
 0591            CADR   IMUCOARS
 0592            CA     GMLOCKCK        IF FAILREG CONTAINS 401 WILL RETURN TO
 0593            MASK   FAILREG
 0594            CCS    A               L +1, OTHERWISE TO L +2.
 0595            TC     LOCK
 0596            INCR   QPLACE
 0597            TC     +3
 0598   LOCK     CA     TWO
 0599            TS     NDXCTR
 0600            TC     BANKCALL
 0601            CADR   IMUSTALL
 0602            TCF    ENDTEST1
 0603            TC     QPLACE
 0604  8GMLOCKCK OCT    00401
 0606   FALNE    EXTEND                 TORQUES GYROS TO NULL OVT DIFFERENCE
 0607            QXCH   QPLACE          BETWEEN DESIRED SM ORIENTATION WITH RESP
 0608            TC     BANKCALL        TO NBASE AND ACTUAL
 0609            CADR   IMUZERO
 0610            TC     BANKCALL
 0611            CADR   IMUSTALL
 0612            TCF    ENDTEST1
 0613            TC     BANKCALL
 0614            CADR   IMUFINE
 0615            TC     BANKCALL
 0616            CADR   IMUSTALL
 0617            TCF    ENDTEST1
 0618   FALNE1   CA     CDUX
 0619            INDEX  FIXLOC
 0620            TS     24
 0621            CA     CDUY
 0622            INDEX  FIXLOC
 0623            TS     20
 0624            CA     CDUZ
 0625            INDEX  FIXLOC
 0626            TS     22
 0627            CA     BIT5
 0628            AD     FIXLOC
 0629            INDEX  FIXLOC
 0630            TS     S1
 0631            TC     INTPRET
 0632            VLOAD  MXV
 0633                   XSM
 0634                   STARAD
 0635            VSL1
 0636            STCALL 32D
 0637                   NBSM
 0638            STOVL  XDC
 0639                   YSM
 0640            MXV    VSL1
 0641                   STARAD
 0642            STCALL 32D
 0643                   NBSM
 0644            STOVL  YDC
 0645                   XDC
 0646            VXV    VSL1
 0647                   YDC
 0648            STCALL ZDC
 0649                   CALCGTA
 0650            EXIT
 0651            CA     OGCPL
 0652            TC     BANKCALL
 0653            CADR   IMUPULSE
 0654  2         TC     QPLACE
 0655   WAITLOOP EXTEND                 LOOPS IN X SEC INCREMENTS FOR NUMBER OF
 0656            QXCH   QPLAC
 0657            TS     COUNTPL         NUMBER PUT INTO LENGTHOT
 0658   WAITLP1  CCS    COUNTPL
 0659            TC     +4
 0660            TC     QPLAC
 0661            TC     +2
 0662            TC     WAITLP1 -1
 0663            INHINT
 0664            CAE    LENGTHOT
 0665            TC     WAITLIST
 0666            2CADR  WAITLP3
 0667            RELINT
 0668            CCS    COUNTPL
 0669            TC     QPLAC
 0670            TC     QPLAC
 0671            NOOP
 0672   WAITLP2  TS     COUNTPL         ENTER HERE AFTER DOING CALLING JOB
 0673            CAF    WTLPCADR
 0674            TC     JOBSLEEP
 0675   WTLPCADR CADR   WAITLP1
 0676   WAITLP3  CAF    WTLPCADR
 0677            TC     JOBWAKE
 0678  6         TC     TASKOVER
 0679   ZEROING  TS     L
 0680            TCF    +2
 0681   ZEROING1 TS     ZERONDX
 0682            CAF    ZERO
 0683            INDEX  L
 0684            TS     0
 0685            INCR   L
 0686            CCS    ZERONDX
 0687            TCF    ZEROING1
 0688            TC     Q
 0689   COMPUT   TC     INTPRET         CALCULATE LENGTH OF GRAVITY VECTOR AS
 0690            AXT,1  AXT,2           MEASURED BY ACCELEROMETERS
 0691                   22D
 0692                   10D
 0693            SSP
 0694                   S1
 0695                   4
 0696            SSP
 0697                   S2
 0698  2                4
 0699   LOPDELOP DLOAD* DSU*
 0700                   DATAPL +24D,2
 0701                   DATAPL +24D,1
 0702            PDDL*  DMP
 0703                   GENPL +24D,2
 0704                   DEC585
 0705            DDV
 0706            TIX,2  VDEF
 0707                   NEXT
 0708            ABVAL  RTB
 0709                   SGNAGREE
 0710            STCALL DSPTEM2
 0711                   KODU
 0712   NEXT     PUSH   TIX,1
 0713                   LOPDELOP
 0714   KODU     EXIT
 0715            TC     GRABWAIT
 0716            TC     SHOW
 0717            TC     INTPRET
 0718            SLOAD  PUSH
 0719                   DATAPL +1
 0720            SLOAD  PUSH
 0721                   DATAPL +5
 0722            SLOAD  VDEF
 0723                   DATAPL +11
 0724            UNIT   VSL1
 0725            PUSH
 0726            SLOAD  PUSH
 0727                   DATAPL +15
 0728            SLOAD  PUSH
 0729                   DATAPL +21
 0730            SLOAD  VDEF
 0731                   DATAPL +25
 0732            UNIT   VSL1
 0733            PDDL   DSU
 0734                   DATAPL +26
 0735                   DATAPL +12
 0736            SL4
 0737            SL3
 0738            STOVL  LENGTHOT
 0739            VXV    ABVAL
 0740            DMP    DDV
 0741                   ERUNITS
 0742                   LENGTHOT
 0743            RTB
 0744                   SGNAGREE
 0745            STORE  DSPTEM2
 0746            EXIT
 0747            TC     SHOW
 0748            TCF    RADCK
 0749   NBPOSPL  EXTEND                 SETS UP AZIMUTH AND VERTICAL VECTORS FOR
 0750            QXCH   QPLACE          AXISGEN,RESULTS TO BE USED IN CALCGA TO
 0751            TC     INTPRET
 0752            AXC,1  XSU,1           AZIMUTH IN NB COORDS
 0753                   SCNBAZ
 0754                   NBPOS
 0755            VLOAD*
 0756                   0,1
 0757  2         STORE  STARAD
 0758            AXC,1  XSU,1           VERITCAL IN NB COORDS
 0759                   SCNBVER
 0760                   NBPOS
 0761            VLOAD*
 0762                   0,1
 0763            STODL  STARAD +6
 0764                   ZERODP
 0765            STODL  6D
 0766                   AZIMUTH
 0767            COS    DCOMP
 0768            STODL  8D
 0769                   AZIMUTH
 0770            SIN
 0771            STORE  10D             VERTICAL IN CER
 0772            VLOAD
 0773                   SCNBVER
 0774            STCALL 12D
 0775                   AXISGEN
 0776  2         EXIT
 0777   SELPOSN  CA     DEC17
 0778            TS     ZERONDX
 0779            CA     XSMADR
 0780  2         TC     ZEROING
 0781            INDEX  POSITON
 0782            TC     +1
 0783            TC     OPCHKPOS        OPCHK WILL PUT ZERO IN POSITON
 0784            TC     POSN1
 0785            TC     POSN2
 0786            TC     POSN3
 0787            TC     POSN4
 0788            TC     POSN5
 0789            TC     POSN6
 0790            TC     POSN7
 0791            TC     POSN8
 0792            TC     POSN9
 0793  2         TC     POSN10
 07931 2         TC     POSN11           COMPASS POSITION
R0794   WE WILL DENOTE THE FLASHING DISPLAY OF A HORIZONTAL TEST BY DH
R0795   (XXX.XX MERU) AND A VERTICAL TEST BY DV (XXX.XX MERU) EACH POSITION TELL
R0796   HOW THE DISPLAYS ARE RELATED TO TTHE DRIFT COEFFICIENTS BEING MEASURED.
R0797   NOTE THAT IT IS ILLEGAL TO RUN VERTICAL IN POS 6,4, OR 2 WITHOUT FIRST
R0798   RUNNING HORIZONTAL OF POS 5,3, OR1. THIS IS BECAUSE THE HORIZ DRIFT CALC
R0799   IN 1,3, OR 5 IS USED AS EAST DRIFFFT FOR VERTICAL TEST. THIS IS DONE BY
R0800   THE MACHINE AUTOMATICALLY EXCEPT FOR VERTICAL POSITION 6 WHICH THE
R0801   OPERATOR MUST DO. (SEE POSITION 6 BELOW)
 0802   POSN1    CA     HALF            X UP, Y SOUTH, Z EAST
 0803            TS     XSM
 0804            TS     YSM +2            NBDY = DH
 0805            TS     ZSM +4
 0806   NGUBGH   CA     ZERO
 0807            TS     PIPINDEX
 0808  4         TC     QPLACE
 0817   POSN2    CS     HALF            X DOWN, Y WEST, Z NORTH
 0818            TS     XSM
 0819            TS     YSM +4           NBDZ =DH ,NBDX -ADIAX= -DV
 0820            TS     ZSM +2
 0821  4         TC     NGUBGH
 0832   POSN3    CA     HALF             Z UP, Y WEST ,X NORTH
 0833            TS     ZSM
 0834            COM                      NBDX = -DH
 0835            TS     XSM +2
 0836            TS     YSM +4
 0837   NSFLAGD  CA     TWO
 0838            TS     PIPINDEX
 0839   NSBUGD   CA     ZERO
 0840            TS     DRIFTT
 0841  4         TC     QPLACE
 0842   POSN4    CS     HALF            Y SOUTH, X EAST, Z DOWN
 0843            TS     ZSM              NBDY +ADSRAY=DH
 0844            COM                     NBDZ +ADIAZ =DV
 0845            TS     YSM +2
 0846            TS     XSM +4
 0847            CA     TWO
 0848            TS     PIPINDEX
 0852  4         TC     QPLACE
 0855   POSN5    CA     HALF            Y UP, Z NORTH, X WEST
 0856            TS     YSM
 0857            COM                     NBDZ-ADSRAZ =DH
 0858            TS     XSM +4
 0859            TS     ZSM +2
 0860            CA     ONE
 0861            TS     PIPINDEX
 0862  4         TC     NSBUGD
R0866   TO RUN POSITION 6 VERTICAL AFTER PIP TEST POS 6 IS DISPLAYED THE OPERATR
R0867   MUST CALCULATE FROM 2,5 -NBDZ-ADSRAZ  (XXX.XX)MERU.    WHEN PI
R0868   IP DATA FLASHES DO VERB 33 ENTER. THIS STARTS VERTICAL TEST. THEN THE
R0869   DATA XXX.XX MERU AS CALCULATED MUST BE ENTERED INTO DRIFTT. IE VERB 21
R0870   ENTER NOUN 01 ENTER LOCATION OF DRIFTT ENTER + (OR -) XXXXX ENTER
 0871   POSN6    CA     HALF            Y DOWN, Z EAST, X SOUTH
 0872            TS     XSM +2
 0873            TS     ZSM +4
 0874            COM                     NBDX +ADSRAX = DH, NBDY -ADIAY = -DV
 0875            TS     YSM
 0876            CA     ONE
 0877            TS     PIPINDEX
 0878  4         TC     QPLACE
 0883   POSN7    CS     HALF            Z UP-EAST,Y UP-WEST,X NORTH.THIS POSITON
 0884            TS     XSM +2
 0885            CA     ROOT1/2
 0886            TS     YSM              NBDX - .707 ADSRAX = -DH
 0887            TS     ZSM
 0888            TS     ZSM +4
 0889            COM
 0890            TS     YSM +4
 0891   GEORGES  CA     ZERO
 0892            TS     FAILREG
 0893  4         TC     NSBUGD
 0907   POSN8    CA     HALF            Z UP-SOUTH,Y UP-NORTH,X EAST.THIS POSITN
 0908            TS     XSM +4
 0909            CA     ROOT1/2          .707(-NBDZ-NBDY) +.5(ADIAZ-ADIAY)
 0910            TS     YSM             +.5(ADSRAY +ADSRAZ)=DH
 0911            TS     ZSM +2
 0912            TS     ZSM
 0913            COM
 0914            TS     YSM +2
 0915  4         TC     NSBUGD
 0922   OPCHKPOS CA     ROOT1SQ          OG=+45DEG,IG=-45DEG,MG=+45DEG.
 0923            TS     XSM
 0924            TS     YSM +2
 0925            TS     YSM +4
 0926            TS     ZSM
 0927            CA     ROOT1/2
 0928            TS     YSM
 0929            CA     ROOT3SQ
 0930            TS     XSM +2
 0931            TS     ZSM +4
 0932            CS     ROOT2SQ
 0933            TS     XSM +4
 0934            TS     ZSM +2
 0935  2         TC     QPLACE
 0936   POSN9    CA     HALF            X UP EAST,Y UP WEST,Z SOUTH.THIS POSITON
 0937            TS     ZSM +2
 0938            CA     ROOT1/2          -NBDZ +.707 SRAZ =DH
 0939            TS     XSM
 0940            TS     XSM +4
 0941            TS     YSM
 0942            COM
 0943            TS     YSM +4
 0944  4         TC     NSBUGD
 0955   POSN10   CA     HALF            X UP NORTH,Y UP SOUTH,Z EAST.THIS POSITN
 0956            TS     ZSM +4
 0957            CA     ROOT1/2           .707(NBDY -NBDX) +.5(ADIAY -ADIAX)
 0958            TS     XSM              +.5(ADSRAX) = DH
 0959            TS     YSM
 0960            TS     YSM +2
 0961            COM
 0962            TS     XSM +2
 0963  4         TC     NSBUGD
 0964   POSN11   TC     BANKCALL         COMPASS POSITION
 0965            CADR   LOADXSM
 0966  4         TC     QPLACE
 0970   SHOWLD   CA     DSPTEM2
 0971            TS     LENGTHOT
 0972            CA     DSPTEM2 +1
 0973            TS     NBPOS
 0974            CA     DSPTEM2 +2
 0975            TS     POSITON
 0976  2         TC     Q
 0977   SHOW     EXTEND
 0978            QXCH   QPLACE
 0979   SHOW1    CA     POSITON
 0980            TS     DSPTEM2 +2
 0981            CA     VB06N66
 0982            TC     NVSBWAIT
 0983            TC     FLASHON
 0984            TC     ENDIDLE
 0985            TC     FINISH
 0986            TC     QPLACE
 0987            TC     SHOWLD
 0988  4         TCF    SHOW1
 098801 LOADGTSM EXTEND                 THIS LOADS XSM INTO GEOMATRX
 098802          QXCH   QPLACE
 098803          TC     INTPRET
 098804          VLOAD
 098805                 XSM
 098806          STOVL  GEOMTRX
 098807                 YSM
 098808          STOVL  GEOMTRX +6
 098809                 ZSM
 098810          STORE  GEOMTRX +12D
 098811          EXIT
 0988128         TC     QPLACE
 098860 1SECX    DEC    100
 098861 GEORGED  2DEC   .47408845
 098862          2DEC   .23125894
 098863          2DEC   .14561689
 098864 GEORGEC  2DEC   -.06360691
 098865          2DEC   -.16806746
 098866          2DEC   .15582939
 098867 GEORGEB  2DEC   -.06806784
 098868          2DEC   -.75079894
 098869          2DEC   -.24878704
 0989   14C      EQUALS 0014
 0990   V21N30E  OCT    02130
 0991   DESANGLE DEC    2048
 0992   SFCONST  DEC    .13107
 0993   SIZCHK   OCT    34000
 0994   180DEC   DEC    180
 0995   3990DEC  DEC    3990
 0996   VB06N66  OCT    00666
 0997   TESTTIME DEC    600
 0998   V16N20S  OCT    01620
 0999   V16N40S  OCT    01640
 1000   DEC17    DEC    17
 1001   DEC585   2DEC   3200 B+14
 1002   DELYOFF  OCT    00400
 1003   ERUNITS  2DEC   342844 B-28
 1004   GENPLAD  GENADR AZIMUTH
 1005   GYRODPL  ECADR  GYROD
 1006   OGCPL    ECADR  OGC
 1007   LOWFOUR  OCT    77760
 1008   DEC56    DEC    56
 1009   45DEG    OCT    10000
 1010   ROOT1/2  DEC    .353553
 1011   ROOT1SQ  DEC    .250000
 1012   ROOT2SQ  DEC    .426776
 1013   ROOT3SQ  DEC    .073223
 1014  4XSMADR   GENADR XSM
 1018   SCNBAZ   2DEC   0
 1019            2DEC   0
 1020   LABNBAZ  2DEC   .5
 1021            2DEC   0
 1022            2DEC   0
 1023   SCNBVER  2DEC   .5
 1024            2DEC   0
 1025   LABNBVER 2DEC   0
 1026            2DEC   0
 1027            2DEC   -.5
 1028   ENDIMUS2 =
L       IMU PERFORMANCE TESTS 3
 0001            SETLOC ENDPINS3
 0002  4         EBANK= XSM
 0500   SILVER   EXTEND
 0501  2         QXCH   QPLACE           SHOULD BE ADDRESS OF STRTWACH
 0502            CCS    CALCDIR         2F COMMAND IS POSITIVE THE MINUS TORQ
 0503            CAF    BIT9             WINDING IS TO BE ENERGIZED
 0504            TC     +2
 0505            TC     TORK             COMMAND IS NEG SO USE PLUS WINDING
 0506            EXTEND
 0507  2         WOR    14C              SELECTS THE MINUS WINDING
 0508   TORK     CAF    POSMAX
 0509  2         TS     GYROCTR         16383 PULSES =2.8125 DEG LESS ONE PULSE
 0510            CCS    GYTOBETQ        C(K)= 1 FOR X, -0 FOR Y, -1FOR Z.
 0511            TC     SELECTX
 0512            TC     CCSHOLE
 0513            TC     SELECTZ
 0514            TC     SELECTY
 0515   SELECTX  CAF    TORKX           BBITS 7AND 10 IN CHANNEL 14 WILL
 0516            EXTEND                  SELECT X GYRO AND TURN ON BCSW 1/3200
 0517            WOR    14C             SSEC LATER BY CHANNEL OUTPUT DESIGN.....
 0518  2         TC     QPLACE
 0519   SELECTY  CAF    TORKY           BBITS 8 AND 10 TO TORQ Y GYRO
 0520            EXTEND
 0521            WOR    14C
 0522  2         TC     QPLACE
 0523   SELECTZ  CAF    TORKZ           BBITS 7,8AND 10 TO TORQ Z GYRO
 0524            EXTEND
 0525            WOR    14C
 0526            TC     QPLACE
 0527   TORKX    OCT    01100
 0528   TORKY    OCT    01200
 0529  8TORKZ    OCT    01300
 0530   SAMODCHK CAF    ZERO
 0531            TS     TESTNO
 0532  2         TS     RUN
 0533            TC     ZEROMODE
 0534  2         TC     OPRTRDLY
 0535  2         TC     COARZERO
 0536            TC     ZEROMAIN
 0537  2         TC     OPRTRDLY
 0538  2         TC     ZEROMODE
 0539            CAF    ZERO
 0540  2         TC     THETADLD
 0541            CAF    45ANG
 0542  2         TC     THETADLD
 0543  2         TC     FNZEROFN
 0544            CAF    90ANG
 0545  2         TC     THETADLD
 0546            CAF    135ANG
 0547  2         TC     THETADLD
 0548            CAF    45ANG
 0549  2         TC     THETADLD +2
 0550  2         TC     FNZEROFN
 0551            CAF    180ANG
 0552            TS     THETAD
 0553            TS     THETAD +1
 0554            CAF    71ANG
 0555  2         TC     THETADLD +2
 0556            CAF    225ANG
 0557  2         TC     THETADLD
 0558            CAF    ZERO
 0559  2         TC     THETADLD
 0560            CAF    TWO
 0561  2CHK2     TS     CDUNDX
 0562            CAF    170ANG
 0563            INDEX  CDUNDX
 0564  2         TS     THETAD
 0565            TC     BANKCALL
 0566  2         CADR   IMUCOARS
 0567            CAF    10ANG
 0568  2         TC     CDURATE
 0569            CAF    160ANG
 0570  2         TC     CDURATE
 0571  2         TC     CALCRATE
 0572            TC     BANKCALL
 0573            CADR   IMUSTALL
 0574  2         TCF    ENDTST03
 0575  2         TC     COARZERO
 0576            CCS    CDUNDX
 0577  2         TCF    CHK2
 0578            CS     45ANG
 0579  2         TC     THETADLD
 0580  2         TC     FNZEROFN
 0581            CS     135ANG
 0582            TS     THETAD
 0583            TS     THETAD +1
 0584            CS     71ANG
 0585  2         TC     THETADLD +2
 0586  2         TC     FNZEROFN
 0587  2         TC     COARZERO
 0588            TC     FINEZERO
 0589  2         TC     FINEZERO
 0590   CHK5     CS     4+6BITS
 0591            EXTEND
 0592  2         WAND   12
 0593            CAF    FOUR
 0594            TC     WAITLIST
 0595            2CADR  ECE1
 0596            CAF    ECE2CADR
 0597  2         TC     JOBSLEEP
 0598   ECE1     CAF    ECE2CADR
 0599            TC     JOBWAKE
 0600  2         TC     TASKOVER
 0601   ECE2     CS     SIX
 0602            AD     TESTNO
 0603            EXTEND
 0604            BZMF   +2
 0605  2         TCF    CHKX
 0606            INDEX  TESTNO
 0607            CAF    ERCTRANG
 0608            TS     THETAD
 0609            TS     THETAD +1
 0610  2         TS     THETAD +2
 0611            CAF    BIT6
 0612            EXTEND
 0613  2         WOR    12
 0614            INHINT
 0615            CAF    TWO
 0616            TC     WAITLIST
 0617            2CADR  ATTCK2
 0618  2         RELINT
 0619  2         TC     OPRTRDLY
 0620  2         INCR   TESTNO
 0621  2         TCF    CHK5
 0622  2CHKX     TC     COARZERO
 0623            CAF    ZERO
 0624  2         TS     TESTNO
 0625            TC     BANKCALL
 0626            CADR   RRZERO
 0627            TC     BANKCALL
 0628            CADR   RADSTALL
 0629  2         TCF    ENDTST03
 0630   CHK6     INDEX  TESTNO
 0631            CAF    RADECNTR
 0632            TS     TANG +1
 0633  2         TS     TANG
 0634            TC     INTPRET
 0635            CALL
 0636  2                RRDESNB
 0637            TC     BANKCALL
 0638            CADR   RADSTALL
 0639  2         TCF    ENDTST03
 0640  2         TC     RROPRDLY
 0641  2         INCR   TESTNO
 0642            CS     FOUR
 0643            AD     TESTNO
 0644            EXTEND
 0645  2         BZMF   CHK6
 0646            CAF    ZERO
 0647            TS     TESTNO
 0648            TS     ALTRATE
 0649            TS     ALT
 0650  2         TS     ALT +1
 0651            CS     ONE
 0652  2         TS     DIDFLG
 0653   CHK7     INDEX  TESTNO
 0654            CAF    RRRATFPS
 0655            TS     FORVEL
 0656  2         TS     LATVEL
 0657  2         TC     RROPRDLY
 0658  2         INCR   TESTNO
 0659            CS     BIT5
 0660            AD     TWO
 0661            AD     TESTNO
 0662            EXTEND
 0663  2         BZMF   CHK7
 0664   ENDTST03 TC     BANKCALL
 0665  6         CADR   ENDTEST
 0666   ERCTRANG OCT    03013
 0667            OCT    02660
 0668            OCT    01042
 0669            OCT    00000
 0670            OCT    76736
 0671            OCT    75120
 0672  6         OCT    74765
 0673   RADECNTR OCT    01463
 0674            OCT    01042
 0675            OCT    00000
 0676            OCT    76736
 0677  6         OCT    76315
 0678   RRRATFPS OCT    00000
 0679            OCT    00001
 0680            OCT    00002
 0681            OCT    00004
 0682            OCT    00010
 0683            OCT    00020
 0684            OCT    00040
 0685            OCT    00100
 0686            OCT    00200
 0687            OCT    00237
 0688            OCT    00400
 0689            OCT    00545
 0690            OCT    00544
 0691            OCT    77540
 0692  8         OCT    77232
 0693   CDURATE  EXTEND
 0694  2         QXCH   QPLACE
 0695  2         TS     CDULIMIT
 0696            CCS    NEWJOB
 0697  2         TC     CHANG1
 0698            CS     CDULIMIT
 0699            INDEX  CDUNDX
 0700            AD     CDUX            CATCH FIRST PULSE
 0701            EXTEND
 0702  2         BZMF   CDURATE +3      LOOK AGAIN
 0703            INDEX  CDUNDX
 0704            CAE    CDUX
 0705            XCH    CDUREADF        CDU FINAL READING
 0706  2         XCH    CDUREADI        CDU INITIAL READING
 0707            TC     FINETIME
 0708            DXCH   CDUTIMEF        DP FINAL TIME
 0709  2         DXCH   CDUTIMEI        DP INITIAL READING
 0710            RELINT
 0711  6         TC     QPLACE
 0712   CALCRATE EXTEND
 0713  2         QXCH   QPLACE
 0714            DXCH   CDUREADF
 0715            EXTEND
 0716            MSU    L
 0717  2         TS     CDUANG
 0718            TC     INTPRET
 0719            DLOAD  DSU
 0720                   CDUTIMEF
 0721                   CDUTIMEI
 0722            PUSH   SLOAD
 0723                   CDUANG
 0724            SR     DDV
 0725                   14D
 0726            DMP    RTB
 0727                   DEG/SEC
 0728                   SGNAGREE
 0729            STORE  DSPTEM2
 0730  2         EXIT
 0731   RATEDSP  CAF    V06N66X
 0732            TC     NVSBWAIT
 0733            TC     FLASHON
 0734            TC     ENDIDLE
 0735            TCF    ENDTST03
 0736            TCF    +2
 0737  2         TCF    RATEDSP
 0738            INCR   RUN
 0739  8         TC     QPLACE
 0740   THETADLD TS     THETAD
 0741            TS     THETAD +1
 0742  2         TS     THETAD +2
 0743            EXTEND
 0744  2         QXCH   QPLACE
 0745            CAF    SEVEN
 0746  2THLD1    TS     STOREPL
 0747            TC     BANKCALL
 0748            CADR   IMUCOARS
 0749            TC     BANKCALL
 0750            CADR   IMUSTALL
 0751  2         TCF    ENDTST03
 0752            CCS    STOREPL
 0753  2         TC     THLD1
 0754  2         TC     OPRTRDLY
 0755  6         TC     QPLACE
 0756   FINEALGN EXTEND
 0757  2         QXCH   QPLACE
 0758            TC     BANKCALL
 0759            CADR   IMUFINE
 0760            TC     BANKCALL
 0761            CADR   IMUSTALL
 0762  2         TCF    ENDTST03
 0763  8         TC     QPLACE
 0764   CH30DSPY EXTEND
 0765  2         QXCH   QPLACE
 0766            CAF    OCT30
 0767            TS     MPAC +2
 0768            CAF    V01N10X
 0769            TC     NVSBWAIT
 0770            TC     FLASHON
 0771            TC     ENDIDLE
 0772            TCF    ENDTST03
 0773            TCF    +2
 0774  2         TCF    CH30DSPY +2
 0775            TC     FLASHOFF
 0776            INCR   RUN
 0777  6         TC     QPLACE
 0778   ZEROMODE EXTEND
 0779  2         QXCH   QPLACE
 0780            TC     BANKCALL
 0781            CADR   IMUZERO
 0782            TC     BANKCALL
 0783            CADR   IMUSTALL
 0784  2         TCF    ENDTST03
 0785  6         TC     QPLACE
 0786   ZEROMAIN CS     4+6BITS
 0787            EXTEND
 0788  2         WAND   12
 0789            CAF    BIT5
 0790            EXTEND
 0791  2         WOR    12
 0792  6         TC     Q
 0793   RROPRDLY EXTEND
 0794  2         QXCH   QPLAC
 0795  2         INCR   RUN
 0796            CAF    V06N40X
 0797  6         TCF    OPRTRDLY +4
 0798   OPRTRDLY EXTEND
 0799  2         QXCH   QPLAC
 0800            INCR   RUN
 0801            CAF    V06N20X
 0802            TC     NVSBWAIT
 0803            CAF    V33N00X
 0804            TC     NVSBWAIT
 0805            CA     RUN
 0806            MASK   6LOW
 0807            TC     NVSBWAIT
 0808            TC     FLASHON
 0809            TC     ENDIDLE
 0810            TCF    ENDTST03
 0811            TCF    +2
 0812  2         TCF    OPRTRDLY +3
 0813            TC     FLASHOFF
 0814  2         TC     QPLAC
 0815   FINEZERO EXTEND
 0816  2         QXCH   QPLAC
 0817            TC     BANKCALL
 0818  2         CADR   IMUZERO
 0819            CAF    TWO
 0820            TS     EROPTN
 0821            CAF    FOUR
 0822  2         TS     POSITON
 0823            INHINT
 0824            CS     BIT10
 0825            MASK   STATE
 0826            AD     BIT10
 0827            TS     STATE
 0828  2         RELINT
 0829            TC     BANKCALL
 0830  2         CADR   LEMLAB
 0831  2SAMODRTN TC     GRABWAIT
 0832            CAF    V06N20X
 0833  2         TC     NVSBWAIT
 0834  2         TC     ZEROMAIN
 0835            TC     CH30DSPY
 0836  2         TC     ZEROMODE
 0837  4         TC     QPLAC
 0838   COARZERO CAF    ZERO
 0839            TS     THETAD
 0840            TS     THETAD +1
 0841  2         TS     THETAD +2
 0842            EXTEND
 0843  2         QXCH   QPLACE
 0844            TC     BANKCALL
 0845            CADR   IMUCOARS
 0846            TC     BANKCALL
 0847            CADR   IMUSTALL
 0848  2         TCF    ENDTST03
 0849  8         TC     QPLACE
 0850   FNZEROFN EXTEND
 0851  2         QXCH   QPLAC
 0852  2         TC     FINEALGN
 0853            CAE    CDUX
 0854            TS     CDUREADF
 0855            CAE    CDUY
 0856            TS     CDUREADI
 0857            CAE    CDUZ
 0858  2         TS     CDULIMIT
 0859  2         TC     ZEROMODE
 0860            CAF    3SEC
 0861            TC     WAITLIST
 0862            2CADR  FZF1
 0863            CAF    FZF2CADR
 0864  2         TC     JOBSLEEP
 0865   FZF1     CAF    FZF2CADR
 0866            TC     JOBWAKE
 0867  2         TC     TASKOVER
 0868   FZF2     CAE    CDUREADF
 0869            EXTEND
 0870            MSU    CDUX
 0871  2         TS     DSPTEM1
 0872            CAE    CDUREADI
 0873            EXTEND
 0874            MSU    CDUY
 0875  2         TS     DSPTEM1 +1
 0876            CAE    CDULIMIT
 0877            EXTEND
 0878            MSU    CDUZ
 0879  2         TS     DSPTEM1 +2
 0880   FZFDSP   CAF    V05N30X
 0881            TC     NVSBWAIT
 0882            TC     FLASHON
 0883            TC     ENDIDLE
 0884            TCF    ENDTST03
 0885            TCF    +2
 0886  2         TCF    FZFDSP
 0887            INCR   RUN
 0888  8         TC     QPLAC
 0889   1ANG     OCT    00133
 0890   33.75ANG OCT    06000
 0891   45ANG    OCT    10000
 0892   71ANG    OCT    14477
 0893   90ANG    OCT    20000
 0894   135ANG   OCT    30000
 0895   10ANG    OCT    01616
 0896   160ANG   OCT    34344
 0897   180ANG   OCT    40000
 0898   225ANG   OCT    50000
 0899  2170ANG   OCT    36162
 0900   6LOW     OCT    77
 0901   OCT30    OCT    30
 0902   3SEC     DEC    300
 0903  24+6BITS  OCT    00050
 0904   V01N10X  OCT    00110
 0905   V05N30X  OCT    00530
 0906   V06N20X  OCT    00620
 0907   V06N40X  OCT    00640
 0908   V06N66X  OCT    00666
 0909  2V33N00X  OCT    03300
 0910   ECE2CADR CADR   ECE2
 0911   FZF2CADR CADR   FZF2
 0912  2OGCECADR ECADR  OGC
 0913  6DEG/SEC  2DEC   576000 B-28
 0914   ENDIMUS3 EQUALS
L       OPTIMUM PRELAUNCH ALIGNMENT CALIBRATION
R000001 THIS PROGRAM USES A VERTICAL,SOUTH,EAST COORDINATE SYSTEM FOR PIPAS
 0001            BANK   21
 0003  4         EBANK= XSM
R0004   G SCHMIDT SIMPLIFIED ESTIMATION PROGRAM FOR ALIGNMENT CALIBRATION. THE
R0005   PROGRAM IS COMPLETELY RESTART PROFED. DATA STORED IN BANK4.
 0010   ESTIMS   TC     PHASCHNG
 0011            OCT    00101
 0012   RSTGTS1  INHINT                  COMES HERE PHASE1 RESTART
 0015            CA     TIME1
 0016            TS     GTSWTLST
 0017            CAF    ZERO            ZERO THE PIPAS
 0018            TS     PIPAX
 0019            TS     PIPAY
 0020            TS     PIPAZ
 00201           TS     DELVX +1
 00202           TS     DELVY +1
 00203           TS     DELVZ +1
 0021            RELINT
 0022            TC     SETUPER
 0023            CA     77DECML
 0024            TS     ZERONDX
 0025            CA     ALXXXZ
 0026            TC     BANKCALL
 0027            CADR   ZEROING
 0028            TC     INTPRET
 0029            VLOAD
 0030                   INTVAL +2
 0031            STORE  ALX1S
 0032  2         EXIT
 0033            CCS    GEOCOMPS        GEOCOMPS IN NON ZERO IF COMPASS
 0034            TC     +2
 0035            TC     SLEEPIE +1
 0036            CA     LENGTHOT          TIMES FIVE IS THE NUM OF SEC ERECTING
 0037  2         TS     ERECTIME
 0038            TC     NEWMODEX
 0039            OCT    05
 003910          TC     BANKCALL
 003911          CADR   GCOMPZER          ZERO COMPENSATION PROGRAM REGISTERS
 0040  8         TC     ANNNNNN
 0086   ALLOOP   INHINT                  TASK EVERY .5 OR 1 SEC (COMPASS-DRIFT)
 0087            CA     TIME1
 0088            TS     GTSWTLST        STORE TIME TO SET UP NEXT WAITLIST
 0089   ALLOOP3  CA     ALTIM
 0090            TS     GEOSAVED
 0091            TC     PHASCHNG
 0092            OCT    00201
 0093  2         TC     +2
 0094   ALLOOP1  INHINT                 RESTARTS COME IN HERE
 0095            CA     GEOSAVED
 0096            TS     ALTIM
 0097            CCS    A
 0098            CA     A               SHOULD NEVER HIT THIS LOCATION
 0099            TS     ALTIMS
 0100            CS     A
 0101            TS     ALTIM
 01011           CA     PIPAX
 01012           TS     DELVX
 01013           CA     PIPAY
 01014           TS     DELVY
 01015           CA     PIPAZ
 01016           TS     DELVZ
 010161          CAF    ZERO
 010162          TS     PIPAX
 010163          TS     PIPAY
 010164          TS     PIPAZ
 01017           TC     PHASCHNG
 01018           OCT    00701
 010181          RELINT
 0113   SPECSTS  CAF    PRIO20
 0116            TC     FINDVAC
 0117            2CADR  ALFLT            START THE JOB
 0118  8         TC     TASKOVER
 0119   ALFLT    TC     STOREDTA         STORE DATA IN CASE OF RESTART IN JOB
 0120            TC     PHASCHNG        THIS IS THE JOB DONE EVERY ITERATION
 0121            OCT    00601
 01211           CCS    GEOCOMPS
 01212           TC     +2
 01213           TC     NORMLOP
 01214           TC     BANKCALL         COMPENSATION IF IN COMPASS
 01215           CADR   1/PIPA
 0122  4         TC     NORMLOP
 0123  2ALFLT1   TC     LOADSTDT         COMES HERE ON RESTART
 0124   NORMLOP  TC     INTPRET
 0125            DLOAD
 0126                   INTVAL
 0127            STORE  S1               STEP REGISTERS MAY HAVE BEEN WIPED OUT
 0128            SLOAD  BZE
 0129                   GEOCOMPS
 0130                   ALCGKK
 01301           GOTO
 01302                   ALFLT2
 0131   ALCGKK   SLOAD  BMN
 0132                   ALTIMS
 0133                   ALFLT2
 0134   ALKCG    AXT,2  LXA,1            LOADS SLOPES AND TIME CONSTANTS AT RQST
 0135                   12D
 0136                   ALX1S
 0137   ALKCG2   DLOAD* INCR,1
 0138                   ALFDK +144D,1
 0139            DEC    -2
 0140            STORE  ALDK +10D,2
 0141            TIX,2  SXA,1
 0142                   ALKCG2
 0143  2                ALX1S
 0144   ALFLT2   VLOAD  VXM
 0145                   DELVX
 0146                   GEOMTRX
 0147            VSL1
 0149            DLOAD  DCOMP
 0150                   MPAC +3
 0151            STODL  DPIPAY
 0152                   MPAC +5
 0153  2         STORE  DPIPAZ
 0154            SETPD  AXT,1           MEASUREMENT INCORPORATION ROUTINES.
 0155                   0
 0156                   8D
 0157            SLOAD  BZE
 0158                   GEOCOMPS
 01581                  DELMLP
 01582           GOTO
 0159                   ALWAYSG         DO A QUICK COMPASS
 0160   DELMLP   DLOAD* DMP
 0161                   DPIPAY +8D,1
 0162                   PIPASC
 0163            SLR    DAD*
 0164                   9D
 0165                   DELM +8D,1
 0166            DSU*   PDDL*
 0167                   INTY +8D,1
 0168                   VLAUN +8D,1
 0169            DSU*   DMP
 0170                   VLAUNS +8D,1
 0171                   VELSC
 0172            SL2R
 0173            DAD    STADR
 0174            STORE  DELM +8D,1
 0175            STODL* DELM +10D,1
 0176                   VLAUN +8D,1
 0177            STODL  VLAUNS +8D,1
 0178                   INTVAL -2
 0179            STORE  INTY +8D,1
 0180            TIX,1  AXT,2
 0181                   DELMLP
 0182                   4
 0183   ALILP    DLOAD* DMPR*
 0184                   ALK +4,2
 0185                   ALDK +4,2
 0186            STORE  ALK +4,2
 0187            TIX,2  AXT,2
 0188                   ALILP
 0189                   8D
 0190   ALKLP    LXC,1  SXA,1
 0191                   CMPX1
 0192                   CMPX1
 0193            DLOAD* DMPR*
 0194                   ALK +1,1
 0195                   DELM +8D,2
 0196            DAD*
 0197                   INTY +8D,2
 0198            STODL* INTY +8D,2
 0199                   ALK +12D,2
 0200            DAD*
 0201                   ALDK +12D,2
 0202            STORE  ALK  +12D,2
 0203            DMPR*  DAD*
 0204                   DELM +8D,2
 0205                   INTY +16D,2
 0206            STODL* INTY +16D,2
 0207                   ALSK +1,1
 0208            DMP*   SL1R
 0209                   DELM +8D,2
 0210            DAD*
 0211                   VLAUN +8D,2
 0212            STORE  VLAUN +8D,2
 0213            TIX,2  AXT,1
 0214                   ALKLP
 0215  4                8D
 0216   LOOSE    DLOAD* PDDL*
 0217                   ACCWD +8D,1
 0218                   VLAUN +8D,1
 0219            PDDL*  VDEF
 0220                   POSNV +8D,1
 0221            MXV    VSL1
 0222                   TRANSM1
 0223            DLOAD
 0224                   MPAC
 0225            STODL  POSNV +8D,1
 0226                   MPAC +3
 0227            STODL  VLAUN +8D,1
 0228                   MPAC +5
 0229            STORE  ACCWD +8D,1
 0230            TIX,1
 0231  4                LOOSE
 0232            AXT,2  AXT,1            EVALUATE SINES AND COSINES
 0233                   6
 0234                   2
 0235   BOOP     DLOAD* DMPR
 0236                   ANGX +2,1
 0237                   GEORGEJ
 0238            SR2R
 0239            PUSH   SIN
 0240            SL1R   XAD,1
 0241                   X1
 0242            STODL  16D,2
 0243            COS
 0244            STORE  22D,2            COSINES
 0245            TIX,2  DLOAD
 0246  4                BOOP
 0247                   14D
 0248            SL2    DAD
 0249                   INTY
 0250            STODL  INTY
 0251                   12D
 0252            DMP    SL3R
 0253                   20D
 0254            DAD
 0255                   INTZ
 0256            STODL  INTZ
 0257                   16D
 0258            DMPR   DMPR
 0259                   18D
 0260                   14D
 0261            SL2
 0262            PDDL   DMPR
 0263                   10D
 0264                   12D
 0265            DAD
 0266            DMPR
 0267                   WANGI
 0268            PDDL   DMPR
 0269                   18D
 0270                   20D
 0271            DMP    SL2R
 0272                   WANGO
 0273            BDSU
 0274                   DRIFTO
 0275            DSU    STADR
 0276            STODL  WPLATO
 0277                   16D
 0278            DMPR   DMP
 0279                   20D
 0280                   WANGI
 0281            SL2R
 0282            PDDL   DMPR
 0283                   WANGO
 0284                   14D
 0285            DAD
 0286                   DRIFTI
 0287            DSU
 0288            PDDL   DMPR
 0289                   WANGT
 0290                   WANGI
 0291            DAD    STADR
 0292            STODL  WPLATI
 0293                   18D
 0294            DMP    SL1R
 0295                   10D
 0296            PDDL   DMPR
 0297                   12D
 0298                   16D
 0299            DMP    SL1R
 0300                   14D
 0301            BDSU
 0302            DMPR
 0303                   WANGI
 0304            PDDL   DMPR
 0305                   12D
 0306                   20D
 0307            DMP    SL1R
 0308                   WANGO
 0309            BDSU
 0310                   DRIFTT
 0311            DAD                     WPLATT NOW IN MPAC
 0312            PUSH                   PUSH IT DOWN-X IT BY SANG +2
 0313            DMPR   SR1R
 0314                   12D
 0315            PDDL   DMPR
 0316                   WPLATO
 0317                   18D
 0318            DAD
 0319            DDV
 0320                   20D
 0321            PUSH   DMPR
 0322                   GEORGEK
 0323            SRR    DAD
 0324                   13D
 0325                   ANGX
 0326            STODL  ANGX
 0327            DMPR   DAD
 0328                   14D
 0329                   WPLATI
 0330            DMPR   SRR
 0331                   GEORGEK
 0332                   13D
 0333            DAD
 0334                   ANGY
 0335            STODL  ANGY
 0336                   18D
 0337            DMP    SL1R            MULTIPLY X WPLATT -SL1- PUSH AND RELOAD
 0338            PDDL   DMPR
 0339                   12D
 0340                   WPLATO
 0341            BDSU
 0342            DMPR   SRR
 0343                   GEORGEK
 0344                   13D
 0345            DAD
 0346                   ANGZ
 0347            STORE  ANGZ
 0348            BOVB   EXIT
 0349                   SOMEERRR
 0350            CCS    LENGTHOT
 03501           TC     SLEEPIE
 03502 4         TC     SETUPER1
 0351   ALWAYSG  DLOAD* DSU*            COMPASS AND ERECT
 0352                   DPIPAY +8D,1
 0353                   FILDELV +8D,1
 0354            DMPR   DAD*
 0355                   GEOCONS1
 0356                   FILDELV +8D,1
 0357            STORE  FILDELV +8D,1
 0358            DAD*
 0359                   INTVEC +8D,1
 0360            STORE  INTVEC +8D,1
 0361            DMPR   DAD*
 0362                   GEOCONS2
 0363                   FILDELV +8D,1
 0364            DMPR   PUSH
 0365                   GEOCONS1
 0366            TIX,1  SLOAD
 0367                   ALWAYSG
 0368                   ERECTIME
 0369            BZE    DLOAD
 0370                   COMPGS          COMPASS
 0371                   THETAN +2
 0372            DSU    STADR
 0373            STODL  THETAN +2
 0374            BDSU
 0375                   THETAN +4
 0376            STORE  THETAN +4
 0377            GOTO
 0378                   ADDINDRF
 0379   COMPGS   DLOAD  DAD             COMPASS
 0380                   THETAN
 0381                   FILDELV
 0382            STODL  THETAN
 0383                   FILDELV
 0384            DMPR   BDSU
 0385                   GEOCONS3
 0386                   THETAN +4
 0387            STODL  THETAN +4
 0388                   FILDELV +4
 0389            DMPR   BDSU
 0390                   GEOCONS3
 0391                   THETAN +2
 0392            PDDL   DMP
 0393                   INTVEC +4
 0394                   GEOCONS4
 0395            BDSU   STADR
 0396            STORE  THETAN +2
 0397   ADDINDRF VLOAD  MXV
 0398                   THETAN
 0399                   GEOMTRX
 0400            VSL1   VAD
 0401                   THETAX
 0402            STORE  THETAX
 0403  4         EXIT
 0404   ENDGTSAL CCS    LENGTHOT         IS 5 SEC OVER-THE TIME TO TORQ PLATFORM
 0405            TC     SLEEPIE          NO-SET UP NEXT WAITLIST CALL FOR .5 SEC
 0406            CCS    LGYRO            YES BUT ARE GYROS BUSY
 0407  4         TCF    ANNNNNN +2       BUSY-GET THEM .5 SECONDS FROM NOW
 0410            TC     PHASCHNG
 0411            OCT    00401
 0415            TC     INTPRET          ADD COMPASS COMMANDS INTO ERATE
 0416            VLOAD  VAD
 0417                   THETAX
 0418                   ERCOMP
 0419            STORE  ERCOMP
 0420            EXIT
 0421            TC     BANKCALL
 0422  4         CADR   EARTHR           TORQUE IT ALL IN
 0423   RESTEST1 INHINT                  CHECK ON ORIENTATION CHANGE
 0424            CA     PREMTRXC
 0430            EXTEND
 0431            BZMF   NOCHORLD         +1 -CHANGE, 0 OR -1 NO LOAD OR LOADING
 0432            TC     LOADXSM          IF THERE WAS A CHANGE LOAD IT INTO XSM
 04321           TC     PHASCHNG
 04322           OCT    01001
 04323  RESTEST3 CA     ZERO             RESET CHANGE INDEX TO ZERO
 0434            TS     PREMTRXC
 0435  8         RELINT
 0436            TC     INTPRET          HERE TO CHANGE ORIENTATOON
 0437            AXT,1                   DESIRED IN XSM,PRESENT IN GEOMTRX
 0438                   18D
 0439            SSP
 0440                   S1
 0441                   6
 0442   LOADM    VLOAD* DOT
 0443                   XSM +18D,1
 0444                   GEOMTRX +12D
 0445            PDVL*  DOT
 0446                   XSM +18D,1
 0447                   GEOMTRX +6D
 0448            PDVL*  DOT
 0449                   XSM +18D,1
 0450                   GEOMTRX
 0451            VDEF   UNIT
 0452            STORE  XDC +18D,1
 0453            TIX,1  CALL
 0454                   LOADM
 0455                   CALCGTA
 0456            EXIT
 0457  4         TC     TORQINCH         NECESSARY TORQUE NOW IN OGC
 0458   SETUPER1 TC     INTPRET
 0459            DLOAD  PDDL             ANGLES FROM DRIFT TEST ONLY
 0460                   ANGZ
 0461                   ANGY
 0462            PDDL   VDEF
 0463                   ANGX
 0464            VCOMP  VXSC
 0465                   GEORGEJ
 0466            MXV    VSR1
 0467                   GEOMTRX
 0468            STORE  OGC
 0469  4         EXIT
 0470   TORQINCH TC     PHASCHNG
 0471            OCT    00501
 0472            CA     AINGYRO
 0473            TC     BANKCALL
 0474            CADR   IMUPULSE
 0475            TC     BANKCALL
 0476            CADR   IMUSTALL
 0477  4         TC     SOMERR2          BAD GYRO TORQUE-END OF TEST
 0478   GEOSTRT4 CCS    TORQNDX          ONLY POSITIVE IF IN VERTICAL DRIFT TEST
 0479            TC     GEOBAVR         VERT DRIFT TEST OVER
 0480            TC     SETUPER          SET UP ERATE FOR PIPTEST OR COMPASS
 0481            CCS    GEOCOMPS
 0482            TC     TQORESTM
 0483            TC     BANKCALL        GO TO IMU2 FOR A PIPA TEST AND DISPLAY
 0484  2         CADR   TORQUE
 0485   GEOBAVR  TC     BANKCALL
 0486  8         CADR   VALMIS           DISPLAY VERTICAL DRIFT
R04861  SET UP WAITLIST SECTION
 0487   SLEEPIE  TS     LENGTHOT        TEST NOT OVER-DECREMENT LENGTHOT
 0488            TC     PHASCHNG         CHANGE PHASE
 0489            OCT    00301
 0490            CCS    TORQNDX         ARE WE DOING VERTDRIFT
 0491            TC     EARTTPRQ        YES,DO HOR ERATE TORQ THEN SLEEP
 0492            TC     WTLISTNT        GO TO SET UP NEXT WAITLIST
 0493   EARTTPRQ TC     BANKCALL        IN VERTDRIFT,ADD HOR ERATE AND SLEEP
 0494            CADR   EARTHR
 0495   WTLISTNT INHINT
 0496            CS     TIME1
 0497            AD     GTSWTLST
 0498            EXTEND
 0499            BZMF   +2
 0500            AD     NEGMAX
 0501            AD     1SECXT          1 SEC FOR CALIBRATION,.5 SEC IN COMPASS
 0502            EXTEND
 0503            BZMF   RIGHTGTS
 0504   WTGTSMPL TC     WAITLIST
 0505            2CADR  ALLOOP
 0506            RELINT
 0507            TC     ENDOFJOB
 0508   RIGHTGTS CAF    TWO
 0509  4         TC     WTGTSMPL
 0510   SOMEERRR TC     ALARM
 0511            OCT    1600
 0512            TC     +3
 0513   SOMERR2  TC     ALARM
 0514            OCT    1601
 0515            TC     BANKCALL
 0516  8         CADR   ENDTEST
 0517   TQORESTM TC     BANKCALL
 0518  2         CADR   LOADGTSM         LOAD NEW XSM MATRIX INTO GEOMTRX
 0520   NOCHORLD RELINT                  AFTER CHANGEIN ORIEN OR NO CHANGE
 0521            TC     INTPRET
 0522            VLOAD
 0523                   SCHZEROS
 0524            STORE  THETAX
 0525            STORE  THETAN
 0526            EXIT
 0527            CCS    ERECTIME
 0528  2         TS     ERECTIME                COUNTS DOWN FOR ERECTION
 0529   ANNNNNN  CAF    NINE
 0530            TS     LENGTHOT
 0531            CCS    ERECTIME
 0532            TC     SLEEPIE +1
 05321           TC     CHECKMM          IN COMPASS CHECK FOR VERIFICATION
 05322           OCT    03
 05323           TC     +2               NOT VERIFYING
 05324           TC     SLEEPIE +1       YES
 0533            TC     NEWMODEX
 0534            OCT    02
 0535            TC     SLEEPIE +1       COMPASS IS 02  -ERECTION 05
 0536   SETUPER  EXTEND                  SUBROUTINE CALLED IN 3 PLACES
 0537            QXCH   QPLACES
 0538            TC     INTPRET
 0539            CALL
 0540                   ERTHRVSE
 0541            EXIT
 0542            TC     BANKCALL
 0543            CADR   OGCZERO
 0544  8         TC     QPLACES
 0546   OPTMSTRT INDEX  PHASE1
 0547            TC     +0
 0548            TC     GTSGTS1
 0549            TC     GTSGTS2
 0550            TC     GTSGTS3
 0551            TC     GTSGTS4
 0552            TC     GTSGTS5
 0553            TC     GTSGTS6
 055310          TC     GTSGTS7
 0553114         TC     GTSGTS10
 0554   GTSGTS1  CAF    PRIO20
 0555            TC     FINDVAC
 0556            2CADR  RSTGTS1
 0557            TC     SWRETURN
 0558   GTSGTS2  CAF    ONE
 0559            TC     WAITLIST
 0560            2CADR  ALLOOP1
 0561            TC     SWRETURN
 0562   GTSGTS3  CAF    PRIO20
 0563            TC     FINDVAC
 0564            2CADR  WTLISTNT
 0565            TC     SWRETURN
 0566   GTSGTS4  CAF    PRIO20
 0567            TC     FINDVAC
 0568            2CADR  RESTEST1
 0569            TC     SWRETURN
 0570   GTSGTS5  CAF    PRIO20
 0571            TC     FINDVAC
 0572            2CADR  GEOSTRT4
 0573            TC     SWRETURN
 0574   GTSGTS6  CAF    PRIO20
 0575            TC     FINDVAC
 0576            2CADR  ALFLT1
 0577  2         TC     SWRETURN
 05771  GTSGTS7  CAF    ONE
 05772           TC     WAITLIST
 05773           2CADR  SPECSTS
 05775  GTSGTS10 CAF    PRIO20
 05776           TC     FINDVAC
 05777           2CADR  RESTEST3
 05778 8         TC     SWRETURN
 0578   GEOBND   OCT    02000             BANK 4  -THIS IS THE STORE DTA SECTION
 0579  4GEOBND1  OCT    02400            BANK NUMBER 5
 0581   STOREDTA CAF    GEOBND
 0582            TS     L
 0583            CAF    77DECML
 0584            TS     MPAC
 0585            INDEX  MPAC
 0586            CA     ALX1S
 0587            LXCH   EBANK
 0588            EBANK= JETSTEP
 0589            INDEX  MPAC
 0590            TS     JETSTEP
 0591            LXCH   EBANK
 0592            EBANK= XSM
 0593            CCS    MPAC
 0594            TCF    +2
 0595            TC     Q
 0596            TS     MPAC
 0597            CAF    GEOBND
 0598            TS     L
 0599  4         TCF    STOREDTA +4
 0600   LOADSTDT CAF    77DECML
 0601            TS     MPAC
 0602            CA     GEOBND
 0603            XCH    EBANK
 0604            TS     L
 0605            EBANK= JETSTEP
 0606            INDEX  MPAC
 0607            CA     JETSTEP
 0608            LXCH   EBANK
 0609            EBANK= XSM
 0610            INDEX  MPAC
 0611            TS     ALX1S
 0612            CCS    MPAC
 0613            TCF    +2
 0614            TC     Q
 0615            TS     MPAC
 0616  8         TCF    LOADSTDT +2
 0617   LOADXSM  EXTEND
 0618            QXCH   QPLACES
 0619            CAF    17DECML
 0620            TS     MPAC
 0621            INDEX  A
 0622            CA     PRELMTRX
 0623            INDEX  MPAC
 0624            TS     XSM
 0625            CCS    MPAC
 0626            TCF    LOADXSM +3
 0627            TC     QPLACES
 0628   ALFDK    DEC    -28             SLOPES AND TIME CONSTANTS FOR FIRST 30SC
 0629            DEC    -1
 0630            2DEC   .91230833       TIME CONSTANTS-PIPA OUTPUTS
 0631            2DEC   .81193187       TIME CONSTANT-ERECTION ANGLES
 0632            2DEC   -.00035882      SLOPE-AZIMUTH ANGLE
 0633            2DEC   -.00000029      SLOPE-VERTICAL DRIFT
 0634  4         2DEC   .00013262       SLOPE-NORTH SOUTH DRIFT
 0635            DEC    -58             31-90 SEC
 0636            DEC    -1
 0637            2DEC   .99122133
 0638            2DEC   .98940595
 0639            2DEC   -.00079010
 0640            2DEC   -.00000265
 0641  4         2DEC   .00043154
 0642            DEC    -8              91-100 SEC
 0643            DEC    -1
 0644            2DEC   .99971021
 0645            2DEC   .99852047
 0646            2DEC   .00042697
 0647            2DEC   -.00000213
 0648  4         2DEC   .00011864
 0649            DEC    -98             101-200 SEC
 0650            DEC    -1
 0651            2DEC   .99550063
 0652            2DEC   .98992124
 0653            2DEC   .00043452
 0654            2DEC   -.00000401
 0655  4         2DEC   -.00021980
 0656            DEC    -248            201-450 SEC
 0657            DEC    -1
 0658            2DEC   .99673264
 0659            2DEC   .99365467
 0660            2DEC   .00003767
 0661            2DEC   -.00002317
 0662  4         2DEC   -.00003305
 0663            DEC    -338            451-790 SEC
 0664            DEC    -1
 0665            2DEC   .99924362
 0666            2DEC   .99888274
 0667            2DEC   .00000064
 0668            2DEC   -.00004012
 0669  4         2DEC   -.00000195
 0670            DEC    -408            791-1200 SEC
 0671            DEC    -1
 0672            2DEC   .99963845
 0673            2DEC   .99913162
 0674            2DEC   .00000090
 0675            2DEC   .00002927
 0676  4         2DEC   -.00000026
 0677            DEC    -498            1201-1700 SEC
 0678            DEC    -1
 0679            2DEC   .99934865
 0680            2DEC   .99868793
 0681            2DEC   .00000055
 0682            2DEC   .00001183
 0683  4         2DEC   -.00000005
 0684            DEC    -398            1701-2100 SEC
 0685            DEC    -1
 0686            2DEC   .99947099
 0687            2DEC   .99894799
 0688            2DEC   .00000018
 0689            2DEC   .00000300
 0690  4         2DEC   -.00000001
 0691            DEC    -598            2101-2700 SEC
 0692            DEC    -1
 0693            2DEC   .99957801
 0694            2DEC   .99916095
 0695            2DEC   .00000007
 0696            2DEC   .00000096
 0697  4         2DEC   .00000000
 0698            DEC    -698            2700-3400 SEC
 0699            DEC    -1
 0700            2DEC   .99966814
 0701            2DEC   .99933952
 0702            2DEC   .00000002
 0703            2DEC   .00000028
 0704  4         2DEC   .00000000
 0705            DEC    -598            3401-4000 SEC
 0706            DEC    -1
 0707            2DEC   .99972716
 0708            2DEC   .99945654
 0709            2DEC   .00000001
 0710            2DEC   .00000010
 0711  4         2DEC   .00000000
 0712   SCHZEROS 2DEC   .00000000
 0713            2DEC   .00000000
 0714            2DEC   .00000000
 0715   INTVAL   OCT    4
 0716            OCT    2
 0717            DEC    144
 0718            DEC    -1
 0719   SOUPLY   2DEC   .93505870        INITIAL GAINS FOR PIP OUTPUTS
 0720  4         2DEC   .26266423        INITIAL GAINS/4 FOR ERECTION ANGLES
 0721   77DECML  DEC    77
 0722   ALXXXZ   GENADR ALX1S -1
 0723   AINGYRO  ECADR  OGC
 0724   PIPASC   2DEC   .13055869
 0726   VELSC    2DEC   -.52223476       512/980.402
 0727   ALSK     2DEC   .17329931       SSWAY VEL GAIN X 980.402/4096
 0728  4         2DEC   -.00835370      SSWAY ACCEL GAIN X 980.402/4096
 0731   GEORGEJ  2DEC   .63661977
 0732   GEORGEK  2DEC   .59737013
 0733   GEOCONS1 2DEC   .1
 0734   GEOCONS2 2DEC   .005
 0735   GEOCONS3 2DEC   .025
 0736   GEOCONS4 2DEC   .00003
 07362  1/PIPAGT OCT    06200
 0737   17DECML  DEC    17
 0738   19DECML  DEC    19
 0739  41/2SECX  DEC    50
 0740   GTSCPSS  CA     ONE
 0741            TS     GEOCOMPS          THIS IS THE LEAD IN FOR COMPASS
 0743            TC     NEWMODEX
 074417          OCT    01
 074518          CA     1/PIPAGT
 074619          TS     1/PIPADT
 074720          CA     ZERO
 074821          TS     PREMTRXC
 074922          CAF    1/2SECX
 075023          TS     1SECXT
 0781            TC     BANKCALL
 0782  4         CADR   GEOIMUTT                   TO IMU PERF TESTS 2
 0783   ENDPREL1 EQUALS
L       DIGITAL AUTOPILOT ERASABLE
 0001  2         SETLOC 3000
R0002  2AXIS TRANSFORMATION MATRIX - PILOT TO GIMBAL AXES:
 0003   MR12     ERASE                  SCALED AT 2   THESE FOUR P-G MATRIX ELE-
 0004   MR22     ERASE                  SCALED AT 1   MENTS ARE IN THIS ORDER TO
 0005   MR13     ERASE                  SCALED AT 2   COMPUTE RATE HOLD DELCDUS
 0006   MR23     ERASE                  SCALED AT 1   WITH AN INDEXED LOOP
R0008  2AXIS TRANSFORMATION MATRIX - GIMBAL TO PILOT AXES:
 0009   M11      ERASE                  SCALED AT 1
 0010   M21      ERASE                  SCALED AT 1
 00105  M31      ERASE
 0011   M22      EQUALS MR22            SCALED AT 1
 0012   M32      EQUALS MR23            SCALED AT 1
R0013  2ANGLE MEASUREMENTS.
 0014   EDOT     ERASE   +1             ERROR IN ANGULAR RATE:
 0015  2EDOT(R)  EQUALS EDOT +1         SCALED DOWN TO PI/16 RADIANS/SECOND
 0016   E        ERASE   +1             ANGLE ERROR SCALED AT PI RADIANS
 0017   EDOT(2)  EQUALS E +1            ERROR RATE SQUARED SCALED AT PI(2)/16
 0018   EQ       EQUALS E               THIS PAIR OF NAMES IS USED TO REFER TO
 0019   EDOT(2)Q EQUALS EDOT(2)         THE ABOVE ERASABLES AS Q-AXIS DATA
 0020   ER       ERASE   +1             THIS PAIR OF NAMES REFERS TO LOCATIONS
 0021  2EDOT(2)R EQUALS ER +1           FOR THE R-AXIS DATA: INTERCHANGES WITH Q
 0022  2DB       ERASE                  ANGLE DEADBAND SCALED AT PI RADIANS
 0023   OMEGAP   ERASE   +4             BODY-AXIS ROT. RATES SCALED AT PI/4 AND
 0024   OMEGAQ   EQUALS OMEGAP +1       BODY-AXIS ACCELERATIONS SCALED AT PI/8
 0025   ALPHAQ   EQUALS OMEGAP +2       (IN DESCENT) OR PI/2 (IN ASCENT)
 0026   OMEGAR   EQUALS OMEGAP +3       THESE W,A PAIRS ARE NEEDED, ALPHAP HAS
 0027  2ALPHAR   EQUALS OMEGAP +4       NO USE IN THE DIGITAL AUTOPILOT
 0028   EDOTP    ERASE   +2             ERRORS IN ANGULAR RATE:
 0029   EDOTQ    EQUALS EDOTP +1        EDOT = 3MEGA - OMEGA(DESIRED)
 0030  2EDOTR    EQUALS EDOTP +2        SCALED AT PI/4 RADIANS/SECOND
 0031   QRATEDIF EQUALS EDOTQ           ALTERNATIVE NAMES:
 0032  2RRATEDIF EQUALS EDOTR           DELETE WHEN NO. OF REFERENCES = 0
 0033   OMEGAPD  ERASE   +2             DESIRED VEHICLE RATES DETERMINED BY THE
 0034   OMEGAQD  EQUALS OMEGAPD +1      "OUTER LOOP" USED TO CALCULATE EDOT
 0035  2OMEGARD  EQUALS OMEGAPD +2      SCALED AT PI/4 RADIANS/SECOND
 0036   OLDXFORP ERASE   +3             STORED CDU READINGS FOR P AND Q,R RATE
 0037   OLDYFORP EQUALS OLDXFORP +1     DERIVATIONS: SCALED AT PI RADIANS (2'S)
 0038   OLDYFORQ EQUALS OLDXFORP +2     (THERE MUST BE TWO REGISTERS FOR CDUY
 0039  2OLDZFORQ EQUALS OLDXFORP +3     SINCE P AND Q,R ARE NOT IN PHASE)
R0040  2RHC INPUTS SCALED AT PI/4 RAD/SEC.
 0041   PCOM     ERASE
 0042   RCOM     ERASE
 0043  2YCOM     ERASE
R0044  2RHC COUNTER REGISTERS.
 0045   P-RHCCTR EQUALS 43
 0046   Q-RHCCTR EQUALS 42
 0047  2R-RHCCTR EQUALS 44
R0048  2OTHER VARIABLES.
 0049   TPSIG    ERASE
 0050   PRATECOM ERASE
 0051   EDOTGEN  ERASE
 0052   RATEDIF  ERASE
 0053   1/2JTSP  ERASE
 0054   1/2JTSQ  ERASE
 0055   1/2JTSR  ERASE
 0056   1/2JETSU ERASE
 0057   1/2JETSV ERASE
 0058   FPQR     ERASE
 0059   MINRA    ERASE
 0060   MINRASQ  ERASE
 0061   HDAP     ERASE
 0062   U        ERASE
 0063   DENOM    ERASE
 0064   RATIO    ERASE
 0065   TJSR     ERASE
 0066   IXX      ERASE
 0067   IYY      ERASE
 0068   IZZ      ERASE
 0069   4JETTORK ERASE
 0070   JETTORK4 ERASE
 0071   COSMG    ERASE
 0072   DELTAP   EQUALS ITEMP2
 0073   FPQRMIN  ERASE
 0074   NJET     ERASE
 0075   1/NJETAC ERASE
 0076   PRATEDIF ERASE
 0077   LASTPER  ERASE                  THESE 6 REG USED FOR ATT ERR DISPLAY
 0078   LASTQER  ERASE
 0079   LASTRER  ERASE
 0080   PERROR   ERASE
 0081   QERROR   ERASE
 0082  2RERROR   ERASE
R0083   JET STATE CHANGE VARIABLES- TIME (TOFJTCHG),JET BITS WRITTEN NOW
R0084  2  (JTSONNOW), AND JET BITS WRITTEN AT T6 RUPT (JTSATCHG).
 0085   JTSONNOW ERASE
 0086   JTSATCHG ERASE
 0087   ADDT6JTS ERASE
 0088   ADDTLT6  ERASE
 0089  2TOFJTCHG ERASE
 0090   -RATEDB  ERASE
 0091  2-2JETLIM ERASE
R0092  2RCS FAILURE MONITOR ERASABLE - PROGRAM ON T4RUPT 4 TIMES/SECOND
R0093  2*** FAILSW CAPABILITY FOR CHECKOUT ONLY ***
 0094   FAILSW   ERASE                  IF POSITIVE NO RCSMONIT, OTHERWISE 0
 0095   LASTFAIL ERASE                  LAST FAILURE CHANNEL RECORD, -0 INITIAL
 0096   CH5MASK  ERASE                  MASKS FOR TURNING ON P/Q,R JETS
 0097   CH6MASK  ERASE                  IN OUTPUT CHANNELS 5 AND 6
 0098   FAILCTR  EQUALS ITEMP1          BIT POSITION COUNTER (INTERNAL)
 0099  2FAILTEMP EQUALS ITEMP2          TEMPORARY RECORD OF FAILED BITS
R0100  2Q,R AXIS ERASABLES
 0101   DELQ     EQUALS ITEMP2
 0102   DELTAR   EQUALS ITEMP3
 0103   TJETADR  ERASE
 0104   URGENCYQ ERASE
 0105   URGENCYR ERASE
 0106   A+B      ERASE
 0107   A-B      ERASE
 0108   TERMA    ERASE
 0109   TERMB    ERASE
 0110   POLRELOC ERASE
 0111   LOOPCTR  ERASE
 0112   POLTEST  ERASE
P0113  2TRIM GIMBAL CONTROL LAW ERASABLES:
R0114  2THE FOLLOWING ASSIGNMENTS OF RUPTREGS AND ITEMPS HAS BEEN MADE IN AN EFF
 0115  9ORT TO OPTIMIZE USE OF ERASABLES:
 0116   K2THETA  EQUALS RUPTREG1        D.P. K(2)THETA AND "NEGUSUM"
 0117   ETHETA   EQUALS RUPTREG2        S.P. ERROR ANGLE SCALED AT PI/64 RADIANS
 0118   A2CNTRAL EQUALS RUPTREG3        D.P. ALPHA(2) SCALED AT PI(2)/64 R/S(2)
 0119   SF1      EQUALS RUPTREG3        S.P. VARIABLE SCALE FACTORS WHICH ARE
 0120   SF2      EQUALS RUPTREG4        S.P. - REALLY SINGLE BITS (OR ZERO)
 0121   OMEGA.K  EQUALS ITEMP1          D.P. OMEGA*K SUPERCEDES K AND K(2)
 0122   KCENTRAL EQUALS ITEMP1          S.P. K FROM KQ OR KR FIRST AT PI/2(8)
 0123   K2CNTRAL EQUALS ITEMP2          S.P. K(2) FROM Q OR R 1ST AT PI(2)/2(16)
 0124   WCENTRAL EQUALS ITEMP3          S.P. OMEGA SCALED AT PI/4 RADIANS/SECOND
 0125   ACENTRAL EQUALS ITEMP4          S.P. ALPHA SCALED AT PI/8 RAD/SEC(2)
 0126   DEL      EQUALS ITEMP5          S.P. SGN(FUNCTION)
 0127  2QRCNTR   EQUALS ITEMP6          S.P. COUNTER: Q,Y=0, R,Z=2
R0128  2THE ABOVE QUANTITIES ARE ONLY NEEDED ON A VERY TEMPORARY BASIS AND HAVE
 0129  9BEEN PROVEN TO BE NON-CONFLICTING.
 0130  2L,PVT-CG ERASE                  TRIM GIMBAL PIVOT TO CG DIST AT 8 FEET
 0131  2MULTFLAG ERASE                  INDICATOR FOR SPDPMULT ROUTINE
 0132  2FUNCTION ERASE   +1             D.P. WORD FOR DRIVE FUNCTIONS
 0133   NEGUQ    ERASE   +2             NEGATIVE OF Q-AXIS GIMBAL DRIVE
 0134   THRSTCMD EQUALS NEGUQ +1        THRUST COMMAND AT 16384 LBS (SEPARATOR)
 0135  2NEGUR    EQUALS NEGUQ +2        NEGATIVE OF R-AXIS GIMBAL DRIVE
 0136   KQ       ERASE   +3             .3ACCDOTQ SCALED AT PI/2(8)
 0137   KQ2      EQUALS KQ +1           KQ2 = KQ*KQ
 0138   KR       EQUALS KQ +2           .3ACCDOTR SCALED AT PI/2(8)
 0139  2KR2      EQUALS KQ +3           KR2 = KR*KR
 0140   ACCDOTQ  ERASE   +3             Q-JERK SCALED AT PI/2(7) UNSIGNED
 0141   QACCDOT  EQUALS ACCDOTQ +1      Q-JERK SCALED AT PI/2(7) SIGNED
 0142   ACCDOTR  EQUALS ACCDOTQ +2      R-JERK SCALED AT PI/2(7) UNSIGNED
 0143  2RACCDOT  EQUALS ACCDOTQ +3      R-JERK SCALED AT PI/2(7) SIGNED
 0144   QDIFF    EQUALS QERROR          ATTITUDE ERRORS:
 0145  2RDIFF    EQUALS RERROR          SCALED AT PI RADIANS
 0146   TIMEOFFQ ERASE                  TIMES TO GO UNTIL TRIM GIMBAL TURN-OFF,
 0147   TIMEOFFR ERASE                  ZERO MEANS NO ACTION, SCALED AS WAITLIST
P0148  2KALMAN FILTER ERASABLES.
 0149   STORCDUY ERASE                  THIS S.P. PAIR IS USED TO SAVE CDUY,Z
 0150  2STORCDUZ ERASE                  FOR THE GTS RUPT
 0151   CDU      EQUALS RUPTREG3        RUPTREG3,4 USED AS D.P. WORD FOR CDU
A0152  2                                VALUE WITHIN FILTER 1S COMP AT 2PI RAD
 0153   CDUDOT   EQUALS ITEMP1          ITEMP1,2 USED AS D.P. WORD FOR CDUDOT
A0154  2                                VALUE WITHIN FILTER SCALED AT PI/4
 0155   CDU2DOT  EQUALS ITEMP3          ITEMP3,4 USED AS D.P. WORD FOR CDU2DOT
A0156  2                                VALUE WITHIN FILTER SCALED AT PI/8
 0157   DT       ERASE                  TIME ELAPSED SCALED AT 1/8: NOMINAL=50MS
 0158  2DAPTIME  ERASE                  USED TO RECORD LAST TIME FROM CHANNEL 4
 0159  2STEERADR ERASE                  DTCALC SWITCH IN FILTER INITIALIZATION
 0160   DPDIFF   ERASE   +1             D.P. WEIGHTING VECTOR FACTOR AT PI
 0161   WPOINTER ERASE                  POINTER TO WEIGHTING VECTOR TABLE
 0162   W0       ERASE   +2             THETA WEIGHT
 0163   W1       EQUALS W0 +1           OMEGA WEIGHT
 0164  2W2       EQUALS W1 +1           ALPHA WEIGHT
 0165   CDUYFIL  ERASE   +1             Y-AXIS D.P. FILTERED THETA AT 2PI
 0166   CDUZFIL  ERASE   +1             Z-AXIS D.P. FILTERED THETA AT 2PI
 0167   DCDUYFIL ERASE   +1             Y-AXIS D.P. FILTERED OMEGA AT PI/4
 0168   DCDUZFIL ERASE   +1             Z-AXIS D.P. FILTERED OMEGA AT PI/4
 0169   D2CDUYFL ERASE   +1             Y-AXIS D.P. FILTERED ALPHA AT PI/8
 0170   D2CDUZFL ERASE   +1             Z-AXIS D.P. FILTERED ALPHA AT PI/8
 0171   Y3DOT    ERASE                  Y-AXIS S.P. JERK AT PI/2(7)
 0172   CDU3DOT  ERASE                                    LOOP REGISTER (SPACER)
 0173  2Z3DOT    ERASE                  Z-AXIS S.P. JERK AT PI/2(7)
 0174   PFILTADR ERASE   +1             2CADR FOR FILTER RUPT 30 MS AFTER P-AXIS
 0175   PFRPTLST ERASE   +7             POST FILTER RUPT LIST
 017502 PJUMPADR ERASE
 017503 QJUMPADR ERASE
R0176  2TORQUE VECTOR RECONSTRUCTION VARIABLES:
R0177   *** PLACEHOLDER FOR REV 12 DELETION ***
 0178   JETRATE  ERASE   +2             WEIGHTED RATES DUE TO JETS APPLIED IN
 0179   JETRATEQ EQUALS JETRATE +1      THE LAST CONTROL SAMPLE PERIOD OF 100 MS
 0180  2JETRATER EQUALS JETRATE +2      SCALED AT PI/4 RADIANS/SECOND
 0181   NO.QJETS ERASE   +1             NUMBER OF Q AND R JETS THAT ARE GIVEN
 0182  2NO.RJETS EQUALS NO.QJETS +1     BY THE JET SELECT LOGIC
 018202 100MSPTQ ERASE
 018204 QR.1STOQ ERASE
 018206 NO.PJETS ERASE
 0183   TP       ERASE   +1             TIME CALCULATED BY TJETLAW FOR P, QR
 0184  2TQR      EQUALS TP +1           SCALED AS TIME6, THEN TQR RESCALED TO 1
 0185   1JACC    ERASE   +4             ACCELERATIONS DUE TO 1 JET TORQUING
 0186   1JACCQ   EQUALS 1JACC +1        SCALED AT PI/4 RADIANS/SECOND
 0187   1JACCR   EQUALS 1JACC +2
 0188   1JACCU   EQUALS 1JACC +3        FOR U,V-AXES THE SCALE FACTOR IS  DIFF:
 0189  21JACCV   EQUALS 1JACC +4        SCALED AT PI/2 RADIANS/SECOND (FOR ASC)
R0190  2ASCENT VARIABLES:
 0191   AOSQ     ERASE   +3             ASCENT OFFSET ACCELERATIONS
 0192   AOSR     EQUALS AOSQ +1         ESTIMATED EVERY 2 SECONDS BY AOSTASK
 0193   AOSU     EQUALS AOSQ +2         U,V-ACCS ARE FORMED BY VECTOR ADDITION
 0194  2AOSV     EQUALS AOSQ +3         SCALED AT PI/2 RADIANS/SECOND
 0195   ABVLAOSQ EQUALS ITEMP3          ASCENT OFFSET ACCELERATIONS (ABVAL)
 0196   ABVLAOSR EQUALS ABVLAOSQ +1     SCALED AT PI/2 RADIANS/SECOND(2)
 0197   ABVLAOSU EQUALS ABVLAOSQ +2
 0198  2ABVLAOSV EQUALS ABVLAOSQ +3
 0199   SUMRATEQ ERASE   +1             SUM OF UN-WEIGHTED JETRATE TERMS
 0200  2SUMRATER EQUALS SUMRATEQ +1     SCALED AT PI/4 RADIANS/SECOND
 0201   AOSQTERM ERASE   +1             (.1-.05K)AOS
 0202  2AOSRTERM EQUALS AOSQTERM +1     SCALED AT PI/4 RADIANS/SECOND
 0203   OLDWFORQ ERASE   +1             OMEGA VALUE 2 SECONDS AGO
 0204  2OLDWFORR EQUALS OLDWFORQ +1     SCALED AT PI/4 RADIANS/SECOND
 0205   DBMINIMP ERASE   +1             MINIMUM IMPULSE DEADBANDS (EQUAL IN DESC
 0206   MINIMPDB EQUALS DBMINIMP +1     AT .3 DEG, 0,-DB RESPECTIVELY FOR ASC)
A0207  2                                SCALED AT PI RADIANS
 0208   .5ACCMNE ERASE   +4             (1/2)(1/ACCMIN) WHICH IS THE INVERSE OF
 0209   .5ACCMNQ EQUALS .5ACCMNE +1     THE MINIMUM ACCELERATION (A CONSTANT FOR
 0210   .5ACCMNR EQUALS .5ACCMNE +2     DESCENT AND A VARIABLE FOR ASCENT DAP)
 0211   .5ACCMNU EQUALS .5ACCMNE +3     SCALED AT 2(+8)/PI
 0212  2.5ACCMNV EQUALS .5ACCMNE +4     IN UNITS OF SECONDS(2)/RADIAN
 0213   WFORP    ERASE   +1             W = K/(NOMINAL DT)
 0214  2WFORQR   EQUALS WFORP +1        SCALED AT 16
 0215   (1-K)QR  ERASE   +1             1-K SCALED AT 1
 0216  2(1-K)/8  EQUALS (1-K)QR +1      1-K SCALED AT 8
 0217   1/NJTSQ  ERASE   +3             1/NJETACC FOR EACH AXIS
 0218   1/NJTSR  EQUALS 1/NJTSQ +1      FOR DESCENT THIS IS ALWAYS 1/2JTS
 0219   1/NJTSU  EQUALS 1/NJTSQ +2      FOR ASCENT WITH HIGH OFFSET: 1/4JTS
 0220  21/NJTSV  EQUALS 1/NJTSQ +3      SCALED AT 2(8)/PI SEC(2)/RAD
 0221   QMANDACC ERASE   +3             ASCENT FLAGS
 0222   RMANDACC EQUALS QMANDACC +1     0: INDICATES NO OVER-RIDE OF 2 JETS
 0223   UMANDACC EQUALS QMANDACC +2     1: INDICATES USE 4 INSTEAD OF 2 JETS
 0224  2VMANDACC EQUALS QMANDACC +3     (ALWAYS ZERO FOR DESCENT)
 0225  4KCOEFCTR ERASE                  COUNTER FOR ASCENT DAP
R0226   THE SAVE RATE INDEX AND THE THREE DELCDUS ARE LOCATED HERE TEMPORARILY,
 0227  9AWAITING MORE LOGICAL PLACEMENT WHEN THE
R0228  2DAP IS ASSEMBLED INTO SUNBURST
 0229   DLCDUIDX ERASE                  SAVE RATE INDEX, = 1, 0
 0230   DELCDUX  ERASE
 0231   DELCDUY  ERASE                  DELCDUS ARE SCALED AT PI, LIKE THE CDUS
 0232   DELCDUZ  ERASE
L      2P-AXIS REACTION CONTROL SYSTEM AUTOPILOT
 0001            BANK   23
 0002  2         EBANK= DT
R0003  2THE FOLLOWING SECTION DRIVES THE ATTITUDE ERROR NEEDLES IN THE "EIGHT-BA
 0004  9LL" DISPLAY:
 0005   EIGHTBAL LXCH   DAPBOOLS        ATTITUDE ERRORS DISPLAYED EVERY
 0006            CAF    BIT7            OTHER DAP CYCLE (.2 SECS)
 0007            EXTEND                 CHANGE STATE OF FLAG
 0008            RXOR   L
 0009            TS     DAPBOOLS        FLAG WORD RESTORE
 0010            MASK   BIT7
 0011            EXTEND                 ZERO AS NEW STATE MEANS
 0012  2         BZF    PAXFILT         NO DISPLAY THIS CYCLE
 0013   ATERDSPY CAF    TWO             INIT. INDEX WORD
 0014            TS     ITEMP1
 0015            INDEX  A
 0016            CCS    PERROR          LOOK AT CURRENT ATT ERROR
 0017            TCF    ERLIMCHK        HAVE E VALUE GET MAGNITUDE
 0018            TCF    ZERR            ZERO VALUE
 0019            TCF    ERLIMCHK        GET MAGNITUDE
 0020   ZERR     INDEX  ITEMP1
 0021            CS     PERROR
 0022            INDEX  ITEMP1
 0023            XCH    LASTPER         SAVE CURRENT E, LOAD LAST E (NEG)
 0024            INDEX  ITEMP1
 0025            AD     PERROR          GET DIFF E(N-2) - E(N)
 0026            EXTEND
 0027            MP     BIT13           SHIFT RIGHT 2
 0028            INDEX  ITEMP1
 0029            TS     CDUXCMD         STORE CMD E VALUE
 0030            CCS    ITEMP1
 0031  2         TCF    ATERDSPY +1     GET NEXT E
 0032            CA     OCT70000        ICDU DRIVE BITS 13,14,15
 0033            EXTEND
 0034            WOR    14              DRIVE AWAY
 0035  2         TCF    PAXFILT         ATT ERROR DISPLAY DONE FOR THIS CYCLE
 0036   ERLIMCHK AD     BIT1            HAVE MAG OF E, SEE IF GREATER THAN
 0037            COM                      5 DEGREES
 0038            AD     5DEGS
 0039            EXTEND
 0040            BZMF   BIGATER         ERROR GREATER THAN 5 DEGS, DSPY 5 DEGS
 0041  2         TCF    ZERR            E LESS THAN 5 DEGS, NORMAL PROCED
 0042   BIGATER  INDEX  ITEMP1
 0043            CCS    PERROR          GET SIGN OF BIG ERROR
 0044            CA     5DEGS
 0045            TCF    +2              CANT BE ZERO HERE
 0046            CS     5DEGS
 0047            INDEX  ITEMP1
 0048            TS     PERROR          SET BIG ERROR TO 5DEGS
 0049  2         TCF    ZERR
R0050  4END OF ATTITUDE ERROR NEEDLE DRIVER.  (SHOULD GO IN-LINE SOMETIME.)
R0051   THE FOLLOWING T5RUPT ENTRY BEGINS THE PROGRAM WHICH CONTROLS THE P-AXIS
 0052  9ACTION OF THE LEM USING THE RCS JETS.
R0053  2THE NOMINAL TIME BETWEEN THE P-AXIS RUPTS IS 100 MS IN ALL NON-IDLING MO
 0054  9DES OF THE DAP.
 0055   PAXIS    CAF    MS30P           RESET TIMER IMMEDIATELY: DT = 30 MS
 0056  2         TS     TIME5
 0057            LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0058            EXTEND
 0059  2         QXCH   QRUPT
R0060  2CHECK TO SEE IF DAP IS STILL IN USE:
 0061            EXTEND                 IF BOTH BITS 13 AND 14 OF CHANNEL 31 ARE
 0062            READ   31              EQUAL TO 1, THEN THE SCS MODE SWITCH IS
 0063            COM                    IN THE OFF POSITION.  ACTUALLY, THE TEST
 0064            MASK   BIT13-14        IS MADE ON BOTH THE ATTITUDE HOLD AND
 0065            EXTEND                 AUTOMATIC MODE BITS.
 0066  2         BZF    GOIDLE
R0067  2WHILE DAP IS ON, SET UP EITHER A KALMAN FILTER RUPT OR A DUMMY FILTER RU
 0068  9PT BY SETTING UP T5ADR FROM ERASABLE.
 0069            EXTEND                 T5ADR IS SET TO EITHER FILTER OR
 0070            DCA    PFILTADR        DUMMYFIL IN A BLIND MANNER SINCE
 0071  2         DXCH   T5ADR           PFILTADR IS SET UP ELSEWHERE
R0072   DO P AXIS RATE DERIVATION AND CONTROL LAW.
R0073  2DERIVE DELTA P.
 0074   FILT/PAX CAE    CDUX
 0075            TS     L
 0076            EXTEND
 0077            MSU    OLDXFORP        SCALED AT PI
 0078            LXCH   OLDXFORP
 0079            EXTEND
 0080            MP     BIT7
 0081            LXCH   DELTAP          SCALE AT PI/2(6)
 0082            CA     CDUY
 0083            TS     L
 0084            EXTEND
 0085            MSU    OLDYFORP        SCALED AT PI
 0086            LXCH   OLDYFORP
 0087            EXTEND
 0088            MP     BIT7            INTO L SCALED AT PI/2(6)
 0089            CA     M11             M11 SCALED AT 1
 0090            EXTEND
 0091            MP     L               INTO A SCALED AT PI/2(6).
 0092            AD     DELTAP
 0093            EXTEND
 0094            MP     WFORP           SCALED AT 2(4)=16, RESULT IN A AT PI/4.
 0095            XCH    OMEGAP          W*DELTAP IN OMEGAP LOC. OLD OMEGAP IN A.
 0096            EXTEND
 0097            MP     ONE-K           SCALED AT 1.
 0098            AD     JETRATE         RATE DUE TO JETS TORQUING.
 0099            ADS    OMEGAP          PRATE= WFORP*DELTAP+ALPHA*LAST-PRATE+TPF
 0100  2         TC     T6JOBCHK        T6JOBCHK IS IN FIXED-FIXED
R0100022***** KALCMANU-DAP AND "RATE-HOLD"-DAP INTERFACE *****
R010004 THE FOLLOWING SECTION IS EXECUTED EVERY 100 MS (10 TIMES A SECOND) WITHI
 0100069N THE P-AXIS REACTION CONTROL SYSTEM
R0100082AUTOPILOT (WHENEVER THE DAP IS IN OPERATION).
 010010          CAF    TWO             SET UP LOOP TO DO Z,Y,X CDU AXES:
 0100122KALCLOOP TS     QRCNTR
 010014          INDEX  QRCNTR          KALCMANU AND RATE-HOLD USE THIS SECTION
 010016          CAE    CDUXD           TO PERFORM THEIR INDEPENDENT FUNCTIONS:
 010018          EXTEND                 BOTH PROCEDURES SET UP THE DELCUD'S
 010020          INDEX  QRCNTR          TO HAVE THE NEGATIVE VALUE OF THE
 010022          MSU    DELCDUX         DESIRED CDU CHANGE FOR EACH 100 MS CSP
 010024          CCS    A               DURING THE MANEUVER (OR MODE).  EACH IS
 010026          AD     ONE             STORED AT PI RADIANS IN 2'S COMPLEMENT.
 010028          TCF     +2             SINCE THE MODULAR SUBTRACT YIELDS THE
 010030          COM                    NEW CDUD VALUE IN 1'S COMPLEMENT, THE
 010032          INDEX  QRCNTR          CCS SECTION IS NEEDED FOR 1'S TO 2'S
 0100342         TS     CDUXD           CONVERSION OF DESIRED CDU ANGLES.
 010036          CCS    QRCNTR          (THIS MAKES THE LOOP DO ALL THREE AXES
 0100384         TCF    KALCLOOP        IN THE ORDER Z, Y, X.)
 0101  2         TCF    EIGHTBAL
 010102 PAXFILT  TC     PJUMPADR
 010106 SKIPPAXS CA     VISFZADR
 010108          TS     PJUMPADR
 010109          CA     ZERO
 010110          TS     JETRATE
 010111          CA     TP
 010112          AD     NEGCSP1
 010114          CCS    A
 010116          TC     PTORQUE
 010118          TCF    RESUME
 010120          TC     PTORQUE
 010122          CS     JETRATE
 010123          ADS    OMEGAP
 010124          CA     ZERO
 010125          TS     JETRATE
 010126          TCF    RESUME
 010128 (1-K)/8P OCTAL  20000
 010130 PTORQUE  AD     ONE
 010132          EXTEND
 010134          MP     BIT5
 010136          CA     L
 010138          EXTEND
 010140          MP     16/25
 010142          TS     TP
 010144          CA     WFORP
 010146          AD     (1-K)/8P
 010148          EXTEND
 010150          MP     TP
 010152          EXTEND
 010154          MP     BIT4
 010156          CA     1JACC
 010158          EXTEND
 010160          MP     L
 010162          EXTEND
 010164          MP     NO.PJETS
 010166          LXCH   JETRATE
 010168          TC     Q
 0102   CHKVISFZ CAF    BIT9            VISIBILITY PHASE BIT
 0103            MASK   DAPBOOLS
 0104            EXTEND
 0105            BZF    +2
 0106  2         TCF    PURGENCY        ATTITUDE STEER DURING VISIBILITY PHASE
 0107            CAF    BIT10           BIT10=1 FOR RHC MINIMUM IMPULSE MODE
 0108            MASK   DAPBOOLS
 0109            EXTEND
 0110  2         BZF    DETENTCK        BRANCH FOR RATE COMMAND
 0111            CAE    DELAYCTR        SET BY RUPT10 TO TWO
 0112            EXTEND
 0113  2         BZF    BITSGONE        CHECK FOR ALL SWITCHES OPEN
 0114            CS     -TJMINT6
 0115  2         TS     TOFJTCHG
 0116            TS     TP              FOR RATE DERIVATION
 0117            CA     BIT3
 0118            EXTEND
 0119            RAND   31
 0120            EXTEND
 0121  2         BZF    +MINIMP
 0122            CA     BIT4
 0123            EXTEND
 0124            RAND   31
 0125            EXTEND
 0126  2         BZF    -MINIMP
 0127            CCS    DELAYCTR        DELAYCTR ALWAYS PNZ HERE
 0128            TS     DELAYCTR
 0129            EXTEND
 0130            BZF    PLETRUPT
 0131  2         TCF    JETSOFF
 0132   +MINIMP  CAF    BIT1
 0133            TCF    +2
 0134   -MINIMP  CS     BIT1
 0135   +2       TS     TPSIG
 0136            CAF    ZERO
 0137            TS     DELAYCTR
 0138  2         TCF    2PJETS
 0139   BITSGONE EXTEND                 ARE SWITCHES ALL OPEN
 0140            READ   31
 0141            COM
 0142            MASK   DAPLOW6
 0143            EXTEND
 0144            BZF    +2
 0145  2         TCF    JETSOFF
 0146            CAF    BIT4            BIT4 OF DAPBOOLS ZERO IF PREVIOUS
 0147            MASK   DAPBOOLS        READING OF 31 FOUND ALL SWITCHES OPEN
 0148            EXTEND
 0149  2         BZF    PLETRUPT
 0150            CS     BIT4
 0151            MASK   DAPBOOLS
 0152            TS     DAPBOOLS
 0153  2         TCF    JETSOFF
 0154   PLETRUPT CAF    BIT4
 0155            ADS    DAPBOOLS
 0156            CAF    BIT12
 0157            EXTEND
 0158            WOR    13
 0159            TCF    JETSOFF
 0160   DETENTCK CA     BIT15
 0161            EXTEND
 0162            RAND   31              CHECK OUT-OF-DETENT BIT.INVERTED.
 0163            EXTEND
 0164            BZF    RHCMOVED        BRANCH IF OUT OF DETENT
R0165   ........................................................................
 0166            CAF    BIT1            IN DETENT.CHECK THE RATE COMMAND BIT
 0167            MASK   DAPBOOLS        BIT1 OF DAPBOOLS IS RATE COMMAND BIT
 0168            EXTEND
 0169            BZF    PURGENCY        BRANCH IF NOT IN RATE COMMAND
R0170   ........................................................................
 0171            CAF    BIT13           CHECK ATTITUDE HOLD BIT
 0172            EXTEND
 0173            RAND   31
 0174            EXTEND
 0175            BZF    JOEY            BRANCH IF IN ATTITUDE HOLD
R0176   ........................................................................
 0177            CCS    OMEGAP          HERE IF IN X-AXIS OVER-RIDE
 0178            TCF    +4
 0179            TCF    RATEDONE
 0180            TCF    +2
 0181            TCF    RATEDONE
 0182            AD     -RATEDB
 0183            EXTEND
 0184            BZMF   RATEDONE
 0185  2         TCF    JOEY
 0186   RATEDONE CS     BIT1
 0187            MASK   DAPBOOLS
 0188  2         TS     DAPBOOLS
R0189  2READ CDUS INTO CDU DESIRED REGISTERS
 0190            CA     CDUX
 0191            TS     CDUXD
 0192            CA     CDUY
 0193            TS     CDUYD
 0194            CA     CDUZ
 0195  2         TS     CDUZD
 0196  2         TCF    JETSOFF
 0197   RHCMOVED CAF    BIT1            CHECKING THE RATE COMMAND BIT
 0198            MASK   DAPBOOLS
 0199            EXTEND
 0200  2         BZF    JUSTOUT
R0201   READ,ZERO, AND ENABLE COUNTERS
R0202  2SYSTEM HAS BEEN IN RATE COMMAND FOR AT LEAST THE TIME OF A CAP CHARGE
 0203            CAE    P-RHCCTR        1 BIT IN P-RHCCTR WORTH 0.6256 DEG/SEC
 0204            EXTEND
 0205            MP     BIT9
 0206            CA     L
 0207            EXTEND
 0208            MP     0.88975
 0209  2         TS     PRATECOM        COMMANDED RATE SCALED AT PI/4
 0210            CAF    ZERO            ZERO COUNTERS
 0211            TS     P-RHCCTR
 0212            TS     Q-RHCCTR
 0213            TS     R-RHCCTR
 0214            CA     BITS8,9         ENABALE COUNTERS, START READING
 0215            EXTEND
 0216            WOR    13
 0217            TCF    OBEYRATE
R0218   ........................................................................
 0219   JUSTOUT  INCR   DAPBOOLS        ALWAYS SETS BIT1 ON RATE COMMAND BIT
 0220            CAF    BIT2
 0221            EXTEND
 0222            RAND   30
 0223            EXTEND
 0224  2         BZF    +5              BRANCH FOR ASCENT CONSTANTS
 0225            CAF    -D2JTLIM        -1.4 DEG/SEC SCALED AT PI/4
 0226            TS     -2JETLIM
 0227            CAF    -DRATEDB        -0.4 DEG/SEC SCALED AT PI/4
 0228  2         TCF    +4
 0229   +5       CAF    -A2JTLIM        -2.0 DEG/SEC SCALED AT PI/4
 0230            TS     -2JETLIM
 0231            CAF    -ARATEDB        -1.0 DEG/SEC SCALED AT PI/4
 0232  2+4       TS     -RATEDB
 0233            CAF    ZERO            ZERO COUNTERS
 0234            TS     P-RHCCTR
 0235            TS     Q-RHCCTR
 0236            TS     R-RHCCTR
 0237            CA     BITS8,9
 0238            EXTEND
 0239            WOR    13
 0240            TCF    JETSOFF
R0241   ........................................................................
 0242   JOEY     CAF    ZERO
 0243  2         TS     PRATECOM
R0244  2IN THIS SECTION P RATE ERROR IS COMPUTED AND T-JET IS CALCULATED
 0245   OBEYRATE CS     OMEGAP
 0246            AD     PRATECOM
 0247            TS     TPSIG           SIGN STORAGE TO TELL DIRECTION OF ROT.
 0248   OBEYRAPE CCS    A               GET ABVAL OF RATE P-ERROR
 0249            TCF    +4
 0250            TCF    JETSOFF
 0251            TCF    +2
 0252            TCF    JETSOFF
 0253            AD     BIT1
 0254  2         TS     PRATEDIF        ABVAL OF RATE ERROR SCALED AT PI/4
 0255  2         TC     T6JOBCHK        T6JOBCHK IS IN FIXED-FIXED
 0256            CA     -RATEDB
 0257            AD     PRATEDIF
 0258            EXTEND
 0259  2         BZMF   JETSOFF         RATE ERROR INSIDE DEADBAND
 0260            CS     PRATEDIF
 0261            EXTEND
 0262            SU     -2JETLIM
 0263            EXTEND
 0264  2         BZMF   RCM4JETS
 0265            CA     PRATEDIF        2 JETS ENOUGH.COMPUTE TJET
 0266            EXTEND
 0267            MP     1/2JTSP         1/2JTACC SCALED AT 2EXP(8)/PI
 0268            EXTEND
 0269            MP     BIT4
 0270            CA     L
 0271            EXTEND
 0272            MP     25/32           A CONTAINS TJET SCALED AT 2EXP(4)(16/25)
 0273  2         TS     TP
R0274   ........................................................................
R0275   CHECK RATE COMMAND ON TIME AGAINST MINIMUM IMPULSE
 0276            TS     TOFJTCHG
 0277            AD     -TJMINT6
 0278            EXTEND                   AS TP. TEST JET TIME. IS IT GREATER OR
 0279            BZMF   JETSOFF         LESS THAN A MINIMUM IMPULSE
R0280   ........................................................................
R0281                2-JET JET SELECT LOGIC
R0282   READ CHANNEL 6 TO SEE WHAT THE CURRENT STATE OF THE P JETS IS AND
R0283       CORRECT THE JET TIME FOR THE PROPER AMOUNT OF TIME .
 0284   2PJETS   EXTEND                 WHAT IS THE CURRENT STATE OF THE P JETS.
 0285            READ   6
 0286            EXTEND
 0287            BZF    PJETSNOT
 0288            CA     MCOMPT          - COMPUTATION TIME FOR THE PAXIS
 0289            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
 0290            TCF    TESTSIGN
 0291   PJETSNOT CA     14-TJMIN        TOTAL DELAY FOR A MIN IMP TO FULL ON.
 0292            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
R0293   ........................................................................
R0294   SET UP THE ALTERNATING P SELECT BIT IN DAPBOOLS.
 0295   ALTPSELT CA     BIT5            COMPLEMENT BIT5 OF DAPBOOLS
 0296            LXCH   DAPBOOLS
 0297            EXTEND
 0298            RXOR   L
 0299            TS     DAPBOOLS
 0300   TESTSIGN CCS    TPSIG
 0301            CA     BIT5
 0302            TCF    +2
 0303  2         TCF    NEGTP
 0304            MASK   DAPBOOLS        IN THE DAP BOOLS WORD.
 0305            EXTEND
 0306            BZF    ALTPOS1
 0307   ALTPOS2  CA     POSPJET1
 0308            TC     WRITEJTS +2
 0309            CA     BIT9              NOW. ZERO AT CHG.(WRITE LOW8 IN CH.6).
 0310            TS     JTSATCHG        STATE OF P AXIS JETS AFTER THE T6 RUPT.
 0311            TCF    P+2JET
 0312   ALTPOS1  CA     POSPJET0
 0313            TC     WRITEJTS +2
 0314            CA     BIT9              NOW. ZERO AT CHG.(WRITE LOW8 IN CH.6).
 0315            TS     JTSATCHG        JTSONNOW CONTAINS BITS WRITTEN INTO CH 6
 0316            TCF    P+2JET
R0317   ........................................................................
R0318   TEST DAPBOOLS TO DETERMINE WHICH JET PAIR TO USE FOR P AXIS ROTATION.
 0319   NEGTP    CA     BIT5
 0320            MASK   DAPBOOLS        IN THE DAP BOOLS WORD.
 0321            EXTEND
 0322            BZF    ALTNEG1
 0323   ALTNEG2  CA     NEGPJET1
 0324            TC     WRITEJTS +2
 0325            CA     BIT9              NOW. ZERO AT CHG.(WRITE LOW8 IN CH.6).
 0326            TS     JTSATCHG        STATE OF P AXIS JETS AFTER THE T6 RUPT.
 0327            TCF    P-2JET
 0328   ALTNEG1  CA     NEGPJET0
 0329            TC     WRITEJTS +2
 0330            CA     BIT9              NOW. ZERO AT CHG.(WRITE LOW8 IN CH.6).
 0331            TS     JTSATCHG        STATE OF P AXIS JETS AFTER THE T6 RUPT.
 0332            TCF    P-2JET
 0333   RCM4JETS CA     PRATEDIF
 0334            EXTEND
 0335            MP     1/2JTSP
 0336            EXTEND
 0337            MP     BIT3
 0338            CA     L
 0339            EXTEND
 0340            MP     25/32           A NOW CONTAINS TJET SCALED AT 2EXP(4)(16
 0341  2         TS     TP              /25).
R0342   ........................................................................
R0343   IN THIS SECTION DO THE P AXIS  JET SELECT LOGIC FOR 4 JETS
 0344   4PJETS   TS     TOFJTCHG        TOFJTCHG WILL BE MODIFIED AND WILL = T6.
 0345            CS     TPSIG
 0346            EXTEND
 0347            BZMF   POS4P
 0348            EXTEND
 0349            READ   6
 0350            EXTEND
 0351            BZF    +4
 0352            CA     MCOMPT
 0353            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
 0354            TCF    +3
 0355   +4       CAF    14-TJMIN
 0356            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
 0357            CA     4NEGPJET
 0358            TC     WRITEJTS +2
 0359            CA     BIT9            THE LOW 8 BITS ONLY GET WRITTEN INTO CH.
 0360            TS     JTSATCHG        STATE OF P AXIS JETS AFTER THE T6 RUPT.
 0361            CS     FOUR
 0362            TCF    RATE
 0363   POS4P    EXTEND
 0364            READ   6
 0365            EXTEND
 0366            BZF    +4
 0367            CA     MCOMPT
 0368            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
 0369            TCF    +3
 0370   +4       CA     14-TJMIN        TOTAL DELAY FOR A MIN IMP TO FULL ON.
 0371            ADS    TOFJTCHG        ALTER JET OFF TIME PER STATE OF CH 6.
 0372            CA     4POSPJET
 0373            TC     WRITEJTS +2
 0374            CA     BIT9              NOW. ZERO AT CHG.(WRITE LOW8 IN CH.6).
 0375            TS     JTSATCHG        STATE OF P AXIS JETS AFTER THE T6 RUPT.
 0376            CA     FOUR
 0377            TCF    RATE
 0378   JETSOFF  CAF    ZERO
 0379            TS     JETRATE
 0380            TS     TOFJTCHG
 0381            TC     WRITEJTS +2
 0382            TCF    RESUME
R0385  2P-AXIS URGENCY FUNCTION CALCULATION
R0386  2(NOTE -- M13 = 1 IDENTICALLY IMPLIES NULL MULTIPLICATION.)
 0387   PURGENCY CA     CDUY            P-ERROR CALCULATION
 0388            EXTEND
 0389            MSU    CDUYD           CDU VALUE - ANGLE DESIRED (Y-AXIS)
 0390            EXTEND
 0391            MP     M11             (CDUY-CDUYD)M11 SCALED AT PI RADIANS
 0392            XCH    E               SAVE FIRST TERM (OF TWO)
 0393            CA     CDUX            THIRD COMPONENT
 0394            EXTEND
 0395            MSU    CDUXD           CDU VALUE - ANGLE DESIRED (X-AXIS)
R0396                                                    EXTEND
R0397                                                    MP     M13
 0398  2         ADS    E               SAVE SUM OF TERMS, NO OVERFLOW EVR
 0399            TS     PERROR          SAVE P ERR FOR DISPLAY
 0400            CAE    1/2JTSP         SET-UP FOR URGENCY SUBROUTINE
 0401  2         TS     1/NJETAC
 0402  2         TC     T6JOBCHK        CHECK T6 CLOCK HERE, BEFORE URGROUTN
 0403            CS     OMEGAPD
 0404            AD     OMEGAP
 0405            TS     EDOTP
 0406            TC     IBNKCALL        *** SUBROUTINE CALL *** (TAKES 24 MCTS)
 0407  2         CADR   URGROUTN        (RETURN TAKES 10 MCTS)
 04071           EXTEND                 IF URGENCY = 0, FIRE NO JETS
 04072 2         BZF    JETSOFF         (FOR EFFICIENCY ONLY)
 0408            CCS    A               URGENCY FUNCTION IS IN A, GET ABVAL
 0409            AD     UPM
 0410            TCF     +2
 0411            AD     UPM
 0412            EXTEND
 0413            BZMF   2JETSP
 0414            CA     POSMAX
 0415            TS     NJET            INDICATE 4 JETS
 0416            CA     1/2JTSP
 0417            EXTEND
 0418            MP     BIT14           USE 1/4JETSP
 0419            TS     1/NJETAC
 0420  2         TCF    T-JETLAW
 0421   2JETSP   CS     POSMAX
 0422            TS     NJET            INDICATE 2 JETS
 0423  2T-JETLAW TC     T6JOBCHK        CHECK T6 CLOCK RUPT BEFORE SUBROUTINE
 0424            CAF    JETLWADR        TJETLAW CALLING SEQUENCE
 0425            TC     ISWCALL
 0426            TCF    JETSOFF
 0427  2         TS     TP
 0428            CCS    NJET
 0429            CA     TP
 0430            TCF    4PJETS
 0431            CA     TP
 0432            TS     TOFJTCHG
 0433  2         TCF    2PJETS
R0434  2TORQUE VECTOR RECONSTRUCTION FOR THE P-AXIS
 0435   P+2JET   CA     TWO
 0436            TCF    RATE
 0437   P-2JET   CS     TWO
 0438   RATE     TS     NO.PJETS        STORE NO. OF P JETS FOR USE LATER.
 0439            CA     100MSPTQ        TORQUE FROM A 100 MS JET PULSE SET BY
 0440            EXTEND                   AOS TASK EVERY 2 SECONDS.
 0441            MP     1JACC
 0442            EXTEND
 0443            MP     NO.PJETS
 0444            LXCH   JETRATE         STORE JET RATE FOR OMEGAP COMPUTATION.
 0445            CS     TOFJTCHG
 0446            AD     +1.5CSP         USE 150 MS. TO TEST FOR A PAXIS SKIP.
 0447            EXTEND
 0448            BZMF   RESUME          TP GREATER THAN 150MS THEN DO NORMAL P.
 0449            CA     PSKIPADR        SET UP A P AXIS SKIP.
 0450            TS     PJUMPADR
 0451   JTLST    CCS    TIME6            TEST CURRENT STATE OF T6.
 0452            TCF    T6ONNOW          IF T6 IS + THEN CLOCK IS ON.
 0453            TCF    T6OFFNOW         IF T6 IS + ZERO THEN T6 MUST BE OFF
 0454            TCF    T6ONNOW            SINCE ALL DINC S LEAD TO MINUS ZERO.
 0455            TC     T6JOB           WE ARE IN THE UNIQUE STATE WHICH SAYS
 0456            TCF    JTLST             A T6 INTERRUPT IS WAITING.DO T6 JOB.
 0457   T6OFFNOW CAF    ZERO            *** PLACEHOLDER FOR REV 12 CHANGE ***
 0458            TS     TIME6           WE ARE HERE IF T6 CLOCK IS OFF.
 0459            CA     BIT15
 0460            EXTEND                 TURN CLOCK PULSE FOR T6 ON AND LOAD T6.
 0461            WOR    13
 0462            CA     JTSATCHG
 0463            TS     T6NEXTJT
 0464            CA     ZERO
 0465            XCH    ADDTLT6         SET UP NEXT T6 INTERRUPT AFTER THE
 0466            TS     T6NEXT            CURRENT ONE IS COMPLETE. ADDTLT6 MAY
R04661  *** PLACEHOLDER FOR REV 12 DELETION ***
 0467            CA     ZERO              BE ZERO IN WHICH CASE NO MORE T6.
 0468            XCH    ADDT6JTS
 0469            TS     T6NEXTJT +1
 0470            TCF    RESUME
 0471   T6ONNOW  CCS    T6NEXT          HERE IF T6 IS NOW ON. SEE IF T6NEXT IS
 0472            TCF    T6NXT=+           ZERO OR NOT.
 0473            CS     TOFJTCHG        T6NEXT IS NEVER NEGATIVE.
 0474            AD     TIME6           A CONTAINS T6 - TJET.
 0475            CCS    A               TEST SIGN OF A (SAVING THE DIFFERENCE).
 0476            AD     ONE
 0477            TCF    JTSFIRST        TJET IS LESS THAN T6.
 0478            NOOP                   IF DIFFERENCE IS NEGATIVE OR ZERO
 0479            AD     ONE               WE ADD 1 SO ZERO CAN NEVER BE IN LIST.
 0480            TS     T6NEXT
 0481            CA     JTSATCHG
 0482            TS     T6NEXTJT +1     BEGIN SETTING UP JETS IN THE JET LIST.
 0483            CA     ZERO
 0484            XCH    ADDTLT6
 0485            TS     T6NEXT +1
 0486            CA     ZERO
 0487            XCH    ADDT6JTS
 0488            TS     T6NEXTJT +2
 0489            TCF    RESUME
 0490   JTSFIRST TS     T6NEXT          HERE IF TJET IS LESS THAN T6.
 0491            CA     TOFJTCHG
 0492            TS     TIME6           SWITCH T6 AND TJET)
 0493            CA     JTSATCHG
 0494            XCH    T6NEXTJT        BEGIN SWITCHING JET WORDS IN JET LIST.
 0495            TS     T6NEXTJT +1
 0496            CS     ADDTLT6
 0497            EXTEND
 0498            BZF    RESUME          SEE IF AN ADDITIONAL (QR) JET TIME IS
 0499            AD     T6NEXT            REQUIRED.
R04991  *** PLACEHOLDER FOR REV 12 DELETION ***
R04992  *** PLACEHOLDER FOR REV 12 DELETION ***
R04993  *** PLACEHOLDER FOR REV 12 DELETION ***
 0500            CCS    A               IF AN ADDITIONAL T6 IS NEEDEN, COMPARE
 0501            AD     ONE               IT WITH THE CONTENTS OF T6NEXT.
 0502            TCF    +11
 0503            NOOP
 0504            AD     ONE
 0505            TS     T6NEXT +1
 0506            CA     ZERO
 0507            TS     ADDTLT6
 0508            XCH    ADDT6JTS
 0509            TS     T6NEXTJT +2
 0510            TCF    RESUME
 0511    +11     TS     T6NEXT +1
 0512            CA     ZERO
 0513            XCH    ADDTLT6
 0514            TS     T6NEXT
 0515            CA     ZERO
 0516            XCH    ADDT6JTS
 0517            XCH    T6NEXTJT +1
 0518            TS     T6NEXTJT +2
 0519            TCF    RESUME
 0520   T6NXT=+  CS     TOFJTCHG
 0521            AD     TIME6
 0522            AD     T6NEXT
 0523            CCS    A
 0524            AD     ONE
 0525            TCF    +7
 0526            NOOP
 0527            AD     ONE
 0528            TS     T6NEXT +1
 0529            CA     JTSATCHG
 0530            TS     T6NEXTJT +2
 0531            TCF    RESUME
 0532    +7      TS     L
 0533            CS     TOFJTCHG
 0534            AD     TIME6
 0535            CCS    A
 0536            AD     ONE
 0537            TCF    JTSB4T6
 0538            NOOP
 0539            AD     ONE
 0540            TS     T6NEXT
 0541            CA     L
 0542            TS     T6NEXT +1
 0543            CA     JTSATCHG
 0544            TCF    +7
 0545   JTSB4T6  XCH    T6NEXT
 0546            TS     T6NEXT +1
 0547            CA     TOFJTCHG
 0548            TS     TIME6
 0549            CA     JTSATCHG
 0550            XCH    T6NEXTJT
 0551    +7      XCH    T6NEXTJT +1
 0552            XCH    T6NEXTJT +2
 0553            TCF    RESUME
R0741  2T-JET LAW FIXED CONSTANTS
 0742   +1.5CSP  DEC    +0.01465
 0743   ONE-K    DEC    0.50000
 0745   MCOMPT   DEC    -0.00049        -5 MS. SCALED AS T6 (P-AXIS COMP TIME).
 0746   14-TJMIN DEC    11
 0747   NEGCSP1  DEC    -.00977
 0748   MS30P    OCTAL  37775
 0749   0.88975  DEC    0.88975
 0750   16/25    DEC    0.64000
 0751   -DRATEDB OCTAL  77555           -0.4 DEG/SEC SCALED AT PI/4 RADIANS/SEC
 0752   -D2JTLIM OCTAL  77001           -1.4 DEG/SEC SCALED AT PI/4
 0753   -A2JTLIM OCTAL  76447           -2.0 DEG/SEC SCALED AT PI/4
 0754   -ARATEDB OCTAL  77223           -1.0 DEG/SEC SCALED AT PI/4
 0755   25/32    DEC    .78125
 0756   -TJMINT6 DEC    -.00073
 0757   DAPLOW6  OCT    00077
 0758   4POSPJET OCTAL  125
 0759   4NEGPJET OCTAL  252
 0760   NEGPJET0 OCTAL  12
 0761   NEGPJET1 OCTAL  240
 0762   POSPJET0 OCTAL  120
 0763   POSPJET1 EQUALS FIVE
 0764   BITS8,9  OCTAL  00600
 0765   UPM      DEC    -.2             TEMPORARY ESTIMATE
 07651  PSKIPADR GENADR SKIPPAXS
 0766  4JETLWADR CADR   TJETLAW
 0767   SETIDLE  LXCH   BANKRUPT        FIRST T5RUPT AFTER FRESH START COMES
 0768            CAF    IDLERADR        HERE, DAPIDLER IS STARTED IN 1 SECOND.
 0769            TS     T5ADR
 0770            CAF    1SECRUPT
 0771            TS     TIME5
 0772  2         TCF    NOQRSM
 0773  21SECRUPT OCTAL  37634           1 SECOND SCALED AS TIME5 (100 PULSES)
 0774   GOIDLE   EXTEND                 COME HERE TO SHUT DOWN DAP
 0775            DCA    GOIDLADR
 0776  2         DXCH   T5ADR           SET UP RUPT TO GO IDLE AT DAPIDLER
 0777            CAF    ZERO            CLEAR ALL JETS
 0778            EXTEND
 0779            WRITE  5
 0780            EXTEND
 0781  2         WRITE  6
 0782            CS     BGIM23          STOP THE TRIM GIMBAL DRIVES
 0783            EXTEND
 0784  2         WAND   12
 0785  2         TCF    RESUME
 0786   BGIM23   OCTAL  07400
L      2DAPIDLER PROGRAM
R0001   THE DAPIDLER PROGRAM IS STARTED BY FRESH START AND RESTART.
 0002  9THE DAPIDLER PROGRAM IS DONE 10 TIMES
R0003   PER SECOND UNTIL THE ASTRONAUT DESIRES THE DAP TO WAKE UP, AND THE IMU A
 0004  9ND CDUS ARE READY FOR USE BY THE DAP.
R0005   THE NECESSARY INITIALIZATION OF THE DAP IS DONE BY THE DAPIDLER PROGRAM.
R0006  4ADDITIONAL WORK MUST BE DONE ON DAPIDLER IN THE FUTURE.
 0007   DAPIDLER LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0008            EXTEND
 0009  2         QXCH   QRUPT
 0010            CAF    BIT6
 0011            MASK   IMODES30
 0012            CCS    A
 0013  2         TCF    MOREIDLE
 0014            CAF    BIT4
 0015            AD     BIT5
 0016            EXTEND
 0017            RAND   12
 0018            CCS    A
 0019  2         TCF    MOREIDLE
 0020            CAF    BIT10           BIT10 OF 30 IS PNGCS CONTROL OF S/C
 0021            EXTEND
 0022            RAND   30              BITS IN 30 ARE INVERTED
 0023            CCS    A
 0024  2         TCF    MOREIDLE
 0025            CAF    BIT13           ATTITUDE HOLD BIT. INVERTED.
 0026            EXTEND
 0027            RAND   31
 0028            EXTEND
 0029  2         BZF    STARTDAP
 0030            CA     BIT14
 0031            EXTEND
 0032            RAND   31
 0033            CCS    A
 0034  2         TCF    MOREIDLE
 0035   STARTDAP CAF    ZERO
 0036            TS     TIME6
 0037            TS     TIMEOFFQ
 0038            TS     TIMEOFFR
 0039            TS     LASTPER
 0040            TS     LASTQER
 0041            TS     LASTRER
 0042            TS     PERROR          INITIALIZE TEMPS FOR ATT ERROR DISPLAY
 0043            TS     QERROR
 0044            TS     RERROR
 0045            TS     T6NEXT
 0046            TS     T6NEXT +1
 0047            TS     DELAYCTR
 0048            TS     JETRATE
 0049            TS     JETRATEQ
 0050            TS     JETRATER
 00501           TS     AOSQTERM
 00502           TS     AOSRTERM
 0051            TS     CH5MASK
 0052            TS     CH6MASK
 0053            TS     DELTAP
 0054            TS     OMEGAP
 0055            TS     OMEGAQ
 0056            TS     OMEGAR
 0057            TS     OMEGAPD
 0058            TS     OMEGAQD
 0059            TS     OMEGARD
 0060            TS     TQR
 0061            TS     NO.QJETS
 0062            TS     NO.RJETS
 0065            CAF    0.62170
 0066            TS     4JETTORK
 0067            CAF    .68387          2200 FT LBS. SCALED AT 2(10) X PI.
 0068            TS     JETTORK4        QR AXIS JET TORQUE FOR 4 JETS.
 0069            CA     CDUX
 0070            TS     OLDXFORP
 0071            TS     CDUXD
 0072            CA     CDUY
 0073            TS     OLDYFORP
 0074            TS     OLDYFORQ
 0075            TS     CDUYD
 0076            CA     CDUZ
 0077            TS     OLDZFORQ
 0078            TS     CDUZD
 0079            CAF    BIT6            ENABLE CDU ERR CNTR FOR ATT ERROR DISPLA
 0080            EXTEND
 0081  2         WOR    12
 008102          CA     VISFZADR
 008104          TS     PJUMPADR
 0082            CAF    ZERO            *** PLACEHOLDER FOR REV 12 CHANGE ***
 0083            TS     L               *** PLACEHOLDER FOR REV 12 CHANGE ***
 0125            CA     10AT16
 0126            TS     WFORP
 0127            CA     6.6AT16
 0128  2         TS     WFORQR
 0129            CAF    ONE
 0130            TC     WAITLIST
 0131            2CADR  IXXTASK
 0132            CA     ONE
 0133            TC     WAITLIST
 0134            2CADR  IYYTASK
 0135            CA     ONE
 01351           TC     WAITLIST
 01352           2CADR  IZZTASK
R0136   THIS SECTION COMPUTES THE RATE OF CHANGE OF ACCELERATION DUE TO THE
R0137     ROTATION OF THE GIMBAL ENGINE. THE EQUATION IMPLEMENTED IN BOTH THE
R0138     Y-X PLANE AND THE Z-X PLANE IS -- D(ALPHA)/DT = T L/I * D(DELTA)/DT
R0139     WHERE ----
R0140               T = ENGINE THRUST COMMAND
R0141               L = PIVOT TO CG DISTANCE OF THE GIMBAL ENGINE
R0142               I = INERTIA
R0143  2            DELTA = GIMBAL ENGINE ANGLE MEASURED FROM THE X AXIS.
 0144            CAF    DELTADOT        0.2 DEG/SEC SCALED AT PI/64
 0145            EXTEND
 0146            MP     L,PVT-CG        GIMBAL PIVOT TO C.G. DISTANCE ,SCALE=8.
 0147            EXTEND
 0148            MP     THRSTCMD        COMMANDED THRUST SCALED AT 2(14) =16384.
 0149            DXCH   ITEMP1
 0150            EXTEND
 0151            DCA    ITEMP1
 0152            EXTEND
 0153            DV     IZZ             AT 2(18)
 0154            TS     ACCDOTR         AT PI/2(7)
 0155            DXCH   ITEMP1
 0156            EXTEND
 0157            DV     IYY             AT 2(18)
 0158  2         TS     ACCDOTQ         AT PI/2(7)
 0159            EXTEND                 .3ACCDOTQ AT PI/2(8)
 0160            MP     DGBF
 0161            TS     KQ
 0162            EXTEND
 0163            SQUARE
 0164  2         TS     KQ2             KQ(2)
 0165            CAE    ACCDOTR         .3ACCDOTR AT PI/2(8)
 0166            EXTEND
 0167            MP     DGBF
 0168            TS     KR
 0169            EXTEND
 0170            SQUARE
 0171  2         TS     KR2
 0179            CAF    .5ACCMIN
 0180            TS     .5ACCMNQ        INITIALIZE FOR DESCENT
 0181            TS     .5ACCMNR
 0182            TS     .5ACCMNU
 0183  2         TS     .5ACCMNV
 0184  2         TS     .5ACCMNE        (QUIRK FIX)
 0185            CAF    DBMNMP          SET UP DESCENT MINIMUM IMPULSE DEADBANDS
 0186            TS     DBMINIMP        (DUPLICATES MONITOR FUNCTION)
 0187  2         TS     MINIMPDB
 0188            EXTEND                 SET UP P-AXIS TO GO TO DUMMYFIL
 0189            DCA    DF2CADR
 0190  2         DXCH   PFILTADR
 0191            EXTEND
 0192            DCA    PAXADIDL
 0193            DXCH   T5ADR
 0194   MOREIDLE CAF    MS100
 0195            TS     TIME5
 0196            TCF    RESUME
 0197   IDLERADR 2CADR  DAPIDLER
 0198  4GOIDLADR EQUALS IDLERADR
 019802 VISFZADR GENADR CHKVISFZ
 0199   WCHANGER CA     0.31250         CHANGE WFORP AND WFORQR
 0200            TS     WFORP           TO REFLECT 100 MS INTERVAL
 0201            TS     WFORQR          WHICH CAUSES SMOOTHING IN RATE FILTER.
 0202            TCF    TASKOVER        BETWEEN 1ST QR AND 2ND P AFTER STARTDAP
 0203   .707P    DEC    .70711          SQUARE ROOT OF 1/2
 0204   PAXADIDL 2CADR  PAXIS
 0205   DF2CADR  2CADR  DUMMYFIL
 0206   MS100    OCTAL  37766
 0207   0.00167  DEC    0.00167
 0208   0.62170  DEC    0.62170
 0209   180MS    OCTAL  00022           18 BITS
 0212   .68387   DEC    0.68387
 0213   10AT16   DEC    0.62500
 0214   6.6AT16  DEC    0.4125          *** IS THIS NEEDED
 0215  20.31250  DEC    0.31250
 0216   DELTADOT DEC    0.07111         0.2 DEG/SEC SCALED AT PI/64
 0217   DGBF     DEC    0.6
 0218   OCT70000 OCT    70000
 0219   .5ACCMIN DEC    0.30680
 0220   DBMNMP   DEC    0.00167         .3 DEGREES SCALED AT PI RADIANS
 0221   PLACHOLD OCT    0               *** PLACEHOLDER FOR REV 12 CHANGE ***
 0222   ENDDAP23 EQUALS
L      2Q,R-AXES REACTION CONTROL SYSTEM AUTOPILOT
 0001            BANK   24
 0002  2         EBANK= DT
R0003   THE FOLLOWING T5RUPT ENTRY BEGINS THE PROGRAM WHICH CONTROLS THE Q,R-AXI
 0004  9S ACTION OF THE LEM USING THE RCS JETS.
R0005   THE NOMINAL TIME BETWEEN THE Q,R-AXIS RUPTS IS 100 MS (UNLESS THE TRIM G
 0006  9IMBAL CONTROL SYSTEM IS USED, IN WHICH
R0007  2CASE THIS PROGRAM IS IDLE).
 0008   NULLFILT 2CADR  FILDUMMY
 0009   QRAXIS   CAF    MS30QR          RESET TIME IMMEDIATELY: DT = 30 MS
 0010  2         TS     TIME5
 0011            LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0012            EXTEND
 0013  2         QXCH   QRUPT
R0014   SET UP A DUMMY KALMAN FILTER T5RUPT.  (THIS MAY BE RESET TO THE KALMAN F
 0015  9ILTER INITIALIZATION PASS, IF THE TRIM
R0016  2GIMBAL CONTROL SYSTEM SHOULD BE USED.)
 0017            EXTEND
 0018            DCA    NULLFILT
 0019  2         DXCH   T5ADR
R0020  2CALCULATE LEM BODY RATES FOR Q AND R AXES:
R0021   THIS COMPUTATION IS VALID FOR BOTH ASCENT AND DESCENT SINCE THE OFFSET A
 0022  9CCELERATION TERM IS INCLUDED ALWAYS,
R0023  2BUT HAS VALUE ZERO IN DESCENT, AND SINCE THE WEIGHTING FACTORS ARE IN ER
 0024  9ASABLE AND DISTINCT.
R0025  2FIRST, CONSTRUCT Y AND Z CDU INCREMENTS:
 0026            CAE    CDUY            2'S COMPLEMENT MEASUREMENT SCALED AT PI
 0027            TS     L               (SAVE FOR UPDATING OF OLDYFORQ)
 0028            EXTEND                 FORM INCREMENT IN CDUY FOR LAST 100 MS
 0029            MSU    OLDYFORQ        (100 MS OLD CDUY SAVED FROM LAST PASS)
 0030            LXCH   OLDYFORQ        UPDATE OLDYFORQ WITH NEW CDUY VALUE
 0031            EXTEND                 RESCALE DELTA CDUY FROM PI RADIANS TO
 0032            MP     BIT7            PI/2(6) RADIANS BY MULTIPLYING BY 64
 0033            LXCH   ITEMP1          SAVE 1'S COMPLEMENT VALUE TEMPORARILY
 0034            CAE    CDUZ            2'S COMPLEMENT MEASUREMENT SCALED AT PI
 0035            TS     L               (SAVE FOR UPDATING OF OLDZFORQ)
 0036            EXTEND                 FORM INCREMENT IN CDUZ FOR LAST 100 MS
 0037            MSU    OLDZFORQ        (100 MS OLD CDUZ SAVED FROM LAST PASS)
 0038            LXCH   OLDZFORQ        UPDATE OLDZFORQ WITH NEW CDUZ VALUE
 0039            EXTEND                 RESCALE DELTA CDUZ FROM PI RADIANS TO
 0040            MP     BIT7            PI/2(6) RADIANS BY MULTIPLYING BY 64
 0041            LXCH   ITEMP2          SAVE 1'S COMPLEMENT VALUE TEMPORARILY
P0042  2SECOND, TRANSFORM CDU INCREMENTS TO BODY-ANGLE INCREMENTS:
 0043            CAE    M31             MATRIX*VECTOR(WITH X COMPONENT ZERO)
 0044            EXTEND
 0045            MP     ITEMP1          M31 * ITEMP1 = M31 * DELTA CDUY
 0046            TS     ITEMP3
 0047            CAE    M32             M32 * ITEMP2 = M32 * DELTA CDUZ
 0048            EXTEND
 0049            MP     ITEMP2          DELTAR = M31*(DEL CDUY) + M32*(DEL CDUZ)
 0050  2         ADS    ITEMP3          R-BODY-ANGLE INCREMENT SCALED AT PI/2(6)
 0051            CAE    M21             MATRIX*VECTOR(WITH X COMPONENT ZERO)
 0052            EXTEND                 CLOBBERS ITEMP2=DEL CDUZ, FOR EFFICIENCY
 0053            MP     ITEMP1          M21 * ITEMP1 = M21 * DELTA CDUY
 0054            XCH    ITEMP2          M22 * ITEMP2 = M22 * DELTA CDUZ
 0055            EXTEND
 0056            MP     M22             DELTAQ = M21*(DEL CDUY) + M22*(DEL CDUZ)
 0057  2         ADS    ITEMP2          Q-BODY-ANGLE INCREMENT SCALED AT PI/2(6)
R0058  2FINALLY, DERIVE Q AND R BODY ANGULAR RATES:
 0059            EXTEND                 WFORQR IS K/(NOMINAL DT) SCALED AT 16
 0060            MP     WFORQR          FORM WEIGHTED VALUE OF MEASURED DATA
 0061            XCH    OMEGAQ          SAVE AND BEGIN TO WEIGHT VALUE OF OLD W
 0062            EXTEND                 (1-K) IS SCALED AT 1 FOR EFFICIENT CALC
 0063            MP     (1-K)QR         (K CHANGES EVERY 2 SECS IN ASCENT)
 0064            AD     JETRATEQ        WEIGHTED TERM DUE TO JET ACCELERATION
 0065            AD     AOSQTERM        TERM DUE TO ASCENT OFFSET ACCELERATION
 0066  2         ADS    OMEGAQ          TOTAL RATE ESTIMATE SCALED AT PI/4
 0067            CAE    ITEMP3          GET DELTAR
 0068            EXTEND                 WFORQR IS K/(NOMINAL DT) SCALED AT 16
 0069            MP     WFORQR          FORM WEIGHTED VALUE OF MEASURED DATA
 0070            XCH    OMEGAR          SAVE AND BEGIN TO WEIGHT VALUE OF OLD W
 0071            EXTEND                 (1-K) IS SCALED AT 1 FOR EFFICIENT CALC
 0072            MP     (1-K)QR         (K CHANGES EVERY 2 SECS IN ASCENT)
 0073            AD     JETRATER        WEIGHTED TERM DUE TO JET ACCELERATION
 0074            AD     AOSRTERM        TERM DUE TO ASCENT OFFSET ACCELERATION
 0075  2         ADS    OMEGAR          TOTAL RATE ESTIMATE SCALED AT PI/4
 007502          TC     QJUMPADR
 007504 SKIPQRAX CA     NORMQADR
 007508          TS     QJUMPADR
 007510          CA     ZERO
 007512          TS     JETRATEQ
 007514          TS     JETRATER
 007516          CA     TQR
 007518          AD     NEGCSP2
 007520          CCS    A
 007522          TC     QRTORQUE
 007524          TCF    RESUME
 007526          TC     QRTORQUE
 007528          CS     JETRATEQ
 007530          ADS    OMEGAQ
 007532          CS     JETRATER
 007534          ADS    OMEGAR
 007536          TCF    RESUME
 007538 QRTORQUE AD     ONE
 007540          EXTEND
 007542          MP     BIT5
 007544          CA     L
 007546          EXTEND
 007548          MP     16/25QR
 007550          TS     TQR
 007552          EXTEND
 007554          MP     NO.QJETS
 007556          CAE    L
 007558          EXTEND
 007560          MP     1JACCQ
 007562          TS     JETRATEQ
 007564          ADS    SUMRATEQ
 007566          CAE    TQR
 007568          EXTEND
 007570          MP     NO.RJETS
 007572          CAE    L
 007574          EXTEND
 007576          MP     1JACCR
 007578          TS     JETRATER
 007580          ADS    SUMRATER
 007582          CAE    WFORQR
 007584          EXTEND
 007586          MP     TQR
 007588          AD     (1-K)/8
 007590          EXTEND
 007592          MP     BIT4
 007594          LXCH   ITEMP1
 007596          CAE    JETRATEQ
 007598          EXTEND
 007600          MP     ITEMP1
 007602          TS     JETRATEQ
 007604          CAE    JETRATER
 007606          EXTEND
 007608          MP     ITEMP1
 007610          TS     JETRATER
 007612          CA     ZERO
 007614          TS     NO.QJETS
 007616          TS     NO.RJETS
 007618          TC     Q
 007620 NORMQADR GENADR NORMALQ
 007630 NORMALQ  CAF    BIT13           CHECKING ATTITUDE HOLD BIT
 0077            EXTEND
 0078            RAND   31              BITS INVERTED
 0079            EXTEND
 0080            BZF    CHKBIT10
 0081            CAF    BIT14           ATT HOLD BIT NOT PRESENT. CHECK FOR AUTO
 0082            EXTEND
 0083            RAND   31
 0084            EXTEND
 0085            BZF    ATTSTEER        AUTOMATIC STEERING, CHECK FOR RATE HOLD
 0086            EXTEND                 IF MODE SELECT SW OFF DO DAPIDLER NEXT
 0087            DCA    IDLEADRQ
 0088            DXCH   T5ADR
 0089  2         TCF    RESUME
 0090   IDLEADRQ 2CADR  DAPIDLER
 0091   CHKBIT10 CAF    BIT10           BIT10=1 FOR MIN IMP USE OF RHC
 0092            MASK   DAPBOOLS
 0093            EXTEND
 0094  2         BZF    CHEKSTIK        IN ATT-HOLD/RATE-COMMAND IF BIT10=0
 0095            CAE    DELAYCTR        SET TO 2 BY RUPT 10
 0096            EXTEND
 0097  2         BZF    XTRANS
 0098            CA     MINTADR
 0099  2         TS     TJETADR
 0100            CA     BIT1
 0101            EXTEND
 0102            RAND   31
 0103            EXTEND
 0104  2         BZF    2JETS+Q
 0105            CA     BIT2
 0106            EXTEND
 0107            RAND   31
 0108            EXTEND
 0109  2         BZF    2JETS-Q
 0110            CA     BIT5
 0111            EXTEND
 0112            RAND   31
 0113            EXTEND
 0114  2         BZF    2JETS+R
 0115            CA     BIT6
 0116            EXTEND
 0117            RAND   31
 0118            EXTEND
 0119  2         BZF    2JETS-R
 0120  2         TCF    XTRANS
 0121   MINTJET  CAF    +T6TJMIN
 0122            TS     TQR
 0123            CA     ZERO
 0124            TS     DELAYCTR
 0125  2         TCF    TORQUEV
 0126   CHEKSTIK CAF    BIT15           OUT-OF-DETENT BIT
 0127            EXTEND
 0128  2         RAND   31              BITS INVERTED
 0129            EXTEND
 0130            BZF    RHCACTIV        BRANCH IF OUT OF DETENT
 0131            CA     BIT1            OUR RATE COMMAND BIT
 0132  2         MASK   DAPBOOLS
 0133            EXTEND
 0134            BZMF   ATTSTEER        AUTOMATIC STEERING, CHECK FOR RATE HOLD
R0135  2WE WERE IN RATE COMMAND AND RATES MUST BE MADE SMALLER
R0136    ARE RATES SMALL ENOUGH NOW
 0137            CA     OMEGAP
 0138            EXTEND
 0139            SQUARE
 0140  2         DXCH   ITEMP1
 0141            CA     OMEGAQ
 0142            EXTEND
 0143            SQUARE
 0144  2         DAS    ITEMP1
 0145            CA     OMEGAR
 0146            EXTEND
 0147            SQUARE
 0148  2         DAS    ITEMP1
R0149   WE NOW HAVE SQUARED MAGNITUDE OF RATE VECTOR IN ITEMP1
 0150            CS     16/32400        1DEG/SEC SCALED AT PI.PI/16
 0151            AD     ITEMP1
 0152            EXTEND
 0153  2         BZMF   RATESMAL
R0154  2         THE RATE IS NOT SMALL ENOUGH YET.
 0155            CA     OMEGAQ
 0156            TS     QRATEDIF
 0157            CA     OMEGAR
 0158            TS     RRATEDIF
 0159  2         TCF    OBEYQRRC
 0160   RATESMAL CS     BIT1
 0161            MASK   DAPBOOLS        RATE COMMAND BIT SET TO ZERO
 0162  2         TS     DAPBOOLS
 0163            CAE    CDUX
 0164            TS     CDUXD
 0165            CAE    CDUY
 0166            TS     CDUYD
 0167            CAE    CDUZ
 0168  2         TS     CDUZD
 0169   RHCACTIV CAF    BIT1
 0170            MASK   DAPBOOLS
 0171            EXTEND
 0172            BZF    XTRANS          LET P AXIS SET THE RATE COMMAND BIT
R0173   COMPUTE RATE ERRORS
 0174            CAE    Q-RHCCTR
 0175            EXTEND
 0176            MP     BIT9
 0177            CA     -.88975
 0178            EXTEND
 0179            MP     L               -Q RATE COMMAND SCALED AT PI/4
 0180            AD     OMEGAQ
 0181  2         TS     QRATEDIF
 0182            CAE    R-RHCCTR
 0183            EXTEND
 0184            MP     BIT9
 0185            CA     -.88975
 0186            EXTEND
 0187            MP     L               -R RATE COMMAND SCALED AT PI/4.
 0188            AD     OMEGAR
 0189  2         TS     RRATEDIF
R0190   ZERO,ENABLE,AND START COUNTERS
 0191            CAF    ZERO
 0192            TS     P-RHCCTR
 0193            TS     Q-RHCCTR
 0194            TS     R-RHCCTR
 0195            CAF    BIT8,9
 0196            EXTEND
 0197  2         WOR    13
 0198   OBEYQRRC CA     RTJETADR
 0199  2         TS     TJETADR
 0200            CCS    QRATEDIF
 0201            TCF    POSQEROR
 0202            TCF    NOQJETS
 0203  2         TCF    NEGQEROR
 0204   NOQJETS  CCS    RRATEDIF        CHECK SIGN OF RATE ERROR AND GET ABVAL
 0205            TCF    R+,CHKDB
 0206            TCF    XTRANS
 0207            TCF    R-,CHKDB
 0208  2         TCF    XTRANS
 0209   NEGQEROR AD     -RATEDB
 0210            EXTEND
 0211  2         BZMF   NOQJETS
 0212            CCS    RRATEDIF
 0213            TCF    R+Q-CHKR
 0214            TCF    Q-NORJTS
 0215  2         TCF    R-Q-CHKR
 0216   Q-NORJTS CS     QRATEDIF
 0217            TS     RATEDIF
 0218            AD     -2JETLIM
 0219            EXTEND
 0220            BZMF   2JETS+Q
 0221  2         TCF    4JETS+Q
 0222   R+Q-CHKR AD     -RATEDB
 0223            EXTEND
 0224            BZMF   Q-NORJTS
 0225            TC     EDOTVGEN
 0226  2         TCF    2-V.RATE
 0227   R-Q-CHKR AD     -RATEDB
 0228            EXTEND
 0229            BZMF   Q-NORJTS
 0230            TC     EDOTUGEN
 0231            EXTEND
 0232            SU     RRATEDIF
 0233  2         TCF    2+U.RATE
 0234   POSQEROR AD     -RATEDB
 0235            EXTEND
 0236  2         BZMF   NOQJETS
 0237            CCS    RRATEDIF
 0238            TCF    R+Q+CHKR
 0239            TCF    Q+NORJTS
 0240  2         TCF    R-Q+CHKR
 0241   Q+NORJTS CA     QRATEDIF
 0242            TS     RATEDIF
 0243            AD     -2JETLIM
 0244            EXTEND
 0245            BZMF   2JETS-Q
 0246  2         TCF    4JETS-Q
 0247   R+Q+CHKR AD     -RATEDB
 0248            EXTEND
 0249            BZMF   Q+NORJTS
 0250            TC     EDOTUGEN
 0251  2         TCF    2-U.RATE
 0252   R-Q+CHKR AD     -RATEDB
 0253            EXTEND
 0254            BZMF   Q+NORJTS
 0255            TC     EDOTVGEN
 0256  2         TCF    2+V.RATE
 0257   R+,CHKDB AD     -RATEDB
 0258            EXTEND
 0259            BZMF   XTRANS
 0260            CA     RRATEDIF
 0261            TS     RATEDIF
 0262            AD     -2JETLIM
 0263            EXTEND
 0264            BZMF   2JETS-R
 0265  2         TCF    4JETS-R
 0266   R-,CHKDB AD     -RATEDB
 0267            EXTEND
 0268            BZMF   XTRANS
 0269            CS     RRATEDIF
 0270            TS     RATEDIF
 0271            AD     -2JETLIM
 0272            EXTEND
 0273            BZMF   2JETS+R
 0274  2         TCF    4JETS+R
 0275   RTJETIME CCS    RATEDIF         SCALED AT PI/4 RADIANS/SECOND
 0276            AD     ONE
 0277            TCF     +2
 0278            AD     ONE             ABS(RATEDIF)
 0279            EXTEND
 0280            MP     1/NJETAC        SCALED AT 2(8)/PI SECOND(2)/RADIANS
 0281            EXTEND
 0282            MP     BIT4            SCALED AT 2(3) SECONDS
 0283            CAE    L
 0284            EXTEND
 0285            MP     25/32.QR        TJET NOW PROPERLY SCALED IN A
 0286            TS     TQR             AT 2(4)16/25 SECONDS
 0287  4         TCF    TORQUEV
R0288  2TRANSLATION WITHOUT ROTATION IS ACCOMPLISHED IN XTRANS SECTION
 0289   XTRANS   CA     ZERO
 0290            TS     ADDTLT6
 0291            TS     ADDT6JTS
 0292            CA     BIT6
 0293  2         MASK   DAPBOOLS        CHECKING THE ULLAGE BIT
 0294            EXTEND
 0295            BZF    +2              *** PLACEHOLDER FOR REV 12 CHANGE ***
 0296            CA     ALL+XJTS        ULLAGE JETS
 0297   WRITEON  TC     WRITEQR
 0298            TCF    RESUME
 0301            CAF    BIT7            *** PLACEHOLDER FOR REV 12 CHANGE ***
 0302            EXTEND
 0303            RAND   31
 0304            EXTEND
 0305  2         BZF    +XTRANS
 0306            CA     BIT8            -X TRANS BIT.INVERTED
 0307            EXTEND
 0308            RAND   31
 0309            EXTEND
 0310            BZF    -XTRANS
 0311   NOTORQUE CA     ZERO
 0312            TCF    WRITEON
 0315   +XTRANS  CAF    2,10-OUT        CHECK FOR FAILURE OF 2 OR 10
 0316            EXTEND
 0317            RXOR   32
 0318            EXTEND
 0319            BZF     +3             2 AND 10 GOOD
 0320            CA     +X,B            SINCE 2 OR 10 FAILED, USE 6 AND 14 OF B
 0321            TCF    WRITEON
 0322    +3      CA     +X,A            2 AND 10 SYSTEM A
 0323            TCF    WRITEON
 0324   -XTRANS  CAF    1,9-OUT         CHECK FOR FAILURE OF 1 OR 9
 0325            EXTEND
 0326            RXOR   32
 0327            EXTEND
 0328            BZF     +3             1 AND 9 GOOD
 0329            CA     -X,A            SINCE 1 OR 9 FAILED, USE 5 AND 13 OF A
 0330            TCF    WRITEON
 0331    +3      CA     -X,B            1 AND 9 SYSTEM B
 0332            TCF    WRITEON
P0333   DO NECESSARY PARTS OF Q,R-AXES TORQUE VECTOR RECONSTRUCTION HERE AND NOW
 0334  9.  FOR OTHER PARTS WAIT UNTIL THE NEXT
R0335  2P-AXIS RCS DAP T5RUPT.
 0336   TORQUEV  CS     TQR             CALCULATED Q,R JET TIME (AS IN TIME6)
 0337            AD     +T6TJMIN
 0338            EXTEND                   CORRECT BRANCH.
 0339            BZMF   TQRGTTMI        BRANCH FOR TQR = OR GREATER THAN MINIMP.
 0340            CA     ZERO
 0341            TS     TOFJTCHG        SINCE TQR LESS THAN A MINIMUM IMPULSE,
 0342            TS     JETRATEQ          ZERO ALL OF THESE REGISTERS AND GO TO
 0343            TS     JETRATER          JET LIST.
 0344            CA     JTSATCHG
 0345            TC     WRITEQR
 0346            TCF    RESUME
 034602 TQRGTTMI CA     TQR
 034603          TS     TOFJTCHG
 034604          AD     -1.5CSP
 034606          EXTEND
 034608          BZMF   DOQRSKIP
 034610          CA     1JACCQ
 034612          EXTEND
 034614          MP     NO.QJETS
 034615          CA     L
 034616          TS     ITEMP1
 034618          EXTEND
 034620          MP     QR.1STOQ
 034622          TS     JETRATEQ
 034624          CA     ITEMP1
 034626          EXTEND
 034628          MP     0.1AT1
 034630          ADS    SUMRATEQ
 0347            CA     1JACCR
 0348            EXTEND
 0349            MP     NO.RJETS
 0350            CA     L
 0351            TS     ITEMP1
 0352            EXTEND
 0353            MP     QR.1STOQ
 0354            TS     JETRATER
 0355            CA     ITEMP1
 0356            EXTEND
 0357            MP     0.1AT1
 0358            ADS    SUMRATER
 03581           CA     JTSONNOW
 0359            TCF    WRITEON
 0360   SKIPQRAD GENADR SKIPQRAX
 036002 0.1AT1   DEC    +0.10000
 036004 DOQRSKIP CA     SKIPQRAD
 036008          TS     QJUMPADR
R0361   CHANGE JET ON AND OFF BITS TO ACCOUNT FOR THE PRESENT STATE OF THE
R0362     CHANNEL. THE CHANGES ACCOUNT FOR PURE ROTATION ONLY- NOT TRANSLATION.
 0363            CA     JTSONNOW        = JETS WHICH ARE TO GO ON NOW.
 0364            EXTEND
 0365            RAND   5               MASK THE CHANNEL WITH THE DESIRED STATE.
 0366            EXTEND
 0367            BZF    NOQRON          A IS ZERO IF NO JETS TO GO ON ARE ON.
 0368            AD     BIT15           MAKE DIFFERENCE CORRESPOND TO A QR JET.
 0369            EXTEND
 0370            SU     JTSONNOW        RESULT IS COMPLEMENT OF JET BITS WHICH
 0371            TS     L                 ARE TO BE ON FOR 6.5MS MORE THAN CALC.
 0372            EXTEND
 0373            BZF    JTSAREON        A=0,THUS ALL JETS TO GO ON ARE NOW ON.
 0374   TRSLTMN2 CAE    JTSATCHG
 0375            MASK   POSMAX          REMOVE BIT15 FROM JTSATCHG.
 0376            EXTEND
 0377            BZF    NOTRANS         IF JTSATCHG = 0 THEN NO TRANSLATION NOW.
 0382            CA     14-TQRMN
 0383            ADS    TOFJTCHG        INSURE T GREATER THAN 14 MS.
 0384            TCF    TOJTLST
 0388   NOTRANS  CS     L
 0389            AD     BIT15           MAKE JET BITS CORRESPOND TO QR AXIS.
 0390            XCH    JTSATCHG        JTSONNOW - L = JETS ON AT TOFJTCHG.
 0391            TS     ADDT6JTS        JTS ON AT TOFJTCHG +ONDELAY.
 0392            CA     14-TQRMN
 0393            TS     ADDTLT6
 0394            TCF    TOJTLST
 0395   NOQRON   CA     14-TQRMN
 0396            ADS    TOFJTCHG
 0397            CA     ZERO
 0398            TS     ADDTLT6
 0399            TCF    TOJTLST
 0408   JTSAREON CA     MCOMPTQR
 0409            ADS    TOFJTCHG
 0410            CA     ZERO
 0411            TS     ADDTLT6
 0412   TOJTLST  CA     JTSONNOW
 04121           TC     WRITEQR
 04122           EXTEND
 04123           DCA    JTLSTADR
 04124           DTCB
 04126  -1.5CSP  DEC    -1              *** PLACEHOLDER FOR REV 12 CHANGE ***
 0413   +T6TJMIN DEC    +.00073
 0414   25/32.QR DEC    0.78125
 0415   MS20QR   OCTAL  37776
 0416   MS30QR   OCTAL  37775
 0417   MS50QR   OCTAL  37773
 0418   16/32400 DEC    0.00049
 0419   BIT8,9   OCTAL  00600
 0420   MCOMPTQR OCTAL  77765           -10 MS COMPUTATION TIME
 0421   14-TQRMN DEC    11
 0422   MINTADR  GENADR MINTJET
 0423   -.88975  DEC    -.88975
 0424   (1-K),QR DEC    0.50000         K = 1/2
 0425   (1-KQ)/8 DEC    0.06250
 0426   -90MS    DEC    -.00879
 0427   +90MS    DEC    0.00879
 0428   NEGCSP2  DEC    -.00977
 0429   16/25QR  DEC    0.64000
 0430   ALL+XJTS OCTAL  40252
 0431   2,10-OUT OCTAL  00201
 0432   +X,A     OCTAL  40042
 0433   +X,B     OCTAL  40210
 0434   1,9-OUT  OCTAL  00104
 0435   -X,A     OCTAL  40104
 0436   -X,B     OCTAL  40021
 0437   JTLSTADR 2CADR  JTLST
 0438   RTJETADR GENADR RTJETIME
P0439  2Q,R-AXES ATTITUDE STEERING CALCULATIONS:
R0440   (EXECUTED WHEN LGC IS IN AUTOMATIC SCSMODE OR IF SCSMODE IS ATTITUDE HOL
 0441  9D AND THE ROTATIONAL HAND CONTROLLER IS
R0442  2NEITHER OUT OF DETENT NOR IS THE RATE COMMAND BIT SET IN DAPBOOLS)
R0443   IMMEDIATELY AFTER CALCULATING THE ATTITUDE ERRORS, THE FOLLOWING TESTS A
 0444  9RE MADE TO DETERMINE WHETHER THE DESCENT
R0445  2ENGINE TRIM GIMBAL SHOULD BE USED TO CONTROL THE LEM ATTITUDE RATHER THA
 0446  9N THE RCS JETS:
R0447            1) IS THE TRIM GIMBAL FUNCTIONALLY OPERATIVE?
R0448            2) ARE THE Q,R-AXES RCS JETS OFF?
R0449            3) ARE BOTH TRIM GIMBAL DRIVES OFF?
R0450  2         4) IS THE LEM RATE LESS THAN .5 DEG/SEC ABOUT BOTH AXES?
 0451   GOTOGTS  CAF    INITFILT        ERRORS NOW CONTROLLABLE BY TRIM GIMBAL
 0452            TS     T5ADR           SET T5RUPT TO GO TO FILTER INITIALIZING
 0453  2         TCF    RESUME          PROGRAM
 0454   BGIM24   OCTAL  07400
 0455   DESCADR  GENADR TJET-LAW        RETURN ADDRESS FOR JET SELECT LOGIC
 0456  2INITFILT GENADR FILTINIT        ADDRESS OF FILTER INITIALIZATION RUPT
R0457   "ATTSTEER" IS THE NOMINAL ENTRY POINT FOR REACTION CONTROL SYSTEM ATTITU
 0458  9DE STEERING:
R0459   BEGIN ATTSTEER BY CHECKING IF RATE HOLD MODE(CURRENTLY USED ONLY AT SIVB
R0460   -LEM SEPARATION-206 MISSION PHASE 6) IS REQUESTED(BIT 14 OF DAPBOOLS ON)
R0461   IF BIT 14 IS OFF, BRANCH TO QERRCALC DIRECTLY AND BEGIN AUTOMATIC
R0462   STEERING.  IF BIT 14 IS ON, TEST BIT 3 OF DAPBOOLS TO SEE IF THE DESIRED
R0463   RATE HAS BEEN SAVED YET.  IF IT IS ON, THIS IS NOT THE FIRST PASS AND
R0464   THE RATE HAS BEEN SAVED.  GO DIRECTLY TO QERRCALC FOR AUTOMATIC STEERING
R0465   IF THE BIT IS OFF, THE RATE MUST BE SAVED.  TRANSFER TO SAVERATE(BANK25)
R0466  2AND RETURN AFTER FIRST PASS TO RESUME AND DAPIDLER.
R0467   IN ORDER TO USE RATE HOLD, THE MISSION PROGRAMMER MUST SET BIT 14 OF
R0468   DAPBOOLS ON AND SET BIT 3 OF DAPBOOLS TO ZERO.  UPON RETURNING FROM THE
R0469   FIRST PASS AT LEAST THROUGH RATE HOLD, THE MISSION PROGRAMMER MUST RESET
R0470   BIT 3 TO ITS PREVIOUS VALUE IF THIS IS NOT 1, BECAUSE SAVERATE SETS BIT3
R0471  2TO 1 FOR ALL PASSES AFTER THE FIRST IN ORDER NOT TO SAVE THE RATE AGAIN.
R0472   IN ADDITION TO NON-RATE HOLD MODE AND NON-FIRST PASS RATE HOLD MODE
R0473   EXITS TO QERRCALC, THE FIRST PASS EXITS TO RESUME, IE. OUT OF INTERRUPT
R0474  2AND BACK TO DAPIDLER TO AWAIT THE NEXT CALL TO DAP.
R0475  2RATE HOLD PRODUCES THE FOLLOWING OUTPUT IN ERASABLE --
R0476  2   CDUD - SCALED AT +/-PI, DESIRED GIMBAL ANGLE
R0477  2   DELCDU - SCALED AT +/-PI, INCREMENT TO CDUD EVERY 100 MS.
R0478  2   OMEGAPD, QD, RD - SCALED AT +/-PI/4, BODY AXIS RATES
R0479  2ALL THESE ARE USED BY AUTOMATIC STEERING MODE EQUATIONS.
R0480   RATE HOLD REQUIRES OMEGAP, Q, R EVERY .25 SEC, AND ALSO REQUIRES PILOT-
R0481   TO-GIMBAL AXIS MATRIX ELEMENTS, MR12, 22, 13, 23 TO BE LOCATED IN THAT
R0482  2ORDER.
R0483  2FINALLY, RATE HOLD LEAVES DEBRIS IN --
R0484  2   DLCDUIDX - LOOP INDEX USED IN COMPUTING DELCDUS, = 1, 0
R0485  4   ITEMP1 - STORES TEMPORARY PRODUCTS AND SUMS, LEFT WITH DELCDUY IN 1S.
 0486   ATTSTEER CS     DAPBOOLS        DOES BIT14 OF DAPBOOLS REQUEST RATE HOLD
 0487            MASK   BIT14           (SIVB-LEM SEPARATION)
 0488            CCS    A
 0489  2         TCF    QERRCALC        NO, GO DIRECTLY TO AUTOMATIC STEERING
R0490  2CHECK DAPBOOLS, BIT3, TO SEE IF DESIRED RATE HAS BEEN SAVED YET
 0491            CAE    DAPBOOLS        DOES BIT3 SHOW THAT THE DESIRED RATE HAS
 0492            MASK   BIT3            BEEN SAVED(NOT FIRST PASS).  IF NOT, GO
 0493            CCS    A               SAVE DESIRED RATES IN THE OMEGADS
 0494  2         TCF    NEXDLCDU -1     YES, COMPUTE THE DELCDUS.
R0495   SAVERATE IS ENTERED ONLY DURING THE FIRST PASS THROUGH RATE HOLD.  IT
R0496   SAVES THE CURRENT CDUS FIRST IN CDUDS AND THEN SAVES THE BODY RATES,
R0497  2OMEGAP, Q, R IN OMEGAPD, QD, RD.  NEXT, WE SET BIT 3 OF DAPBOOLS TO 1.
 0498   SAVERATE EXTEND                 COME HERE FIRST TIME INTO RATE HOLD IN
 0499            DCA    CDUY
 0500            DXCH   CDUYD           ORDER TO SET UP RATES, CDUS, AND DELCDUS
 0501            CAE    CDUX
 0502  2         TS     CDUXD           FIRST, CDUDS = CDUS AT SIVB SEPARATION
 0503            EXTEND                 NEXT, SAVE CURRENT SIVB SEPARATION RATES
 0504            DCA    OMEGAP
 0505            DXCH   OMEGAPD         OMEGAP AND OMEGAR, IN OMEGAPD AND
 0506            CAE    OMEGAR
 0507  2         TS     OMEGARD         OMEGARD.  LEM HELD TO RATES FOR 13 SECS.
 0508            CAF    BIT3            RESET BIT 3 = 1 SO THAT RATES NOT SAVED
 0509            ADS    DAPBOOLS        AGAIN IN RATE HOLD PASSES
 0510  2         TCF    RESUME          RETURN TO IDLE AFTER SAVING RATE
 0511  2100MSCAL DEC    .025            100 MS. SCALED AT 4 SEC.  RATE HOLD DELT
R0512  2TO COMPUTE THE DELCDUS, Y AND Z, WE SET UP A LOOP AND SOLVE THE EQUATION
R0513    C(DELCDUY+DLCDUIDX)=(OMEGAQD.C(MR12+DLCDUIDX)+OMEGARD.C(MR13+DLCDUIDX))
R0514  2                       .(100MS) SCALED AT PI IN 2S COMPLEMENT(LIKE CDUS)
R0515   DURING THIS COMPUTATION, ITEMP1 IS USED TO STORE THE PARTIAL SUMS AND
R0516   PRODUCTS.  DELCDUY IS RESCALED TO 1 AS MR12 AND MR13 ARE SCALED AT 2.
R0517   AFTER CONVERTING TO TWOS COMPLEMENT, WE SET DELCDUX TO ZERO TO AVOID ANY
R0518   ROLL DURING RATE HOLD MODE.  NOTE THAT DELCDUS ARE COMPUTED IN THE NEGA-
R0519  2TIVE TO ALLOW 2S COMP. MOD. SUBTRACT LATER ON (CDU-(-DELCDU))
 0520            CAF    ONE             SET UP LOOP INDEX TO COMPUTE DELCDUS.
 0521  2NEXDLCDU TS     DLCDUIDX        DLCDUIDX = C(A)
 0522            CS     OMEGAQD         DLCDUIDX = 1              DLCDUIDX = 0
 0523            EXTEND                 ITEMP1=-OMEGAQD.MR22
 0524            INDEX  DLCDUIDX
 0525            MP     MR12            MR22 SCALED AT 1       MR12 SCALED AT 2
 0526  2         TS     ITEMP1                              ITEMP1=-OMEGAQD.MR12
 0527            CS     OMEGARD         C(A)=ITEMP1 -OMEGARD.MR23
 0528            EXTEND
 0529            INDEX  DLCDUIDX                       C(A)=ITEMP1 -OMEGARD.MR13
 0530            MP     MR13            MR23 SCALED AT 1        MR13 SCALED AT 2
 0531            AD     ITEMP1
 0532            EXTEND                 DELT = 100 MS. SCALED AT 4 SEC.
 0533            MP     100MSCAL
 0534  2         TS     ITEMP1          ITEMP1 = C(A) . DELT
 0535            CCS    DLCDUIDX        CHECK INDEX FOR RESCALING
 0536            TCF    +3              DELCDUZ SCALED AT PI/4, RESCALE UNNEEDED
 0537            CAE    ITEMP1          DELCDUY SCALED AT PI/2, RESCALE BY
 0538  2         ADS    ITEMP1          ADDING TO ITSELF
 0539            CCS    ITEMP1          CONVERT DELCDUS TO TWOS COMPLEMENT (SAME
 0540            AD     ONE             AS CDUS).  ADD ONE TO RESTORE PRE-CCS A
 0541            TCF    STODLCDU        STORE DIRECT IF POSITIVE ZERO
 0542            COM                    COMPLEMENT IF NEGATIVE, CCS INCREMENTS
 0543   STODLCDU INDEX  DLCDUIDX        IF NEGATIVE ZERO, STORE POSITIVE ZERO
 0544  2         TS     DELCDUY         STORE FINAL DELCDUZ OR DELCDUY
 0545            CCS    DLCDUIDX        TEST INDEX DLCDUIDX, EITHER 1 OR 0
 0546            TCF    NEXDLCDU        IF 1, DO DELCDUY
 0547  2         TS     DELCDUX         DELCDUZ,Y DONE, 0 TO DELCDUX-NO ROLL
 0548   QERRCALC CAE    CDUY            Q-ERROR CALCULATION
 0549            EXTEND
 0550            MSU    CDUYD           CDU ANGLE - ANGLE DESIRED (Y-AXIS)
 0551            TS     ITEMP1          SAVE FOR RERRCALC
 0552            EXTEND
 0553            MP     M21             (CDUY-CDUYD)*M21 SCALED AT PI RADIANS
 0554            XCH    ER              SAVE FIRST TERM (OF TWO) IN OPP.AXIS REG
 0555            CAE    CDUZ            SECOND TERM CALCULATION:
 0556            EXTEND
 0557            MSU    CDUZD           CDU ANGLE -ANGLE DESIRED (Z-AXIS)
 0558            TS     ITEMP2          SAVE FOR RERRCALC
 0559            EXTEND
 0560            MP     M22             (CDUZ-CDUZD)*M22 SCALED AT PI RADIANS
 0561            ADS    ER              SAVE SUM OF TERMS, NO OVERFLOW EVER
 0562  2         TS     QERROR          SAVE QERROR FOR EIGHT-BALL DISPLAY
 0563   RERRCALC CAE    ITEMP1          R-ERROR CALCULATION:
 0564            EXTEND                 CDU ANGLE -ANGLE DESIRED (Y-AXIS)
 0565            MP     M31             (CDUY-CDUYD)*M31 SCALED AT PI RADIANS
 0566            XCH    E               SAVE FIRST TERM (OF TWO) IN OPP.AXIS REG
 0567            CAE    ITEMP2          SECOND TERM CALCULATION:
 0568            EXTEND                 CDU ANGLE -ANGLE DESIRED (Z-AXIS)
 0569            MP     M32             (CDUZ-CDUZD)*M32 SCALED AT PI RADIANS
 0570            ADS    E               SAVE SUM OF TERMS, NO OVERFLOW EVER
 0571  2         TS     RERROR          SAVE R-ERROR FOR EIGHT-BALL DISPLAY
R0572  2TEST (1): IS THE TRIM GIMBAL FUNCTIONALLY OPERATIVE?
 0573            CAF    BIT2            TEST TO SEE IF LEM AND DAP MODES ALLOW
 0574            MASK   DAPBOOLS        USE OF TRIM GIMBAL CONTROL SYSTEM:
 0575            CCS    A               BIT2 = 0 MEANS THAT TRIM GIMBAL CONTROL
 0576  2         TCF    STILLRCS        IS POSSIBLE, SO TEST OTHER TG CONDITIONS
R0577   TEST (2): ARE THE Q,R-AXES RCS JETS OFF?
 0578            EXTEND                 BUT, IF JETS ARE OFF AND TRIM GIMBAL MAY
 0579            READ   5               POSSIBLY BE USED: BEING IN THE JET COAST
 0580            CCS    A               REGION OF THE PHASE PLANE IS A NECESSARY
 0581  2         TCF    STILLRCS        BUT INSUFFICIENT REASON FOR GTS USE
R0582  2TEST(3): ARE BOTH TRIM GIMBAL DRIVES OFF?
 0583            EXTEND                 BITS 9-12 OF CHANNEL 12 ARE THE SIGNALS
 0584            READ   12              WHICH DRIVE THE TRIM GIMBAL ENGINE:
 0585            MASK   BGIM24          IF NONE OF THESE BITS ARE ON, THEN BOTH
 0586            CCS    A               WAITLIST TASKS TO TURN OFF THE DRIVES
 0587  2         TCF    STILLRCS        HAVE BEEN DONE AND GTS CONTROL CAN OCCUR
R0588  2TEST (4): IS THE LEM RATE LESS THAN .5 DEG/SEC ABOUT BOTH AXES?
 0589            CA     BIT1
 0590   LOOPTOP  TS     QRCNTR
 0591            DOUBLE
 0592            INDEX  A
 0593            CCS    OMEGAQ          IS ERROR RATE SMALL ENOUGH FOR GTS.
 0594            AD     -RATLM+1        -.5 DEG/SEC SCALED AT PI/4 + 1 BIT
 0595            TCF     +2
 0596            AD     -RATLM+1
 0597            EXTEND
 0598            BZMF    +2             IS RATE LESS,EQUAL .5 DEG/SEC.
 0599            TCF    STILLRCS        NO.      SO USE RCS.
 0600            INDEX  QRCNTR          YES.     TRY THE ERROR MAGNITUDE.
 0601            CCS    QDIFF           IS ERROR SMALL ENOUGH FOR GTS.
 0602            AD     -XBND+1         -1.4 DEG SCALED AT PI    + 1 BIT
 0603            TCF     +2
 0604            AD     -XBND+1
 0605            EXTEND
 0606            BZMF    +2             IS ERROR LESS,EQUAL 1.4 DEG.
 0607            TCF    STILLRCS        NO.      USE RCS CONTROL.
 0608            CCS    QRCNTR          THIS AXIS IS FINE.   ARE BOTH DONE.
 0609            TCF    LOOPTOP         NOW TRY THE Q AXIS.
 0610            TCF    GOTOGTS         TRANSFER TO TRIM GIMBAL CONTROL
 0611   -RATLM+1 OCT    77512           -.5 DEG/SEC SCALED AT PI/4  + 1 BIT
 0612   -XBND+1  OCT    77601           -1.4 DEG SCALED AT PI, + 1 BIT.
R0613   "STILLRCS" IS THE ENTRY POINT TO RCS ATTITUDE STEERING WHENEVER IT IS FO
 0614  9UND THAT THE TRIM GIMBAL CONTROL
R0615  2SYSTEM SHOULD NOT BE USED:
 0616   STILLRCS CAF    DESCADR         SET JET SELECT LOGIC RETURN ADDRESS TO
 0617  2         TS     TJETADR         THE Q,R-AXIS TJETLAW CALCULATION
 0618  2         TC     T6JOBCHK        CHECK T6 CLOCK RUPT BEFORE SUBROUTINE
 0619   RURGENCY CAE    1/NJTSR         SET-UP URGENCY SUBROUTINE
 0620            TS     1/NJETAC
 0621            CS     OMEGARD         EDOTR = OMEGAR - OMEGARD
 0622            AD     OMEGAR
 0623            TS     EDOTR           SCALED AT PI/4 RADIANS
 0624            TC     URGROUTN        *** SUBROUTINE CALL ***
 0625  2         TS     URGENCYR        URGENCY LEFT IN A SCALED AT 2(4) SECS
 0626            DXCH   E               MOVE R-AXIS VARIABLES TO R-AXIS ERASABLE
 0627            DXCH   ER              FROM Q-XIS (COMMON) ERASABLE
 0628            TS     E
 0629            CAE    EDOT            (LOOK AT REORG FOR EFFIC: JDA 7/17/66)
 0630  2         TS     EDOT(R)
 0631   QURGENCY CAE    1/NJTSQ         SET-UP URGENCY SUBROUTINE
 0632            TS     1/NJETAC
 0633            CS     OMEGAQD         EDOTQ = OMEGAQ - OMEGAQD
 0634            AD     OMEGAQ
 0635            TS     EDOTQ           SCALED AT PI/4 RADIANS
 0636            TC     URGROUTN        *** SUBROUTINE CALL ***
 0637  2         TS     URGENCYQ        URGENCY LEFT IN A SCALED AT 2(4) SECS
 0638            EXTEND
 0639  2         BZF    BURGZERO        TEST FOR BOTH URGENCIES ZERO
 0640            EXTEND
 0641            MP     -TAN22.5
 0642            AD     URGENCYR
 0643            EXTEND
 0644            MP     COS22.5
 0645  2         TS     TERMA           UR.COS(22.5)-UQ.SIN(22.5)
 0646            CS     URGENCYR
 0647            EXTEND
 0648            MP     -TAN22.5
 0649            AD     URGENCYQ
 0650            EXTEND
 0651            MP     COS22.5
 0652  2         TS     TERMB           UR.SIN(22.5)+UQ.COS(22.5)
 0653   A+B/A-B  AD     TERMA
 0654            TS     A+B
 0655   A-B/ONLY CS     TERMB
 0656            AD     TERMA
 0657  2         TS     A-B
R0658  2AXIS AND MODE SELECTION
 0659            CAE    TERMB           B URGENCY TEST
 0660            EXTEND
 0661  2         BZMF   NEGBURG
 0662   POSBURG  CAE    TERMA           A URGENCY TEST
 0663            EXTEND
 0664  2         BZMF   NEGAPOSB
 0665   POSAPOSB CAE    A-B
 0666            EXTEND
 0667  2         BZMF   MINUSU          NEGATIVE U-AXIS SELECTED
 0668   2/4JET-R EXTEND
 0669            DCA    ER
 0670            DXCH   E
 0671            CAE    EDOT(R)
 0672            TS     EDOT
 0673            CAE    .5ACCMNR
 0674            TS     .5ACCMNE
 0675            CAF    URM             2/4 JET URGENCY TEST -R AXIS
 0676            AD     URGENCYR
 0677            EXTEND
 0678  2         BZMF   2JETS-R
 0679   4JETS-R  CAE    1/2JTSR         MOVE 1/NJETAC UNMODIFIED
 0680            TS     1/NJETAC
 0681            CS     SEVEN
 0682  2         TCF    POLTYPE         GO FIND BEST POLICY
 0683   2JETS-R  CCS    RMANDACC        ASCENT 4-JET OVER-RIDE TEST
 0684            TCF    4JETS-R
 0685            CAE    1/2JTSR
 0686            TS     1/NJETAC
 0687            CS     SIX
 0688  2         TCF    POLTYPE         GO FIND BEST POLICY
 0689   MINUSU   CAE    .5ACCMNU
 0690            TS     .5ACCMNE
 0691            CAE    URGENCYQ        2 JET OPT/MAND TEST: -U AXIS
 0692            AD     URGENCYR
 0693            CCS    A
 0694            AD     NEGURGUM
 0695            TCF     +2
 0696            AD     NEGURGUM
 0697            EXTEND
 0698  2         BZMF   2JETS-U
 0699   2JETSM-U TC     UXFORM
 0700   2-U.RATE CS     FIVE
 0701  2         TCF    POLTYPE         GO FIND BEST POLICY
 0702   2JETS-U  CCS    UMANDACC        ASCENT 2-JET MANDATORY OVER-RIDE TEST
 0703            TCF    2JETSM-U
 0704            TC     UXFORM
 0705            CS     FOUR
 0706  2         TCF    POLTYPE         GO FIND BEST POLICY
 0707   NEGAPOSB CAE    A+B
 0708            EXTEND
 0709  2         BZMF   PLUSV
 0710   2/4JET-Q CAE    .5ACCMNQ
 0711            TS     .5ACCMNE
 0712            CAF    UQM             204 JET URGENCY TEST: -Q AXIS
 0713            AD     URGENCYQ
 0714            EXTEND
 0715  2         BZMF   2JETS-Q +2      (FIRST TWO INSTRUCTIONS UNNECESSARY)
 0716   4JETS-Q  CAE    1/2JTSQ         MOVE 1/NJETAC UNMODIFIED
 0717            TS     1/NJETAC
 0718            CS     THREE
 0719  2         TCF    POLTYPE         GO FIND BEST POLICY
 0720   2JETS-Q  CCS    QMANDACC        ASCENT 4-JET OVER-RIDE TEST
 0721            TCF    4JETS-Q
 0722            CAE    1/2JTSQ
 0723            TS     1/NJETAC
 0724            CS     TWO
 0725  2         TCF    POLTYPE         GO FIND BEST POLICY
 0726   PLUSV    CAE    .5ACCMNV
 0727            TS     .5ACCMNE
 0728            CS     URGENCYQ        2 JET OPT/MAND TEST: +V AXIS
 0729            AD     URGENCYR
 0730            CCS    A
 0731            AD     NEGURGVM
 0732            TCF     +2
 0733            AD     NEGURGVM
 0734            EXTEND
 0735  2         BZMF   2JETS+V
 0736   2JETSM+V TC     VXFORM
 0737   2+V.RATE CS     ONE
 0738  2         TCF    POLTYPE         GO FIND BEST POLICY
 0739   2JETS+V  CCS    VMANDACC        ASCENT 2-JET MANDATORY OVER-RIDE TEST
 0740            TCF    2JETSM+V
 0741            TC     VXFORM
 0742            CAF    ZERO
 0743  2         TCF    POLTYPE         GO FIND BEST POLICY
 0744   BURGZERO CAE    URGENCYR        TEST FOR SECOND URGENCY ALSO ZERO
 0745            EXTEND
 0746  2         BZF    XTRANS          NO ROTATION NEEDED NOW
 0747            EXTEND                 TIME SAVING A,B CALCULATION
 0748            MP     SIN22.5
 0749            TS     TERMB           US.SIN(22.5)
 0750            CAE    URGENCYR
 0751            EXTEND
 0752            MP     COS22.5
 0753            TS     TERMA           UR.COS(22.5)
 0754            TCF    A-B/ONLY
 0755   COS22.5  DEC    0.92388         COSINE OF 22.5 DEGREES
 0756   SIN22.5  DEC    0.38268         SINE OF 22.5 DEGREES
 0757  2-TAN22.5 DEC    -.41421         NEGATIVE OF TANGENT OF 22.5 DEGREES
 0758   NEGBURG  CAE    TERMA           A URGENCY TEST
 0759            EXTEND
 0760  2         BZMF   NEGANEGB
 0761   POSANEGB CAE    A+B
 0762            EXTEND
 0763  2         BZMF   2/4JET+Q
 0764   MINUSV   CAE    .5ACCMNV
 0765            TS     .5ACCMNE
 0766            CS     URGENCYQ        2 JET OPT/MAND TEST: -V AXIS
 0767            AD     URGENCYR
 0768            CCS    A
 0769            AD     NEGURGVM
 0770            TCF     +2
 0771            AD     NEGURGVM
 0772            EXTEND
 0773  2         BZMF   2JETS-V
 0774   2JETSM-V TC     VXFORM
 0775   2-V.RATE CAF    ONE
 0776  2         TCF    POLTYPE         GO FIND BEST POLICY
 0777   2JETS-V  CCS    VMANDACC        ASCENT 2-JET MANDATORY OVER-RIDE TEST
 0778            TCF    2JETSM-V
 0779            TC     VXFORM
 0780            CAF    TWO
 0781  2         TCF    POLTYPE         GO FIND BEST POLICY
 0782   NEGANEGB CAE    A-B
 0783            EXTEND
 0784  2         BZMF   2/4JET+R
 0785   PLUSU    CAE    .5ACCMNU
 0786            TS     .5ACCMNE
 0787            CAE    URGENCYQ        2 JET OPT/MAND TEST: +U AXIS
 0788            AD     URGENCYR
 0789            CCS    A
 0790            AD     NEGURGUM
 0791            TCF     +2
 0792            AD     NEGURGUM
 0793            EXTEND
 0794  2         BZMF   2JETS+U
 0795   2JETSM+U TC     UXFORM
 0796   2+U.RATE CAF    THREE
 0797  2         TCF    POLTYPE         GO FIND BEST POLICY
 0798   2JETS+U  CCS    UMANDACC        ASCENT 2-JET MANDATORY OVER-RIDE TEST
 0799            TCF    2JETSM+U
 0800            TC     UXFORM
 0801            CAF    FOUR
 0802  2         TCF    POLTYPE         GO FIND BEST POLICY
 0803   2/4JET+R EXTEND
 0804            DCA    ER
 0805            DXCH   E
 0806            CAE    EDOT(R)
 0807            TS     EDOT
 0808            CAE    .5ACCMNR
 0809            TS     .5ACCMNE
 0810            CAF    URM             2/4 JET URGENCY TEST +R AXIS
 0811            AD     URGENCYR
 0812            EXTEND
 0813  2         BZMF   2JETS+R
 0814   4JETS+R  CAE    1/2JTSR         MOVE 1/NJETAC UNMODIFIED
 0815            TS     1/NJETAC
 0816            CAF    FIVE
 0817  2         TCF    POLTYPE         GO FIND BEST POLICY
 0818   2JETS+R  CCS    RMANDACC        ASCENT 4-JET OVER-RIDE TEST
 0819            TCF    4JETS+R
 0820            CAE    1/2JTSR
 0821            TS     1/NJETAC
 0822            CAF    SIX
 0823  2         TCF    POLTYPE         GO FIND BEST POLICY
 0824   2/4JET+Q CAE    .5ACCMNQ
 0825            TS     .5ACCMNE
 0826            CAF    UQM             2/4 JET URGENCY TEST: +Q AXIS
 0827            AD     URGENCYQ
 0828            EXTEND
 0829  2         BZMF   2JETS+Q +2      (FIRST TWO INSTRUCTIONS UNNECESSARY)
 0830   4JETS+Q  CAE    1/2JTSQ         MOVE 1/NJETAC UNMODIFIED
 0831            TS     1/NJETAC
 0832            CAF    SEVEN
 0833  2         TCF    POLTYPE         GO FIND BEST POLICY
 0834   2JETS+Q  CCS    QMANDACC        ASCENT 4-JET OVER-RIDE TEST
 0835            TCF    4JETS+Q
 0836            CAE    1/2JTSQ
 0837            TS     1/NJETAC
 0838  2         CAF    EIGHT
 0839   POLTYPE  TS     POLRELOC
 0840            EXTEND
 0841            DCA    POLADR
 0842            DTCB
 0843  8POLADR   2CADR  POLTYPEP
R0844   SUBROUTINES UXFORM AND VXFORM CALCULATE NEEDED VALUES FOR T-JET LAW
R0845  2(THEY GO OFF TO REDUCE RATE, IF NECESSARY, AND THEN DO NOT RETURN)
 0846   VXFORM   CAE    1/2JETSV        GET INVERSE OF V-JET ACCELERATION
 0847            TS     1/NJETAC
 0848            CS     EQ              COMPLEMENT FOR TRANSFORMATION
 0849            TS     EQ
 0850            CS     EDOTQ
 0851            TCF    UVXFORM +1
 0852   UXFORM   CAE    1/2JETSU        SET INVERSE OF U-JET ACCELERATION
 0853  2         TS     1/NJETAC
 0854   UVXFORM  CAE    EDOTQ           TRANSFORM ANGULAR RATE TO U/V-AXIS
 0855            AD     EDOTR
 0856            EXTEND
 0857            MP     .707
 0858            TS     EDOT            SAVE FOR REDUCEUV
 0859            EXTEND
 0860            MP     BIT3
 0861            EXTEND
 0862            BZF     +2             CHECK FOR VALUE BEYOND SCALING RANGE
 0863            TCF    REDUCEQR        SAME AS REDUCEUV
 0864            CAE    L
 0865            TS     EDOT            SAVE RATE SCALED AT PI/16
 0866            EXTEND
 0867            SQUARE
 0868  2         TS     EDOT(2)         SAVE RATE SQUARED SCALED AT PI(2)/2(8)
 0869            CAE    EQ              TRANSFORM ANGULAR ERROR TO U/V-AXIS
 0870            AD     ER
 0871            EXTEND
 0872            MP     .707
 0873            TS     E               SAVE ERROR SCALED AT PI
 0874  2         TC     Q
 0875  4.707     DEC    0.70711         SQRT(1/2)
 0876   NEGURGUM DEC    -.18750
 0877   NEGURGVM EQUALS NEGURGUM
 0878   UQM      EQUALS NEGURGUM
 0879  8URM      EQUALS NEGURGUM
R0880  2GENERALIZED URGENCY SUBROUTINE FOR USE ON ALL PILOT AXES (P,Q,R)...
R0881   DEPENDING ON THE AXIS PROBLEM, EDOTP,EDOTQ,EDOTR IS EXPECTED TO ARRIVE I
 0882  9N A AND 1/2JTSP,1/2JTSQ,1/2JTSR IN
R0883   1/NJETAC.  NOTE THAT THE Q,R-AXIS PROBLEM IS EXPECTED TO DO THE R-AXIS P
 0884  9ROBLEM FIRST (FOR EFFICIENT USE OF
R0885   ERASABLE) AND THE Q,R-AXIS PROBLEM DOES NOT USE TPSIG.
R0886  2(THIS ROUTINE SHOULD BE IN THE FIXED BANK OF THE Q,R-AXIS PROBLEM SINCE
 0887  9IT IS CALLED ONLY ONCE FROM THE P-AXIS.)
 0888   URGROUTN TS     EDOT            SAVE FOR REDUCEQR
 0889            EXTEND                 EXPECT EDOT IN A SCALED AT PI/4 RAD/SEC
 0890            MP     BIT3            TRY TO RESCALE TO PI/16 RADIANS/SECOND
 0891            EXTEND
 0892            BZF     +2             OVERFLOW CHECK ON NEW SCALING
 0893            TCF    REDUCERA        DISTINGUISH BETWEEN P AND Q,R
 0894    +2      CCS    L               INSURE NON-ZERO EDOT (TPSIG FLAG)
 0895            AD     TWO
 0896            TCF     +2
 0897            COM
 0898    +2      AD     NEG1
 0899            TS     TPSIG           (FOR P-AXIS PROBLEM ONLY)
 0900  2         TS     EDOT            SAVE FOR T-JET LAW SCALED AT PI/16
 0901            EXTEND
 0902            SQUARE
 0903  2         TS     EDOT(2)         SCALED AT PI(2)/2(8) RAD(2)/SEC(2)
 0904            EXTEND                 1/2JTSP,1/2JTSQ,1/2JTSR IN 1/NJETAC
 0905            MP     1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD
 0906            EXTEND
 0907            SU     DB              DEADBAND SCALED AT PI RADIANS
 0908  2         TS     FPQR            .5(1/ACC)EDOT(2) - DB SCALED AT PI RADS
 0909            CAE    EDOT(2)         SCALED AT PI(2)/2(8) RAD(2)/SEC(2)
 0910            EXTEND
 0911            MP     .5ACCMNE        .5(1/ACCMIN) AT 2(8)/PI SEC(2)/RAD
 0912            AD     DB              SCALED AT PI RADIANS
 0913  2         TS     FPQRMIN         .5(1/ACCMIN)EDOT(2) + DB AT PI RADIANS
 0914            CCS    EDOT            EDOT TEST ON SIGN
 0915            CAE    E               P,Q,R-AXIS ERROR SCALED AT PI RADIANS
 0916            TCF     +2
 0917            TCF    EDOTNEG
 0918  2 +2      ADS    FPQR            E + .5(1/ACC)EDOT(2) - DB AT PI RADIANS
 0919   FTEST    CCS    EDOT            EDOT GUARANTEED NOT +0 OR -0
 0920            CCS    FPQR            FPQR GUARANTEED NOT +0
 0921            TCF    TPSIGCHG        EDOT.G.+0, FPQR.G.+0
 0922            CCS    FPQR            EDOT.L.-0
 0923            TCF    FPMINCAL        EDOT.L.-0,FPQR.G.+0/EDOT.G.+0,FPQR.L.-0
 0924            TCF    FPMINCAL        EDOT.G.+0, FPQR.E.-0 (FROM FIRST CCS)
 0925  2         TCF    TPSIGCHG        EDOT.L.-0, FPQR.L.-0
 0926   TPSIGCHG CS     TPSIG           EDOT.L.-0, FPQR.E.-0 (FROM 2ND CCS)
 0927            TS     TPSIG           (SIGN OF P-AXIS JETS IF NEEDED)
 0928            CAE    EDOT            SCALED AT PI/16 RADIANS/SECOND
 0929            EXTEND
 0930            MP     BIT11           SCALE TO PI RADIANS/SECOND
 0931            AD     FPQR            (IMPLICIT MULT OF FPQR BY 1/SEC)
 0932  2         TCF    URGMULT         THIS URGENCY = (1/ACC)(FPQR+EDOT)
 0933   EDOTNEG  CS     FPQR            SCALED AT PI RADIANS
 0934            AD     E
 0935            TS     FPQR            E - .5(1/ACC)EDOT(2) + DB
 0936  2         TCF    FTEST
 0937   FPMINCAL CCS    FPQR            NECESSARY RETEST ON FPQR
 0938            CS     FPQRMIN
 0939            TCF     +2             E - .5(1/ACCMIN)EDOT(2) - DB
 0940            CAE    FPQRMIN
 0941            AD     E               E + .5(1/ACCMIN)EDOT(2) + DB
 0942  2         TS     FPQRMIN         (SCALED AT PI RADIANS)
 0943            CCS    EDOT            EDOT    GUARANTEED NOT +0 OR -0
 0944            CCS    FPQRMIN         FPQRMIN GUARANTEED NOT +0 (CALL IT F)
 0945            TCF    ZEROURG         EDOT.G.+0, F.G.+0
 0946            CCS    FPQRMIN         EDOT.L.-0
 0947            TCF    NORMURG         EDOT.L.-0, F.G.+0 / EDOT.G.+0, F.L.-0
 0948            TCF    NORMURG         EDOT.G.+0, F.E.-0 (FROM FIRST CCS)
 0949            TCF    ZEROURG         EDOT.L.-0, F.L.-0
 0950   ZEROURG  CAF    ZERO            EDOT.L.-0, F.E.-0 (FROM SECOND CCS)
 0951  2         TCF    URGSTORE        THIS URGENCY ZERO (IN COAST REGIAN)
 0952   NORMURG  CAE    FPQRMIN         THIS URGENCY FPQRMIN(1/ACC)
 0953   URGMULT  EXTEND
 0954            MP     1/NJETAC
 0955            EXTEND                 SCALE FROM 2(9) TO 2(4) SECONDS
 0956            MP     BIT6            1/NJETAC = 1/2JETAC, WANT 1/1JETAC
 0957            EXTEND
 0958            BZF    URGTOA
 0959            CCS    A
 0960            CA     POSMAX
 0961            TCF    URGSTORE
 0962            CS     POSMAX
 0963            TCF    URGSTORE
 0964   URGTOA   CA     L
 0965   URGSTORE TC     Q               *** RETURN ***
P0966  2GENERALIZED T-JET LAW SUBROUTINE FOR USE BY BOTH THE P-AXIS AND Q,R-AXES
 0967  9 PROBLEMS (ONCE EACH)...
R0968   DEPENDING ON THE AXIS ABOUT WHICH ROTATION IS DEEMED MOST URGENT, 1/JACC
 0969  9 FOR THAT AXIS IS EXPECTED IN 1/NJETAC
R0970   AND THE CORRESPONDING VALUES FOR E, EDOT, AND EDOT(2) ARE ALSO EXPECTED
 0971  9TO BE SET UP IN ADVANCE.
R0972  2(THIS ROUTINE MAY RESIDE IN THE FIXED BANK OF EITHER THE P-AXIS OR Q,R-A
 0973  9XIS PROBLEM.)
R0974  2***** IMPORTANT NOTICE *****
R0975       NOTE THAT TJETLOC IS THE LOCAL ENTRY POINT FOR THIS PROGRAM AND TJET
 0976  9LAW IS THE CROSS-BANK ENTRY.  SEE BELOW
R0977   FOR THE TWO CALLING SEQUENCES FOR OPTIMAL USE AND BE ASSURED THAT FOR EI
 0978  9THER CASE ISWRETRN MUST BE USED AND
R0979  2RUPTREG3 CONTAINS THE EVENTUAL RETURN ADDRESS.
R0980   LOCAL CALL:
R0981            TC     TJETLOC
R0982            TCF    NO ROTATION JETS
R0983  2         TS     TIME CALCULATED
R0984   CROSS-BANK CALL:
R0985            CAF    TJETLAWCADR
R0986            TC     ISWCALL
R0987            TCF    NO ROTATION JETS
R0988  4         TS     TIME CALCULATED
R0989  2***** VERY IMPORTANT NOTICE *****
R0990   SINCE THE Q,R-AXES SWITCHED FIXED BANK BECAME VERY FULL (DUE TO THE ADDI
 0991  9TION OF RATE-HOLD MODE AND A BETTER
R0992   RCS-GTS INTERFACE), THE LOCAL CALL AND LOCAL ENTRY POINT FOR THE T-JET L
 0993  9AW HAVE BEEN DELETED AS OF REVISION 7
R0994  4OF AURORA (BY JON ADDELSTON 10/24/66).
R0995  2FOR CONVENIENCE, WE INCLUDE HERE THE CALL FROM THE Q,R-AXIS PROBLEM:
 0996  2         BANK   24
 0997  2QR-JETLW CADR   TJET-LAW        CADR OF Q,R-ENTRY TO TJETLAW SUBROUTINE
 0998  2TJET-LAW TC     T6JOBCHK        CHECK T6 CLOCK RUPT BEFORE SUBROUTINE
 0999            CAF    QR-JETLW        T-JETLAW CALLING SEQUENCE (LIKE P-AXIS)
 1000            TC     ISWCALL         (IN INTERBANK COMMUNICATION LOG SECTION)
 1001            TCF    XTRANS          GO TO XTRANS SINCE NO ROTATION IS USED
 1002            TS     TQR             SAVE CALCULATED TIME FOR THE TORQUE
 1003  4         TCF    TORQUEV         VECTOR RECONSTRUCTION PROBLEM
R1004                        24,1000  0 0006 1  TJETLOC  EXTEND
 1005  9LOCAL ENTRY FAKES CROSS-BANK IN SMALL DT
R1006                        24,1001  22 076 0           QXCH   RUPTREG3
 1007  9SAVE RETURN WHERE ISWCALL DOES
R1008                        24,1002  3 4174 1           CAF    ISWRETRN +3
 1009  9GET CADR OF RUPTREG3 FROM TC INSTRUCTION
R1010  2                     24,1003  54 002 1           TS     Q
 1011  9SO TC Q GOES TO RUPTREG3 FOR RETURN
 1012  2         BANK   25
 1013   TJETLAW  CS     EDOT            TEST EDOT SIGN
 1014            EXTEND
 1015            BZMF    +4
 1016            TS     EDOT            SIGNS OF E AND EDOT CHANGED IF EDOT NEG
 1017            CS     E               TO CONSIDER FUNCTIONS IN UPPER HALF OF
 1018  2         TS     E               THE E,EDOT PHASE PLANE
 1019            CAE    EDOT(2)         SCALED AT PI(2)/2(8) RAD(2)/SEC(2)
 1020            EXTEND                 (1/NJETAC HAS BEEN SET FOR N JETS)
 1021            MP     1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD
 1022            EXTEND
 1023            MP     BIT14           .5EDOT(2)/NJETACC SCALED AT PI RADIANS
 1024            AD     E               SCALED AT PI RADIANS (ERROR)
 1025            EXTEND
 1026            SU     DB              SCALED AT PI RADIANS (DEADBAND)
 1027  2         TS     HDAP            E + .5EDOT(2)/NJETACC - DB
 1028            EXTEND
 1029  2         BZMF   NEGHDAP
 1030            CAE    EDOT            SCALED AT PI/16 RAD/SEC (RATE)
 1031            EXTEND
 1032            MP     1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD (ACC)(-1)
 1033            TS     TERMA           SCALED AT 2(4) SEC (CNTRL SMPL PERIOD)
 1034  2         AD     NEGCSP          EDOT/NJETACC - CSP SCALED AT 16 SECONDS
 1035            EXTEND
 1036  2         BZMF    +3
 1037   MAXTJET  CAF    BIT14           (1/2) IS LIKE POSMAX AT THIS SCALING
 1038  2         TCF    NORMRETN        (OVERFLOW IS THUS PREVENTED)
 1039            CS     HDAP            -DBMINIMP + E + EDOT(2)/NJETACC - DB
 1040            AD     MINIMPDB        SCALED AT PI RADIANS
 1041            EXTEND
 1042  2         BZMF   MAINBRCH
 1043            CAE    TERMA           EDOT/NJETACC - .5TJMIN SCALED AT 16 SECS
 1044            AD     -20MS           - 20 MS SCALED AT 16.
 1045            EXTEND
 1046  2         BZMF   TJMIN
 1047            AD     23.75MS         WE GET TERMA + 3.75 MS.
 1048  2         TCF    TJETSCAL
 1049   TJMIN    CS     PAXCALL         WE KNOW WE DO P AXIS SINCE WE HAVE RUPT-
 1050            AD     RUPTREG3         REG3 = T-JETLAW +3(Q-AXIS CALL NOT AT
 1051            EXTEND                  SAME LOCATION-- WE HOPE - AND INSURE.).
 1052            BZF    WEDOP
 1053            CAE    NO.QJETS        NO. OF Q JETS ON
 1054            EXTEND
 1055            BZF    WEDOR
 1056            CAE    NO.RJETS        NO. OF R JETS ON
 1057            EXTEND
 1058            BZF    WEDOQ
 1059   DOTJMIN  CAF    +TJMINT6
 1060   NORMRETN INCR   RUPTREG3        *** RETURN +1 ***
 1061            TC     Q               BACK TO ISWRETRN
 1062   WEDOP    TS     OMEGAP
 1063            TCF    DOTJMIN
 1064   WEDOR    TS     OMEGAR
 1065            TCF    DOTJMIN
 1066   WEDOQ    TS     OMEGAQ
 1067            TCF    DOTJMIN
 1068   PAXCALL  GENADR T-JETLAW +3
 1069   NEGHDAP  CAE    EDOT(2)         SCALED AT PI(2)/2(8) RAD(2)/SEC(2)
 1070            EXTEND
 1071            MP     .5ACCMNE        .5(1/ACCMIN) AT 2(8)/PI SEC(2)/RAD
 1072            AD     E               SCALED AT PI RADIANS (ERROR)
 1073            AD     DB              SCALED AT PI RADIANS (DEADBAND)
 1074            AD     DBMINIMP
 1075            EXTEND
 1076            BZMF    +2
 1077  2         TC     Q               *** RETURN *** (NO JETS)
 1078    +2      CS     MAXRATE         10 DEG/SEC SCALED AT PI/16 RAD/SEC
 1079            AD     EDOT            EDOT - MAXRATE
 1080            EXTEND
 1081            BZMF    +2
 1082  2         TC     Q               *** RETURN *** (NO JETS)
 1083    +2      CS     EDOT            SCALED AT PI/16 RAD/SEC (RATE)
 1084            EXTEND
 1085            MP     1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD (ACC)(-1)
 1086  2         TS     TERMA           -EDOT/NJETACC SCALED AT 2(4) SECONDS
 1087            CS     HDAP            - E + .5EDOT(2)/NJETACC + DB
 1088            AD     E
 1089            AD     E               TWICE ERROR NEGATES E OF HDAP(OLD)
 1090            AD     MINIMPDB
 1091  2MAINBRCH TS     HDAP            -HDAP(OLD) + 2E + DBMINIMP AT PI RADS
 1092            CAE    1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD
 1093            EXTEND
 1094            MP     BIT14           (1/2)(1/NJETAC)
 1095            AD     .5ACCMNE
 1096  2         TS     DENOM           .5(1/NJETACC) + .5(1/ACCMIN) AT 2(8)/PI
 1097            EXTEND
 1098            MP     MAXRATE2        SCALED AT PI(2)/2(8) RAD(2)/SEC(2)
 1099            AD     HDAP            DENOM.MAXRATE(2) + HDAP AT PI RADIANS
 1100            EXTEND
 1101  2         BZMF   NOROOT
 1102            CAE    HDAP            SCALED AT PI RADIANS
 1103            EXTEND
 1104            DV     DENOM           SCALED AT 2(8)/PI SEC(2)/RAD(2)
 1105            EXTEND
 1106            MP     1/NJETAC
 1107            EXTEND
 1108            MP     1/NJETAC
 1109  2         TS     TERMB           -(HDAP/DENOM)(1/NJETACC)(2) AT 2(8) SECS
 1110            CAF    NEGCSP          SCALED AT 2(4) SECONDS
 1111            AD     TERMA
 1112            EXTEND
 1113            SQUARE                 SCALED AT 2(8) SECONDS
 1114            AD     TERMB
 1115            EXTEND                 (TERMA - CSP)(2) + TERMB
 1116            BZMF   MAXTJET
 1117            CAF    -TJMIN16
 1118            AD     TERMA           TERMA - TJMIN SCALED AT 2(4) SECONDS
 1119            EXTEND
 1120  2         BZMF   MAYNOJET
 1121  2PREROOT  EXTEND                 MUST SAVE Q .
 1122            QXCH   A+B
 1123            TC     T6JOBCHK
 1124            CS     TERMB
 1125  2         TC     SPROOT          SQRT(-TERMB) SCALED AT 2(4) SECONDS
 1126            EXTEND                 MUST RESTORE OLD Q AFTER SPROOT
 1127  2         QXCH   A+B
 1128   TJSUM    AD     TERMA           TERMA + SQRT(-TERMB)
 1129   TJETSCAL DOUBLE                 NOW SCALED AT 2(3) SECONDS
 1130            EXTEND
 1131            MP     25/32QR         SCALED T O 16/25 2(4) SECONDS.
 1132  2         TCF    NORMRETN        *** RETURN +1 ***
 1133   NOROOT   CAF    MAXRATE
 1134            AD     .6DEG/SC        MAXRATE + DEL SCALED AT PI/16 RAD/SEC
 1135            EXTEND
 1136            MP     1/NJETAC        SCALED AT 2(8)/PI SEC(2)/RAD
 1137  2         TCF    TJSUM           SCALED AT 2(4) RADIANS
 1138   MAYNOJET CAF    -TJMIN16
 1139            AD     TERMA           TERMA - TJMIN SCALED AT 2(4) SECONDS
 1140            EXTEND
 1141            SQUARE                 SCALED AT 2(8) SEC(2)
 1142            AD     TERMB
 1143            EXTEND
 1144            BZMF   PREROOT         (TERMA - TJMIN)(2) + TERMB AT 2(8)
 1145  2         TC     Q               *** RETURN *** (NO JETS)
 1146   NEGCSP   DEC    -.00625         100 MS   SCALED AT 2(4) SECONDS
 1147   +TJMINT6 DEC    +.00073
 1148   -TJMIN16 DEC    -.00047
 1149   -TJMINQR EQUALS -TJMIN16
 1150   23.75MS  DEC    0.00148         23.75 MS SCALED AT 16 SECONDS.
 1151   -20MS    DEC    -.00125         - 20 MS SCALED AT 16 SECONDS.
 1152   MAXRATE  DEC    0.88889         10 DEGREES/SECOND SCALED AT PI/16
 1153   MAXRATE2 DEC    0.79012         100 DEG(2)/SEC(2) SCALED AT PI(2)/2(8)
 1154   .6DEG/SC DEC    0.05333         6/10 DEGREES/SECOND SCALED AT PI/16
 1155  825/32QR  DEC    0.78125
R1156   THESE TWO SUBROUTINES TRANSFORM EDOTQ,EDOTR INTO THE U/V-AXIS (RESPECTIV
 1157  9ELY) FOR THE RATE COMMAND MODE (ONLY).
R1158  2VALUE IS STORED IN EDOTGEN SCALED AT PI/4 RADIANS/SECOND.
 1159  2         BANK   24
 1160   EDOTUGEN CAE    1/2JETSU        FOR U-AXIS TRANSFORMATION
 1161            TS     1/NJETAC
 1162            CAE    EDOTQ
 1163            TCF     +4
 1164   EDOTVGEN CAE    1/2JETSV        FOR V-AXIS TRANSFORMATION
 1165            TS     1/NJETAC
 1166            CS     EDOTQ
 1167            AD     EDOTR
 1168            EXTEND
 1169            MP     .707
 1170            TS     RATEDIF
 1171  4         TC     Q
R1172  2THESE PROGRAMS REDUCE THE RATE ERROR TO 10.6 DEGREES/SECOND.
 1173   REDUCERA CS     EDOT            TEST FOR P-AXIS PROBLEM
 1174            AD     EDOTP           EXACT MATCH MEANS P-AXIS
 1175            EXTEND
 1176  2         BZF    REDUCEP         P-AXIS SUM IS ALWAYS MINUS ZERO
 1177   REDUCEQR TC     REDUCESC        GET SHRINK FACTOR
 1178            EXTEND                 SHRINK Q-AXIS COMPONENT
 1179            MP     EDOTQ
 1180  2         TS     QRATEDIF
 1181            CAE    EDOTR           SHRINK R-AXIS COMPONENT
 1182            EXTEND
 1183            MP     EDOT
 1184  2         TS     RRATEDIF
 1185  2         TCF    OBEYQRRC
 1186   REDUCEP  TC     REDUCESC        GET SHRINK FACTOR
 1187            EXTEND                 SHRINK P-AXIS COMPONENT
 1188            MP     EDOTP
 1189            TS     EDOTP
 1190  2         TS     TPSIG
 1191            EXTEND
 1192            DCA     +2
 1193            DTCB
 1194            2CADR  OBEYRAPE
 1195   REDUCESC CAF    10.6D/S         SCALED AT PI/4
 1196            EXTEND
 1197            DV     EDOT            RESULT SCALED AT 1
 1198            TS     EDOT            SAVE FACTOR IN EDOT FOR R SHRINKAGE
 1199  2         TC     Q               *** RETURN ***
 1200  410.6D/S  DEC    0.23111         10.6 DEGREES/SECOND SCALED AT PI/4
 1201   ENDDAP24 EQUALS
L       JET FAILURE CONTROL LOGIC
 0001            BANK   25
 0002  4         EBANK= DT
R0003  2DETERMINE MODE - +XTRANS, -XTRANS, ASCENT, MANDATORY ROTATION, OR NORMAL
 0004   POLTYPEP CA     BIT7            CHECK +X TRANSLATION
 0005            EXTEND
 0006            RAND   31
 0007            EXTEND
 0008  2         BZF    POSXPOLS
 0009            CA     BIT8            CHECK -X TRANSLATION
 0010            EXTEND
 0011            RAND   31
 0012            EXTEND
 0013  2         BZF    NEGXPOLS        CHECK U,V-MANDATORY AND 4-JET Q,R
 0014            CA     DAPBOOLS        CHECK ASCENT BIT OF DAPBOOLS
 0015            MASK   BIT8
 0016            EXTEND
 0017  2         BZF    NORMATT
 0018   ASCFLGHT INDEX  POLRELOC
 0019            CA     ASCNTPOL
 0020            TCF     +9D
 0021   NORMATT  INDEX  POLRELOC
 0022            CA     NORMLPOL
 0023            TCF     +6
 0024   NEGXPOLS INDEX  POLRELOC
 0025            CA     -XPOLADR
 0026            TCF     +3
 0027   POSXPOLS INDEX  POLRELOC
 0028            CA     +XPOLADR
 0029  2         TS     POLRELOC        RESET POLRELOC TO NEW TABLE ENTRY
 0030            INDEX  POLRELOC        USE POLRELOC POINTER TO FIND AND
 0031            CA     POLTAB1         EXTRACT THE NUMBER OF TESTABLE
 0032            EXTEND                 POLICIES AND SAVE IN LOOPCTR
 0033            MP     BIT7
 0034            MASK   SEVEN
 0035            TS     LOOPCTR
 0036  2         TCF     +4
 0037   POLLOOP  TS     LOOPCTR         RESTORE COUNTER
 0038            EXTEND                 CHANGE EFFECTIVE ADDRESS TO NEXT POLICY
 0039            DIM    POLRELOC
 0040            INDEX  POLRELOC
 0041            CA     POLTAB1         PICK UP ROTATIONAL JETS
 0042            TS     L
 0043            INDEX  POLRELOC
 0044            CA     POLTAB2         PICK UP TRANSLATIONAL JETS (MAY BE NONE)
 0045            EXTEND                 GET ALL JETS USED IN THIS POLICY
 0046            WOR    L               (LOW ORDER 8 BITS ONLY)
 0047            MASK   CH5MASK         TEST FOR POLICY FEASIBILITY -
 0048            CCS    A               REJECT POLICY IF ANY OF THE JETS IT USES
 0049            TCF     +2             ARE THOUGHT TO HAVE FAILED
 0050            TCF    POLFND
 0051            CCS    LOOPCTR         TEST FOR EXISTENCE OF ADDITIONAL
 0052  2         TCF    POLLOOP         TESTABLE POLICY
 0053            EXTEND                 LAST FEASIBLE CHOICE -
 0054  2         DIM    POLRELOC        CREATE UNTESTED POLICY ADDRESS
 0055   POLFND   INDEX  POLRELOC
 0056            CA     POLTAB1
 0057            MASK   LOW8            GET CHANNEL 5 BIT CONFIGURATION FOR
 0058            AD     BIT15           SET SIGN FOR Q,R AXIS FLAG
 0059            TS     JTSONNOW        JETS TO BE TURNED ON IMMEDIATELY
 0060            INDEX  POLRELOC
 0061            CA     POLTAB1
 0062            EXTEND
 0063            MP     BIT4            GET CODE FOR NUMBER OF TORQUING JETS
 0064            CCS    A
 0065            TCF     +2
 0066            TCF    TORKSETP        N=2, CODE=0
 0067            CCS    A
 0068            TCF    1/4JETAC
 0069            CA     1/NJETAC        N=4, CODE=2
 0070            DOUBLE                 N = 1, CODE = 1
 0071            TCF    NJETCORR
 0072   1/4JETAC CA     1/NJETAC        N = 4, CODE = 2
 0073            EXTEND
 0074            MP     BIT14
 0075  2NJETCORR TS     1/NJETAC
 0076   TORKSETP INDEX  POLRELOC
 0077            CA     POLTAB2
 0078            EXTEND
 0079            MP     BIT4            GET CODE FOR NUMBER OF Q-JETS
 0080            INDEX  A
 0081            CA     TORKTABL        GET NUMBER OF Q-JETS FROM TABLE AND
 0082            TS     NO.QJETS        SAVE FOR TORQUE VECTOR RECONSTRUCTION
 0083            CA     L
 0084            EXTEND
 0085            MP     BIT4            GET CODE FOR NUMBER OF R-JETS
 0086            INDEX  A
 0087            CA     TORKTABL        GET NUMBER OF R-JETS FROM TABLE AND
 0088            TS     NO.RJETS        SAVE FOR TORQUE VECTOR RECONSTRUCTION
 0089            CA     L
 0090            EXTEND
 0091            MP     BIT9            GET CHANNEL 5 BIT CONFIGURATION FOR
 0092            AD     BIT15           SET SIGN FOR Q,R AXIS FLAG
 0093  2         TS     JTSATCHG        JETS TO BE TURNED ON AFTER TORQUING
 0094            CA     BBANKSET
 0095            TS     L
 0096            CA     TJETADR
 0097  2         DTCB                   RETURN TO FBANK 24
 0098  4BBANKSET OCTAL  50006
R0099  2TABLE OF Q,R-JET NUMBERS AND DIRECTIONS FOR TORQUE RECONSTRUCTION
 0100   TORKTABL DEC    -4
 0101            DEC    -2
 0102            DEC    -1
 0103            DEC    0
 0104            DEC    +1
 0105            DEC    +2
 0106  2         DEC    +4
R0107  2POLTAB1 LISTS Q,R-AXIS ROTATIONAL JET POLICIES
 0108   POLTAB1  OCTAL    220           JETS  9 14  0  0 NO 2  CTR 0
 0109            OCTAL      6           JETS  2  5  0  0 NO 2  CTR 0
 0110            OCTAL    602           JETS  2 14  0  0 NO 2  CTR 1
 0111            OCTAL  10226           JETS  2  5  9 14 NO 4  CTR 0
 0112            OCTAL  11626           JETS  2  5  9 14 NO 4  CTR 3
 0113            OCTAL    201           JETS  1 14  0  0 NO 2  CTR 0
 0114            OCTAL     44           JETS  5 10  0  0 NO 2  CTR 0
 0115            OCTAL    640           JETS 10 14  0  0 NO 2  CTR 1
 0116            OCTAL  10245           JETS  1  5 10 14 NO 4  CTR 0
 0117            OCTAL  11645           JETS  1  5 10 14 NO 4  CTR 3
 0118            OCTAL    140           JETS 10 13  0  0 NO 2  CTR 0
 0119            OCTAL     11           JETS  1  6  0  0 NO 2  CTR 0
 0120            OCTAL    450           JETS  6 10  0  0 NO 2  CTR 1
 0121            OCTAL  10151           JETS  1  6 10 13 NO 4  CTR 0
 0122            OCTAL  11551           JETS  1  6 10 13 NO 4  CTR 3
 0123            OCTAL    102           JETS  2 13  0  0 NO 2  CTR 0
 0124            OCTAL     30           JETS  6  9  0  0 NO 2  CTR 0
 0125            OCTAL    412           JETS  2  6  0  0 NO 2  CTR 1
 0126            OCTAL  10132           JETS  2  6  9 13 NO 4  CTR 0
 0127            OCTAL  11532           JETS  2  6  9 13 NO 4  CTR 3
 0128            OCTAL    220           JETS  9 14  0  0 NO 2  CTR 0
 0129            OCTAL      6           JETS  2  5  0  0 NO 2  CTR 0
 0130            OCTAL    424           JETS  5  9  0  0 NO 2  CTR 1
 0131            OCTAL  10226           JETS  2  5  9 14 NO 4  CTR 0
 0132            OCTAL  11626           JETS  2  5  9 14 NO 4  CTR 3
 0133            OCTAL     44           JETS  5 10  0  0 NO 2  CTR 0
 0134            OCTAL    201           JETS  1 14  0  0 NO 2  CTR 0
 0135            OCTAL    405           JETS  1  5  0  0 NO 2  CTR 1
 0136            OCTAL  10245           JETS  1  5 10 14 NO 4  CTR 0
 0137            OCTAL  11645           JETS  1  5 10 14 NO 4  CTR 3
 0138            OCTAL    140           JETS 10 13  0  0 NO 2  CTR 0
 0139            OCTAL     11           JETS  1  6  0  0 NO 2  CTR 0
 0140            OCTAL    501           JETS  1 13  0  0 NO 2  CTR 1
 0141            OCTAL  10151           JETS  1  6 10 13 NO 4  CTR 0
 0142            OCTAL  11551           JETS  1  6 10 13 NO 4  CTR 3
 0143            OCTAL     30           JETS  6  9  0  0 NO 2  CTR 0
 0144            OCTAL    102           JETS  2 13  0  0 NO 2  CTR 0
 0145            OCTAL    520           JETS  9 13  0  0 NO 2  CTR 1
 0146            OCTAL  10132           JETS  2  6  9 13 NO 4  CTR 0
 0147            OCTAL  11532           JETS  2  6  9 13 NO 4  CTR 3
 0148            OCTAL   4046           JETS  2  5 10  0 NO 1  CTR 0
 0149            OCTAL   4242           JETS  2 10 14  0 NO 1  CTR 0
 0150            OCTAL   4600           JETS 14  0  0  0 NO 1  CTR 1
 0151            OCTAL    204           JETS  5 14  0  0 NO 2  CTR 0
 0152            OCTAL   1604           JETS  5 14  0  0 NO 2  CTR 3
 0153            OCTAL   4142           JETS  2 10 13  0 NO 1  CTR 0
 0154            OCTAL   4052           JETS  2  6 10  0 NO 1  CTR 0
 0155            OCTAL   4410           JETS  6  0  0  0 NO 1  CTR 1
 0156            OCTAL    110           JETS  6 13  0  0 NO 2  CTR 0
 0157            OCTAL   1510           JETS  6 13  0  0 NO 2  CTR 3
 0158            OCTAL   4211           JETS  1  6 14  0 NO 1  CTR 0
 0159            OCTAL   4250           JETS  6 10 14  0 NO 1  CTR 0
 0160            OCTAL   4440           JETS 10  0  0  0 NO 1  CTR 1
 0161            OCTAL     41           JETS  1 10  0  0 NO 2  CTR 0
 0162            OCTAL   1441           JETS  1 10  0  0 NO 2  CTR 3
 0163            OCTAL   4230           JETS  6  9 14  0 NO 1  CTR 0
 0164            OCTAL   4212           JETS  2  6 14  0 NO 1  CTR 0
 0165            OCTAL   4402           JETS  2  0  0  0 NO 1  CTR 1
 0166            OCTAL     22           JETS  2  9  0  0 NO 2  CTR 0
 0167            OCTAL   1422           JETS  2  9  0  0 NO 2  CTR 3
 0168            OCTAL   4221           JETS  1  9 14  0 NO 1  CTR 0
 0169            OCTAL   4025           JETS  1  5  9  0 NO 1  CTR 0
 0170            OCTAL   4404           JETS  5  0  0  0 NO 1  CTR 1
 0171            OCTAL    204           JETS  5 14  0  0 NO 2  CTR 0
 0172            OCTAL   1604           JETS  5 14  0  0 NO 2  CTR 3
 0173            OCTAL   4031           JETS  1  6  9  0 NO 1  CTR 0
 0174            OCTAL   4121           JETS  1  9 13  0 NO 1  CTR 0
 0175            OCTAL   4500           JETS 13  0  0  0 NO 1  CTR 1
 0176            OCTAL    110           JETS  6 13  0  0 NO 2  CTR 0
 0177            OCTAL   1510           JETS  6 13  0  0 NO 2  CTR 3
 0178            OCTAL   4144           JETS  5 10 13  0 NO 1  CTR 0
 0179            OCTAL   4105           JETS  1  5 13  0 NO 1  CTR 0
 0180            OCTAL   4401           JETS  1  0  0  0 NO 1  CTR 1
 0181            OCTAL     41           JETS  1 10  0  0 NO 2  CTR 0
 0182            OCTAL   1441           JETS  1 10  0  0 NO 2  CTR 3
 0183            OCTAL   4106           JETS  2  5 13  0 NO 1  CTR 0
 0184            OCTAL   4124           JETS  5  9 13  0 NO 1  CTR 0
 0185            OCTAL   4420           JETS  9  0  0  0 NO 1  CTR 1
 0186            OCTAL     22           JETS  2  9  0  0 NO 2  CTR 0
 0187            OCTAL   1422           JETS  2  9  0  0 NO 2  CTR 3
 0188            OCTAL   4004           JETS  5  0  0  0 NO 1  CTR 0
 0189            OCTAL   4200           JETS 14  0  0  0 NO 1  CTR 0
 0190            OCTAL    604           JETS  5 14  0  0 NO 2  CTR 1
 0191            OCTAL   4001           JETS  1  0  0  0 NO 1  CTR 0
 0192            OCTAL   4040           JETS 10  0  0  0 NO 1  CTR 0
 0193            OCTAL    441           JETS  1 10  0  0 NO 2  CTR 1
 0194            OCTAL   4100           JETS 13  0  0  0 NO 1  CTR 0
 0195            OCTAL   4010           JETS  6  0  0  0 NO 1  CTR 0
 0196            OCTAL    510           JETS  6 13  0  0 NO 2  CTR 1
 0197            OCTAL   4020           JETS  9  0  0  0 NO 1  CTR 0
 0198            OCTAL   4002           JETS  2  0  0  0 NO 1  CTR 0
 0199            OCTAL    422           JETS  2  9  0  0 NO 2  CTR 1
 0200            OCTAL     24           JETS  5  9  0  0 NO 2  CTR 0
 0201            OCTAL    220           JETS  9 14  0  0 NO 2  CTR 0
 0202            OCTAL      6           JETS  2  5  0  0 NO 2  CTR 0
 0203            OCTAL   1202           JETS  2 14  0  0 NO 2  CTR 2
 0204            OCTAL      5           JETS  1  5  0  0 NO 2  CTR 0
 0205            OCTAL    201           JETS  1 14  0  0 NO 2  CTR 0
 0206            OCTAL     44           JETS  5 10  0  0 NO 2  CTR 0
 0207            OCTAL   1240           JETS 10 14  0  0 NO 2  CTR 2
 0208            OCTAL    101           JETS  1 13  0  0 NO 2  CTR 0
 0209            OCTAL    140           JETS 10 13  0  0 NO 2  CTR 0
 0210            OCTAL     11           JETS  1  6  0  0 NO 2  CTR 0
 0211            OCTAL   1050           JETS  6 10  0  0 NO 2  CTR 2
 0212            OCTAL    120           JETS  9 13  0  0 NO 2  CTR 0
 0213            OCTAL    102           JETS  2 13  0  0 NO 2  CTR 0
 0214            OCTAL     30           JETS  6  9  0  0 NO 2  CTR 0
 0215            OCTAL   1012           JETS  2  6  0  0 NO 2  CTR 2
 0216            OCTAL     24           JETS  5  9  0  0 NO 2  CTR 0
 0217            OCTAL    202           JETS  2 14  0  0 NO 2  CTR 0
 0218            OCTAL    220           JETS  9 14  0  0 NO 2  CTR 0
 0219            OCTAL   1006           JETS  2  5  0  0 NO 2  CTR 2
 0220            OCTAL  11626           JETS  2  5  9 14 NO 4  CTR 3
 0221            OCTAL      5           JETS  1  5  0  0 NO 2  CTR 0
 0222            OCTAL    240           JETS 10 14  0  0 NO 2  CTR 0
 0223            OCTAL    201           JETS  1 14  0  0 NO 2  CTR 0
 0224            OCTAL   1044           JETS  5 10  0  0 NO 2  CTR 2
 0225            OCTAL  11645           JETS  1  5 10 14 NO 4  CTR 3
 0226            OCTAL     50           JETS  6 10  0  0 NO 2  CTR 0
 0227            OCTAL    101           JETS  1 13  0  0 NO 2  CTR 0
 0228            OCTAL    140           JETS 10 13  0  0 NO 2  CTR 0
 0229            OCTAL   1011           JETS  1  6  0  0 NO 2  CTR 2
 0230            OCTAL  11551           JETS  1  6 10 13 NO 4  CTR 3
 0231            OCTAL    120           JETS  9 13  0  0 NO 2  CTR 0
 0232            OCTAL     12           JETS  2  6  0  0 NO 2  CTR 0
 0233            OCTAL    102           JETS  2 13  0  0 NO 2  CTR 0
 0234            OCTAL   1030           JETS  6  9  0  0 NO 2  CTR 2
 0235  2         OCTAL  11532           JETS  2  6  9 13 NO 4  CTR 3
R0236  2POLTAB2 LISTS Q,R-AXIS TRANSLATIONAL POLICIES
 0237   POLTAB2  OCTAL  25610           JETS  6 14  QNO  2  RNO  0
 0238            OCTAL  25442           JETS  2 10  QNO  2  RNO  0
 0239            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0240            OCTAL  31610           JETS  6 14  QNO  4  RNO  0
 0241            OCTAL  31442           JETS  2 10  QNO  4  RNO  0
 0242            OCTAL  16610           JETS  6 14  QNO  0  RNO  2
 0243            OCTAL  16442           JETS  2 10  QNO  0  RNO  2
 0244            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0245            OCTAL  17210           JETS  6 14  QNO  0  RNO  4
 0246            OCTAL  17042           JETS  2 10  QNO  0  RNO  4
 0247            OCTAL   5442           JETS  2 10  QNO- 2  RNO  0
 0248            OCTAL   5610           JETS  6 14  QNO- 2  RNO  0
 0249            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0250            OCTAL   1610           JETS  6 14  QNO- 4  RNO  0
 0251            OCTAL   1442           JETS  2 10  QNO- 4  RNO  0
 0252            OCTAL  14442           JETS  2 10  QNO  0  RNO- 2
 0253            OCTAL  14610           JETS  6 14  QNO  0  RNO- 2
 0254            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0255            OCTAL  14210           JETS  6 14  QNO  0  RNO- 4
 0256            OCTAL  14042           JETS  2 10  QNO  0  RNO- 4
 0257            OCTAL  25421           JETS  1  9  QNO  2  RNO  0
 0258            OCTAL  25504           JETS  5 13  QNO  2  RNO  0
 0259            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0260            OCTAL  31504           JETS  5 13  QNO  4  RNO  0
 0261            OCTAL  31421           JETS  1  9  QNO  4  RNO  0
 0262            OCTAL  16504           JETS  5 13  QNO  0  RNO  2
 0263            OCTAL  16421           JETS  1  9  QNO  0  RNO  2
 0264            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0265            OCTAL  17104           JETS  5 13  QNO  0  RNO  4
 0266            OCTAL  17021           JETS  1  9  QNO  0  RNO  4
 0267            OCTAL   5504           JETS  5 13  QNO- 2  RNO  0
 0268            OCTAL   5421           JETS  1  9  QNO- 2  RNO  0
 0269            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0270            OCTAL   1504           JETS  5 13  QNO- 4  RNO  0
 0271            OCTAL   1421           JETS  1  9  QNO- 4  RNO  0
 0272            OCTAL  14421           JETS  1  9  QNO  0  RNO- 2
 0273            OCTAL  14504           JETS  5 13  QNO  0  RNO- 2
 0274            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0275            OCTAL  14104           JETS  5 13  QNO  0  RNO- 4
 0276            OCTAL  14021           JETS  1  9  QNO  0  RNO- 4
 0277            OCTAL  22042           JETS  2 10  QNO  1  RNO  1
 0278            OCTAL  22042           JETS  2 10  QNO  1  RNO  1
 0279            OCTAL  22210           JETS  6 14  QNO  1  RNO  1
 0280            OCTAL  26610           JETS  6 14  QNO  2  RNO  2
 0281            OCTAL  26442           JETS  2 10  QNO  2  RNO  2
 0282            OCTAL  11042           JETS  2 10  QNO- 1  RNO- 1
 0283            OCTAL  11042           JETS  2 10  QNO- 1  RNO- 1
 0284            OCTAL  11210           JETS  6 14  QNO- 1  RNO- 1
 0285            OCTAL   4610           JETS  6 14  QNO- 2  RNO- 2
 0286            OCTAL   4442           JETS  2 10  QNO- 2  RNO- 2
 0287            OCTAL  12210           JETS  6 14  QNO- 1  RNO  1
 0288            OCTAL  12210           JETS  6 14  QNO- 1  RNO  1
 0289            OCTAL  12042           JETS  2 10  QNO- 1  RNO  1
 0290            OCTAL   6442           JETS  2 10  QNO- 2  RNO  2
 0291            OCTAL   6610           JETS  6 14  QNO- 2  RNO  2
 0292            OCTAL  21210           JETS  6 14  QNO  1  RNO- 1
 0293            OCTAL  21210           JETS  6 14  QNO  1  RNO- 1
 0294            OCTAL  21042           JETS  2 10  QNO  1  RNO- 1
 0295            OCTAL  24442           JETS  2 10  QNO  2  RNO- 2
 0296            OCTAL  24610           JETS  6 14  QNO  2  RNO- 2
 0297            OCTAL  22021           JETS  1  9  QNO  1  RNO  1
 0298            OCTAL  22021           JETS  1  9  QNO  1  RNO  1
 0299            OCTAL  22104           JETS  5 13  QNO  1  RNO  1
 0300            OCTAL  26504           JETS  5 13  QNO  2  RNO  2
 0301            OCTAL  26421           JETS  1  9  QNO  2  RNO  2
 0302            OCTAL  11021           JETS  1  9  QNO- 1  RNO- 1
 0303            OCTAL  11021           JETS  1  9  QNO- 1  RNO- 1
 0304            OCTAL  11104           JETS  5 13  QNO- 1  RNO- 1
 0305            OCTAL   4504           JETS  5 13  QNO- 2  RNO- 2
 0306            OCTAL   4421           JETS  1  9  QNO- 2  RNO- 2
 0307            OCTAL  12104           JETS  5 13  QNO- 1  RNO  1
 0308            OCTAL  12104           JETS  5 13  QNO- 1  RNO  1
 0309            OCTAL  12021           JETS  1  9  QNO- 1  RNO  1
 0310            OCTAL   6421           JETS  1  9  QNO- 2  RNO  2
 0311            OCTAL   6504           JETS  5 13  QNO- 2  RNO  2
 0312            OCTAL  21104           JETS  5 13  QNO  1  RNO- 1
 0313            OCTAL  21104           JETS  5 13  QNO  1  RNO- 1
 0314            OCTAL  21021           JETS  1  9  QNO  1  RNO- 1
 0315            OCTAL  24421           JETS  1  9  QNO  2  RNO- 2
 0316            OCTAL  24504           JETS  5 13  QNO  2  RNO- 2
 0317            OCTAL  22000           JETS  0  0  QNO  1  RNO  1
 0318            OCTAL  22000           JETS  0  0  QNO  1  RNO  1
 0319            OCTAL  26400           JETS  0  0  QNO  2  RNO  2
 0320            OCTAL  12000           JETS  0  0  QNO- 1  RNO  1
 0321            OCTAL  12000           JETS  0  0  QNO- 1  RNO  1
 0322            OCTAL   6400           JETS  0  0  QNO- 2  RNO  2
 0323            OCTAL  11000           JETS  0  0  QNO- 1  RNO- 1
 0324            OCTAL  11000           JETS  0  0  QNO- 1  RNO- 1
 0325            OCTAL   4400           JETS  0  0  QNO- 2  RNO- 2
 0326            OCTAL  21000           JETS  0  0  QNO  1  RNO- 1
 0327            OCTAL  21000           JETS  0  0  QNO  1  RNO- 1
 0328            OCTAL  24400           JETS  0  0  QNO  2  RNO- 2
 0329            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0330            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0331            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0332            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0333            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0334            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0335            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0336            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0337            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0338            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0339            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0340            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0341            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0342            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0343            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0344            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0345            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0346            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0347            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0348            OCTAL  25400           JETS  0  0  QNO  2  RNO  0
 0349            OCTAL  31400           JETS  0  0  QNO  4  RNO  0
 0350            OCTAL  16400           JETS  0  0  QNO  0  RND  2
 0351            OCTAL  16400           JETS  0  0  QNO  0  RND  2
 0352            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0353            OCTAL  16400           JETS  0  0  QNO  0  RNO  2
 0354            OCTAL  17000           JETS  0  0  QNO  0  RNO  4
 0355            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0356            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0357            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0358            OCTAL   5400           JETS  0  0  QNO- 2  RNO  0
 0359            OCTAL   1400           JETS  0  0  QNO- 4  RNO  0
 0360            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0361            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0362            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0363            OCTAL  14400           JETS  0  0  QNO  0  RNO- 2
 0364  4         OCTAL  14000           JETS  0  0  QNO  0  RNO- 4
R0365  2NORMLPOL LISTS THE ENTRY POINTS OF NORMAL POLICIES
 0366            DEC    127
 0367            DEC    126
 0368            DEC    88
 0369            DEC    88
 0370            DEC    122
 0371            DEC    121
 0372            DEC    85
 0373   NORMLPOL DEC    85
 0374            DEC    91
 0375            DEC    91
 0376            DEC    82
 0377            DEC    82
 0378            DEC    117
 0379            DEC    116
 0380            DEC    112
 0381  2         DEC    111
R0382  2ASCNTPOL LISTS THE ENTRY POINTS UNDER ASCENT CONDITIONS
 0383            DEC    127
 0384            DEC    107
 0385            DEC    88
 0386            DEC    88
 0387            DEC    122
 0388            DEC    103
 0389            DEC    85
 0390   ASCNTPOL DEC    85
 0391            DEC    91
 0392            DEC    91
 0393            DEC    82
 0394            DEC    82
 0395            DEC    117
 0396            DEC    99
 0397            DEC    112
 0398  2         DEC    95
R0399  2+XPOLADR LISTS THE ENTRY POINTS UNDER +X TRANSLATION CONDITIONS
 0400            DEC    19
 0401            DEC    17
 0402            DEC    49
 0403            DEC    47
 0404            DEC    14
 0405            DEC    12
 0406            DEC    54
 0407   +XPOLADR DEC    52
 0408            DEC    59
 0409            DEC    57
 0410            DEC    44
 0411            DEC    42
 0412            DEC    9
 0413            DEC    7
 0414            DEC    4
 0415  2         DEC    2
R0416  2-XPOLADR LISTS THE ENTRY POINTS UNDER -X TRANSLATION CONDITIONS
 0417            DEC    39
 0418            DEC    37
 0419            DEC    69
 0420            DEC    67
 0421            DEC    34
 0422            DEC    32
 0423            DEC    74
 0424   -XPOLADR DEC    72
 0425            DEC    79
 0426            DEC    77
 0427            DEC    64
 0428            DEC    62
 0429            DEC    29
 0430            DEC    27
 0431            DEC    24
 0432            DEC    22
L      2KALMAN FILTER FOR LEM DAP
R0001   THE FOLLOWING T5RUPT ENTRY BEGINS THE PROGRAM WHICH INITIALIZES THE KALM
 0002  9AN FILTER AND SETS UP A P-AXIS RUPT TO
R0003  2OCCUR 20 MS FROM ITS BEGINNING.
 0004  2         BANK   26
 0005   FILTINIT CAF    MS20F           RESET TIMER IMMEDIATELY: DT = 20 MS
 0006  2         TS     TIME5
 0007            LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0008            EXTEND
 0009  2         QXCH   QRUPT
 0010            EXTEND                 SET UP FOR P-AXIS RUPT
 0011            DCA    PAX/FILT
 0012  2         DXCH   T5ADR
 0013            CAF    FIRSTADR        SET UP TO AVOID DT CALCULATION DURING
 0014  2         TS     STEERADR        KALMAN FILTER INITIALIZATION PASS
R0015   *** PLACEHOLDER FOR REV 12 DELETION ***
R0016   *** PLACEHOLDER FOR REV 12 DELETION ***
 0017  2         TCF    FILSTART
R0018   *** PLACEHOLDER FOR REV 12 DELETION ***
 0019  2FIRSTADR GENADR FILFIRST
R0020   THE FOLLOWING T5RUPT ENTRY BEGINS THE KALMAN FILTER PROGRAM.  THIS SECTI
 0021  9ON ALSO SETS UP A T5RUPT TO OCCUR 20 MS
R0022  2FROM ITS BEGINNING AND SETS IT TO GO TO THE LOCATION AT THE TOP OF THE P
 0023  9OST FILTER RUPT LIST.
 0024  2MOSTPASS GENADR DTCALC          WORD IN FILTPASS FOR THESE PASSES
 0025   FILTER   CAF    MS20F           RESET TIMER IMMEDIATELY: DT = 20 MS
 0026  2         TS     TIME5
 0027            LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0028            EXTEND
 0029  2         QXCH   QRUPT
 0030            EXTEND                 SET RUPT ADDRESS TO TOP OF
 0031            DCA    PFRPTLST        POST FILTER RUPT LIST
 0032  2         DXCH   T5ADR
 0033            DXCH   PFRPTLST        ROTATE 2CADR'S IN POST FILTER RUPT LIST
 0034            DXCH   PFRPTLST +6
 0035            DXCH   PFRPTLST +4
 0036            DXCH   PFRPTLST +2
 0037  2         DXCH   PFRPTLST
R0038  2BEGIN THE KALMAN FILTER BY READING CDU ANGLES AND TIME.
 0039   FILSTART TC     T6JOBCHK        CHECK T6 CLOCK FOR P-AXIS ACTIVITY
 0040            EXTEND
 0041            DCA    CDUY            STORE CDUY AND CDUZ AT PI AND IN 2,S COM
 0042            DXCH   STORCDUY
 0043            EXTEND                 BEGIN READING THE CLOCK TO GET TIME
 0044            READ   4                 INCREMENT.
 0045            TS     L
 0046            EXTEND
 0047            RXOR   4               CHECK TO SEE IF CH 4 WAS IN TRANSITION
 0048            EXTEND                   WHEN IT WAS FIRST READ.
 0049            BZF    +4              BRANCH IF TIME WAS THE SAME IN 2 READS.
 0050            EXTEND
 0051            READ   4
 0052            TS     L               THIS TIME READ ALWAYS GIVES GOOD NO.
 0053  2         TC     STEERADR        SKIP DTCALC DURING INITIAL PASS
 0054   DTCALC   CS     L
 0055            AD     DAPTIME         A CONTAINS THE TIME DIFFERENCE (DT)
 0056            LXCH   DAPTIME           SINCE THE LAST FILTER.
 0057            EXTEND
 0058            BZMF   +3
 0059            AD     NEG1/2          THIS IS ADDING -1.0 TO -DT AND ACCOUNTS
 0060  2         AD     NEG1/2          FOR AN OVERFLOW INTO CHANNEL 5
R0061  2SCALING OF DELTA T FOR KALMAN FILTER IS 1/8 SECOND.
 0062            EXTEND                 TIME NOW SCALED AT 5.12 SECONDS
 0063            MP     BIT7            FIRST RESCALE TO 5.12/64
 0064            CS     .64
 0065            EXTEND                 THEN RESCALE TO 5.12/(64*.64) OR
 0066            MP     L               5.12/40.96 WHICH IS THE SAME AS
 0067  2         TS     DT              DT SCALED AT 1/8
R0068  2SET UP FILTER WEIGHTING VECTOR FOR THIS FILTER PASS.
 0069            CCS    WPOINTER        TEST FOR WEIGHTING VECTOR STEADY-STATE
 0070            TCF    MOVEWGTS        POINTER NOT YET ZERO (MULTIPLE OF THREE)
 0071   PAX/FILT 2CADR  PAXIS           (ROOM FOR 2CADR IN CCS HOLES)
 0072  2         TCF    FLTZAXIS        STEADY-STATE ALREADY, NO UPDATING AGAIN
 0073   MOVEWGTS CS     THREE           SET UP POINTER FOR THIS PASS
 0074  2         ADS    WPOINTER        (NEVER GETS BELOW ZERO HERE)
 0075            EXTEND                 WPOINTER IS INDEX = 87 FIRST TIME HERE
 0076            INDEX  WPOINTER        AND IS DECREASED BY 3 EVERY FILTER PASS
 0077            DCA    WVECTOR         UNTIL THE STEADY-STATE IS REACHED.
 0078            DXCH   W0              MOVE IN NEW W0,W1
 0079            INDEX  WPOINTER
 0080            CAF    WVECTOR +2
 0081  2         TS     W2              MOVE IN NEW W2
 0082   FLTZAXIS CAF    TWO             SET UP INDEXER FOR D.P. PICKUP AND TO
 0083  2         TS     QRCNTR          INDICATE Z-AXIS FILTER PASS
 0084  2         TCF    FLTYAXIS
 0085   GOYFILTR CAF    ZERO            SET INDEXER FOR Y-AXIS
 0086  2         TS     QRCNTR
 0087  2         TC     T6JOBCHK        CHECK T6 CLOCK FOR P-AXIS ACTIVITY
 0088   FLTYAXIS INDEX  QRCNTR
 0089            DXCH   CDUYFIL         THETA IS D.P. SCALED AT 2 PI RADIANS
 0090            DXCH   CDU
 0091            INDEX  QRCNTR            .
 0092            DXCH   DCDUYFIL        THETA IS D.P. SCALED AT PI/4 RAD/SEC
 0093            DXCH   CDUDOT
 0094            INDEX  QRCNTR           ..                                 2
 0095            DXCH   D2CDUYFL        THETA IS D.P. SCALED AT PI/8 RAD/SEC
 0096            DXCH   CDU2DOT
 0097            INDEX  QRCNTR           ...                        7       3
 0098            CAE    Y3DOT           THETA IS S.P. SCALED AT PI/2 RAD/SEC
 0099  2         XCH    CDU3DOT
R0100   NOTE THAT THE FILTERED VARIABLES ARE READ DESTRUCTIVELY FOR SPEED AND EF
 0101  9FICIENCY AND THAT Y3DOT IS NOT UPDATED,
R0102   SO IT MUST BE READ NON-DESTRUCTIVELY BUT NEED NOT BE RESTORED AFTER EACH
 0103  9 KALMAN FILTER PASS.
P0104  2INTEGRATION EXTRAPOLATION EQUATIONS:
 0105   KLMNFLTR CAE    CDU2DOT         A SCALED AT PI/8 (USE S.P.)
 0106            EXTEND
 0107            MP     DT              ADT SCALED AT PI/64 OR .5ADT AT PI/128
 0108            EXTEND
 0109            MP     BIT10           RESCALE BY RIGHT SHIFT 5
 0110            AD     CDUDOT          W + .5ADT SCALED AT PI/4
 0111            EXTEND
 0112            MP     DT              (W + .5ADT)DT SCALED AT PI/32
 0113            EXTEND
 0114            MP     BIT9            RESCALE BY RIGHT SHIFT 6 (KEEP D.P.)
 0115  2         DAS    CDU             CDU = CDU + (W + .5ADT)DT SCALED AT 2PI
 0116            CAE    CDU3DOT         ADOT SCALED AT PI/2(7)
 0117            EXTEND
 0118            MP     DT              .5ADOTDT SCALED AT PI/2(11)
 0119            TS     ITEMP5          (SAVE FOR ALPHA INTEGRATION)
 0120            EXTEND
 0121            MP     BIT7            RESCALE BY RIGHT SHIFT 8
 0122            AD     CDU2DOT         A + .5ADOTDT SCALED AT PI/8
 0123            EXTEND
 0124            MP     DT              (A + .5ADOTDT)DT SCALED AT PI/64
 0125            EXTEND
 0126            MP     BIT11           RESCALE BY RIGHT SHIFT 4 (KEEP D.P.)
 0127  2         DAS    CDUDOT          W = W + (A + .5ADOTDT)DT SCALED AT PI/4
 0128            CAE    ITEMP5          ADOTDT SCALED AT PI/2(10) (FROM ABOVE)
 0129            EXTEND
 0130            MP     BIT8            RESCALE BY RIGHT SHIFT 7 (KEEP D.P.)
 0131            DAS    CDU2DOT         A = A + ADOTDT SCALED AT PI/8
P0132  2WEIGHTING VECTOR ADJUSTMENT EQUATIONS:
 0133            EXTEND                 CONVERT CDU INTEGRATED VALUE FROM DOUBLE
 0134            DCA    CDU             PRECISION SCALED AT 2PI IN ONES COMPLE-
 0135            TC     ONETOTWO        MENT TO SINGLE PRECISION SCALED AT PI
 0136            CAE    STORCDUZ        IN TWOS COMPLEMENT, THEN DIFFERENCE WITH
 0137            EXTEND                 STORED CDU REGISTER READING TO GET A
 0138            MSU    ITEMP5          SINGLE PRECISION ONES COMPLEMENT RESULT
 0139  2         TS     DPDIFF          SCALED AT PI RADIANS (UPPER HALF)
 0140            CS     CDU +1          CREATE LOW ORDER WORD OF D.P. DIFFERENCE
 0141            DOUBLE                 ONES COMPLEMENT SCALED AT PI RADIANS AND
 0142  2         XCH    DPDIFF +1       USE S.P. RESULT ABOVE AS HIGH ORDER WORD
 0143            EXTEND                 RESCALE DPDIFF TO PI
 0144            DCA    DPDIFF
 0145            DDOUBL
 0146            LXCH   ITEMP5          SAVE LOW ORDER WORD FOR D.P. MULTIPLY
 0147            EXTEND
 0148            MP     W0              CDU = CDU + DPDIFF (D.P.) * W0 (S.P.)
 0149            DAS    CDU
 0150            CAE    ITEMP5          W0 IS SCALED AT 2
 0151            EXTEND                 DPDIFF IS RESCALED TO PI
 0152            MP     W0              W0*DPDIFF IS SCALED AT 2PI (AS CDU)
 0153            ADS    CDU + 1
 0154            TS     L
 0155            TCF     +2
 0156  2         ADS    CDU
 0157            CAE    DPDIFF          RESCALE DPDIFF TO PI/128
 0158            EXTEND
 0159            MP     BIT9            DPDIFF (D.P.) * 256
 0160            LXCH   ITEMP5
 0161            CAE    DPDIFF +1
 0162            EXTEND
 0163            MP     BIT9
 0164            AD     ITEMP5
 0165  2         LXCH   ITEMP5
 0166            EXTEND                  .     .
 0167            MP     W1              CDU = CDU + DPDIFF (D.P.) * W1 (S.P.)
 0168            DAS    CDUDOT
 0169            CAE    ITEMP5          W1 IS SCALED AT 32
 0170            EXTEND                 DPDIFF IS RESCALED TO PI/128
 0171            MP     W1              W1*DPDIFF IS SCALED AT PI/4 (AS CDUDOT)
 0172            ADS    CDUDOT +1
 0173            TS     L
 0174            TCF     +2
 0175  2         ADS    CDUDOT
 0176            CAE    DPDIFF          RESCALE DPDIFF TO PI/64
 0177            EXTEND
 0178            MP     BIT8            DPDIFF (D.P.) * 128
 0179            LXCH   ITEMP5
 0180            CAE    DPDIFF +1
 0181            EXTEND
 0182            MP     BIT8
 0183            AD     ITEMP5
 0184  2         LXCH   ITEMP5
 0185            EXTEND                  ..    ..
 0186            MP     W2              CDU = CDU + DPDIFF (D.P.) * W2 (S.P.)
 0187            DAS    CDU2DOT
 0188            CAE    ITEMP5          W2 IS SCALED AT 8
 0189            EXTEND
 0190            MP     W2              W2*DPDIFF IS SCALED AT PI/8 (AS CDU2DOT)
 0191            ADS    CDU2DOT +1
 0192            TS     L
 0193            TCF     +2
 0194  2         ADS    CDU2DOT
R0195  2RESTORE VARIABLES AND TEST FOR COMPLETION OR ADDITIONAL AXIS.
 0196   FILTAXIS DXCH   CDU
 0197            INDEX  QRCNTR          THETA IS D.P. SCALED AT 2 PI RADIANS
 0198            DXCH   CDUYFIL
 0199            DXCH   CDUDOT            .
 0200            INDEX  QRCNTR          THETA IS D.P. SCALED AT PI/4 RAD/SEC
 0201            DXCH   DCDUYFIL
 0202            DXCH   CDU2DOT          ..                                 2
 0203            INDEX  QRCNTR          THETA IS D.P. SCALED AT PI/8 RAD/SEC
 0204  2         DXCH   D2CDUYFL
 0205            XCH    STORCDUY        INTERCHANGE CDU READINGS
 0206            XCH    STORCDUZ
 0207  2         XCH    STORCDUY
 0208            CCS    ITEMP6          ITEMP6 IS AXIS INDEXER
 0209  2         TCF    GOYFILTR        IF 2, Y-AXIS STILL TO GO
 0210            CS     T5ADR           IF THE TRIM GIMBAL CONTROL RUPT IS NEXT,
 0211            AD     GTS2CADR        DO THE Q,R-AXIS STATE TRANSFORMATIONS
 0212            EXTEND                 AND THE 20 MS STATE EXTRAPOLATION
 0213            BZF    GIMBAL
 0214  2         TCF    RESUME          OTHERWISE, RESUME
R0215  2SUBROUTINE FOR FILTER WHICH TAKES 1 COMPLEMENT NUMBER INTO A 2 COMP.
 0216   ONETOTWO DDOUBL                 SEE RTB OP CODES IN BANK 15 FOR NOTES ON
 0217            CCS    A                 THIS COMPUTATION.
 0218            AD     ONE
 0219            TCF    +2
 0220            COM
 0221            TS     ITEMP5
 0222            TCF    +4
 0223            INDEX  A
 0224            CAF    LIMITS
 0225            ADS    ITEMP5
 0226  2         TC     Q               RETURN
R0227  2THIS PROGRAM INITIALIZES THE KALMAN FILTER PROGRAM.
 0228   FILFIRST LXCH   DAPTIME         INITIALIZE TIME.
 0229            CAF    POINT=90        INITIALIZE THE WEIGHTING VECTOR POINTER
 0230            TS     WPOINTER
 0231            CAF    MOSTPASS        SET UP FOR NEXT PASSES
 0232            TS     STEERADR
 0233            EXTEND                 SET UP POST FILTER RUPT LIST
 0234            DCA    DGTSFADR
 0235            DXCH   PFRPTLST
 0236            EXTEND
 0237            DCA    PAX/FILT
 0238            DXCH   PFRPTLST +2
 0239            EXTEND
 0240            DCA    PAX/FILT
 0241            DXCH   PFRPTLST +6
 0242            EXTEND
 0243            DCA    GTS2CADR
 0244            DXCH   PFRPTLST +4
 0245            EXTEND                 CHANGE POST P FILTER TO FILTER
 0246            DCA    POSTPFIL
 0247  2         DXCH   PFILTADR
 0248            CAE    STORCDUY
 0249            EXTEND
 0250            MP     BIT14
 0251            DXCH   CDUYFIL         INITIALIZE THE STATE VECTOR TO CDU VALUE
 0252            CAE    STORCDUZ
 0253            EXTEND
 0254            MP     BIT14
 0255            DXCH   CDUZFIL
 0256            CA     ZERO
 0257            TS     DCDUYFIL        INITIALIZE THE DERIVATIVES OF THE STATE
 0258            TS     DCDUYFIL +1
 0259            TS     DCDUZFIL
 0260            TS     DCDUZFIL +1
 0261            TS     D2CDUYFL
 0262            TS     D2CDUYFL +1
 0263            TS     D2CDUZFL
 0264            TS     D2CDUZFL +1
 0265            TS     Y3DOT
 0266            TS     Z3DOT
 0267            TS     NEGUQ
 0268            TS     NEGUR
 0269  4         TCF    RESUME
 0270   .64      DEC    0.64000
 0271   BIT12-13 OCTAL  14000
 0272   POINT=90 DEC    90              POINTER INITIALIZED ONE GROUP PAST END
 0273   MS20F    OCTAL  37776
 0274   MS30F    OCTAL  37775
 0275   DGTSFADR 2CADR  DGTS
 0276   PAXISADR GENADR PAXIS
 0277   GTS2CADR 2CADR  GTS
 0278   POSTPFIL 2CADR  FILTER
P0279   THE KALMAN FILTER WEIGHTINF VECTORS ARE LISTED IN THE FOLLOWING TABLE AL
 0280  9ONG WITH THE TIME FROM THE LAST FILTER
R0281   INITIALIZATION FOR WHICH THEY ARE TO BE USED.  (THE VECTORS ARE STORED I
 0282  9N ORDERED TRIPLES (W0,W1,W2) IN
R0283  2DESCENDING ORDER IN TIME WITH THE STEADY STATE VALUES AT THE TOP.)
R0284   THE COMPONENTS ARE SCALED AS FOLLOWS:
R0285            W0 : SCALED AT  2
R0286            W1 : SCALED AT 32
R0287  2         W2 : SCALED AT  8
 0288   WVECTOR  DEC    0.18608         W0 FROM RELATIVE TIME 1.5 SECS OR MORE
 0289            DEC    0.02696         W1 FROM RELATIVE TIME 1.5 SECS OR MORE
 0290            DEC    0.17105         W2 FROM RELATIVE TIME 1.5 SECS OR MORE
 0291            DEC    0.14358         W0 AT RELATIVE TIME = 1.45 SECONDS
 0292            DEC    0.02890         W1 AT RELATIVE TIME = 1.45 SECONDS
 0293            DEC    0.17727         W2 AT RELATIVE TIME = 1.45 SECONDS
 0294            DEC    0.14565         W0 AT RELATIVE TIME = 1.40 SECONDS
 0295            DEC    0.02959         W1 AT RELATIVE TIME = 1.40 SECONDS
 0296            DEC    0.18129         W2 AT RELATIVE TIME = 1.40 SECONDS
 0297            DEC    0.14809         W0 AT RELATIVE TIME = 1.35 SECONDS
 0298            DEC    0.30479         W1 AT RELATIVE TIME = 1.35 SECONDS
 0299            DEC    0.18678         W2 AT RELATIVE TIME = 1.35 SECONDS
 0300            DEC    0.15090         W0 AT RELATIVE TIME = 1.30 SECONDS
 0301            DEC    0.03154         W1 AT RELATIVE TIME = 1.30 SECONDS
 0302            DEC    0.19403         W2 AT RELATIVE TIME = 1.30 SECONDS
 0303            DEC    0.15409         W0 AT RELATIVE TIME = 1.25 SECONDS
 0304            DEC    0.03283         W1 AT RELATIVE TIME = 1.25 SECONDS
 0305            DEC    0.20340         W2 AT RELATIVE TIME = 1.25 SECONDS
 0306            DEC    0.15767         W0 AT RELATIVE TIME = 1.20 SECONDS
 0307            DEC    0.03437         W1 AT RELATIVE TIME = 1.20 SECONDS
 0308            DEC    0.21525         W2 AT RELATIVE TIME = 1.20 SECONDS
 0309            DEC    0.16163         W0 AT RELATIVE TIME = 1.15 SECONDS
 0310            DEC    0.03616         W1 AT RELATIVE TIME = 1.15 SECONDS
 0311            DEC    0.23000         W2 AT RELATIVE TIME = 1.15 SECONDS
 0312            DEC    0.16595         W0 AT RELATIVE TIME = 1.10 SECONDS
 0313            DEC    0.03824         W1 AT RELATIVE TIME = 1.10 SECONDS
 0314            DEC    0.24814         W2 AT RELATIVE TIME = 1.10 SECONDS
 0315            DEC    0.17063         W0 AT RELATIVE TIME = 1.05 SECONDS
 0316            DEC    0.04062         W1 AT RELATIVE TIME = 1.05 SECONDS
 0317            DEC    0.27018         W2 AT RELATIVE TIME = 1.05 SECONDS
 0318            DEC    0.17560         W0 AT RELATIVE TIME = 1.00 SECONDS
 0319            DEC    0.04332         W1 AT RELATIVE TIME = 1.00 SECONDS
 0320            DEC    0.29668         W2 AT RELATIVE TIME = 1.00 SECONDS
 0321            DEC    0.18080         W0 AT RELATIVE TIME = 0.95 SECONDS
 0322            DEC    0.04634         W1 AT RELATIVE TIME = 0.95 SECONDS
 0323            DEC    0.32824         W2 AT RELATIVE TIME = 0.95 SECONDS
 0324            DEC    0.18614         W0 AT RELATIVE TIME = 0.90 SECONDS
 0325            DEC    0.04968         W1 AT RELATIVE TIME = 0.90 SECONDS
 0326            DEC    0.36531         W2 AT RELATIVE TIME = 0.90 SECONDS
 0327            DEC    0.19147         W0 AT RELATIVE TIME = 0.85 SECONDS
 0328            DEC    0.05328         W1 AT RELATIVE TIME = 0.85 SECONDS
 0329            DEC    0.40821         W2 AT RELATIVE TIME = 0.85 SECONDS
 0330            DEC    0.19659         W0 AT RELATIVE TIME = 0.80 SECONDS
 0331            DEC    0.05707         W1 AT RELATIVE TIME = 0.80 SECONDS
 0332            DEC    0.45721         W2 AT RELATIVE TIME = 0.80 SECONDS
 0333            DEC    0.20122         W0 AT RELATIVE TIME = 0.75 SECONDS
 0334            DEC    0.06089         W1 AT RELATIVE TIME = 0.75 SECONDS
 0335            DEC    0.50999         W2 AT RELATIVE TIME = 0.75 SECONDS
 0336            DEC    0.20505         W0 AT RELATIVE TIME = 0.70 SECONDS
 0337            DEC    0.06451         W1 AT RELATIVE TIME = 0.70 SECONDS
 0338            DEC    0.56522         W2 AT RELATIVE TIME = 0.70 SECONDS
 0339            DEC    0.20775         W0 AT RELATIVE TIME = 0.65 SECONDS
 0340            DEC    0.06759         W1 AT RELATIVE TIME = 0.65 SECONDS
 0341            DEC    0.61768         W2 AT RELATIVE TIME = 0.65 SECONDS
 0342            DEC    0.20912         W0 AT RELATIVE TIME = 0.60 SECONDS
 0343            DEC    0.06972         W1 AT RELATIVE TIME = 0.60 SECONDS
 0344            DEC    0.65979         W2 AT RELATIVE TIME = 0.60 SECONDS
 0345            DEC    0.20934         W0 AT RELATIVE TIME = 0.55 SECONDS
 0346            DEC    0.07062         W1 AT RELATIVE TIME = 0.55 SECONDS
 0347            DEC    0.68165         W2 AT RELATIVE TIME = 0.55 SECONDS
 0348            DEC    0.20919         W0 AT RELATIVE TIME = 0.50 SECONDS
 0349            DEC    0.07028         W1 AT RELATIVE TIME = 0.50 SECONDS
 0350            DEC    0.67330         W2 AT RELATIVE TIME = 0.50 SECONDS
 0351            DEC    0.21020         W0 AT RELATIVE TIME = 0.45 SECONDS
 0352            DEC    0.06931         W1 AT RELATIVE TIME = 0.45 SECONDS
 0353            DEC    0.62883         W2 AT RELATIVE TIME = 0.45 SECONDS
 0354            DEC    0.21441         W0 AT RELATIVE TIME = 0.40 SECONDS
 0355            DEC    0.06908         W1 AT RELATIVE TIME = 0.40 SECONDS
 0356            DEC    0.55030         W2 AT RELATIVE TIME = 0.40 SECONDS
 0357            DEC    0.22391         W0 AT RELATIVE TIME = 0.35 SECONDS
 0358            DEC    0.07162         W1 AT RELATIVE TIME = 0.35 SECONDS
 0359            DEC    0.44810         W2 AT RELATIVE TIME = 0.35 SECONDS
 0360            DEC    0.24049         W0 AT RELATIVE TIME = 0.30 SECONDS
 0361            DEC    0.07956         W1 AT RELATIVE TIME = 0.30 SECONDS
 0362            DEC    0.33713         W2 AT RELATIVE TIME = 0.30 SECONDS
 0363            DEC    0.26566         W0 AT RELATIVE TIME = 0.25 SECONDS
 0364            DEC    0.09646         W1 AT RELATIVE TIME = 0.25 SECONDS
 0365            DEC    0.23140         W2 AT RELATIVE TIME = 0.25 SECONDS
 0366            DEC    0.30123         W0 AT RELATIVE TIME = 0.20 SECONDS
 0367            DEC    0.12841         W1 AT RELATIVE TIME = 0.20 SECONDS
 0368            DEC    0.14087         W2 AT RELATIVE TIME = 0.20 SECONDS
 0369            DEC    0.34996         W0 AT RELATIVE TIME = 0.15 SECONDS
 0370            DEC    0.18850         W1 AT RELATIVE TIME = 0.15 SECONDS
 0371            DEC    0.07101         W2 AT RELATIVE TIME = 0.15 SECONDS
 0372            DEC    0.41554         W0 AT RELATIVE TIME = 0.10 SECONDS
 0373            DEC    0.31141         W1 AT RELATIVE TIME = 0.10 SECONDS
 0374            DEC    0.02408         W2 AT RELATIVE TIME = 0.10 SECONDS
 0375            DEC    0.49561         W0 AT RELATIVE TIME = 0.05 SECONDS
 0376            DEC    0.61404         W1 AT RELATIVE TIME = 0.05 SECONDS
 0377            DEC    0.00006         W2 AT RELATIVE TIME = 0.05 SECONDS
P0378  2DUMMY TRIM GIMBAL RUPT:
 0379   DGTS     CAF    MS30F           RESET TIMER IMMEDIATELY: DT = 30 MS
 0380  2         TS     TIME5
 0381  2         LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0382            EXTEND                 SET UP FILTER RUPT
 0383            DCA    POSTPFIL
 0384  2         DXCH   T5ADR
 0385  2         TCF    NOQRSM
R0386  2DUMMY FILTER RUPT AFTER P-AXIS RUPT:
 0387   DUMMYFIL CAF    MS20F           RESET TIMER IMMEDIATELY: DT = 20 MS
 0388  2         TS     TIME5
 0389  2         LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0390            EXTEND                 SET UP QRAXIS RUPT
 0391            DCA    DFQRAXIS
 0392  2         DXCH   T5ADR
 0393  2         TCF    NOQRSM
 0394  4DFQRAXIS 2CADR  QRAXIS
R0395  2DUMMY FILTER RUPT AFTER Q,R-AXES RUPT:
 0396   FILDUMMY CAF    MS20F           RESET TIMER IMMEDIATELY: DT = 20 MS
 0397  2         TS     TIME5
 0398  2         LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0399            EXTEND                 SET UP PAXIS RUPT
 0400            DCA    PAX/FILT
 0401  2         DXCH   T5ADR
 0402            TCF    RESUME
L      2TRIM GIMBAL CONTROL SYSTEM
R0001   CONTROL REACHES THIS POINT UNDER EITHER OF THE FOLLOWING TWO CONDITIONS
 0002  9ONCE THE DESCENT ENGINE AND THE DIGITAL
R0003   AUTOPILOT ARE BOTH ON:
R0004            A) THE TRIM GIMBAL CONTROL LAW WAS ON DURING THE PREVIOUS Q,R-A
 0005  9XIS TIME5 INTERRUPT (OR THE DAPIDLER
R0006               INITIALIZATION WAS SET FOR TRIM GIMBAL CONTROL AND THIS IS T
 0007  9HE FIRST PASS), OR
R0008            B) THE Q,R-AXIS RCS JET CONTROL LAW ATTITUDE STEERING MODE REDU
 0009  9CED THE ATTITUDE ERROR TO LESS THAN
R0010  21DEGREE ON EACH AXIS ON ITS LAST TIME5 INTERRUPT.
R0011   THE FOLLOWING T5RUPT ENTRY BEGINS THE TRIM GIMBAL CONTROL LAW.  SINCE IT
 0012  9 IS ASSUMED THAT THE LEM WILL REMAIN
R0013  2UNDER TRIM GIMBAL CONTROL, A KALMAN FILTER RUPT IS SET UP TO BEGIN 30 MS
 0014  9 FROM THE TRIM GIMBAL RUPT.
 0015   GTS      CAF    MS30F           RESET TIMER IMMEDIATELY: DT = 30 MS
 0016  2         TS     TIME5
 0017            LXCH   BANKRUPT        INTERRUPT LEAD IN (CONTINUED)
 0018            EXTEND
 0019  2         QXCH   QRUPT
 0020            EXTEND
 0021            DCA    POSTPFIL
 0022  2         DXCH   T5ADR
 0023  2         TCF    GTSTEST         SKIP OVER XFORMS UNTIL REORGANIZATION
 0024   GIMBAL   EXTEND                 GET D.P. FILTERED CDUY VALUE (ONES COMP)
 0025            DCA    CDUYFIL         SCALED AT 2PI RADIANS
 0026            TC     ONETOTWO        FORM S.P. VALUE IN TWOS COMPLEMENT AT PI
 0027            EXTEND
 0028            MSU    CDUYD           FORM Y-AXIS ERROR IN ONES COMPLEMENT
 0029  2         TS     QDIFF           (SAVE IN Q-AXIS ERROR LOC: EFFICIENCY)
 0030            EXTEND                 GET D.P. FILTERED CDUZ VALUE (ONES COMP)
 0031            DCA    CDUZFIL         SCALED AT 2PI RADIANS
 0032            TC     ONETOTWO        FORM S.P. VALUE IN TWOS COMPLEMENT AT PI
 0033            EXTEND
 0034            MSU    CDUZD           FORM Z-AXIS ERROR IN ONES COMPLEMENT
 0035  2         TS     RDIFF           (SAVE IN R-AXIS ERROR LOC: EFFICIENCY)
R0036  2TRANSFORM Y,Z CDU ERRORS TO THE Q,R-AXES.
 0037            EXTEND                 GET BOTH Y AND Z CDU ERRORS AT PI RAD
 0038            DCA    QDIFF
 0039            TC     QTRANSF         FORM Q-ERROR IN A (SCALED AT PI RAD)
 0040            DXCH   QDIFF           STORE Q-ERROR, GET BOTH Y,Z CDU ERRORS
 0041            TC     RTRANSF         FORM R-ERROR IN A (SCALED AT PI RAD)
 0042  2         XCH    RDIFF           STORE R-ERROR
R0043   TRANSFORM THE FILTERED Y,Z RATES TO THE Q,R-AXES.
R0044  2(THESE MAY BE NEEDED FOR THE RATE DERIVATION FOR THE JETS IF THEY MUST B
 0045  9E USED.)
 0046            CAE    DCDUZFIL        GET FILTERED Y,Z RATES
 0047            TS     L               SCALED AT PI/4 RADIANS/SECOND
 0048            CAE    DCDUYFIL
 0049            TC     QTRANSF         FOR Q-AXIS RATE
 0050  2         TS     OMEGAQ          STORED SCALED AT PI/4 RADIANS/SECOND
 0051            CAE    DCDUZFIL        GET FILTERED Y,Z RATES
 0052            TS     L               SCALED AT PI/4 RADIANS/SECOND
 0053            CAE    DCDUYFIL
 0054            TC     RTRANSF         FOR R-AXIS RATE
 0055  2         TS     OMEGAR          STORED SCALED AT PI/4 RADIANS/SECOND
R0056   TRANSFORM THE FILTERED Y,Z ACCELERATIONS TO THE Q,R-AXES.
R0057  2(THESE MAY BE NEEDED TO CALCULATE TRIM GIMBAL OFF-TIMES IF ATTITUDE ERRO
 0058  9R HAS GONE BEYOND TRIM GIMBAL CONTROL.)
 0059            CAE    D2CDUZFL        GET FILTERED Y,Z ACCELERATIONS
 0060            TS     L               SCALED AT PI/8 RADIANS/SECOND(2)
 0061            CAE    D2CDUYFL
 0062            TC     QTRANSF         FORM Q-AXIS ACCELERATION
 0063  2         TS     ALPHAQ          STORE AT PI/8 RADIANS/SECOND(2)
 0064            CAE    D2CDUZFL        GET FILTERED Y,Z ACCELERATIONS
 0065            TS     L               SCALED AT PI/8 RADIANS/SECOND(2)
 0066            CAE    D2CDUYFL
 0067            TC     RTRANSF         FORM R-AXIS ACCELERATION
 0068  2         TS     ALPHAR          STORE AT PI/8 RADIANS/SECOND(2)
R0069  2EXTRAPOLATE THETA AND OMEGA OVER THE 20 MS DELAY BETWEEN THE KALMAN FILT
 0070  9ER AND THE TRIM GIMBAL CONTROL.
 0071            CAE    OMEGAQ
 0072            EXTEND
 0073            MP     DTW
 0074  2         ADS    QDIFF
 0075            CAE    OMEGAR
 0076            EXTEND
 0077            MP     DTW
 0078  2         ADS    RDIFF
 0079            CAE    ALPHAQ
 0080            EXTEND
 0081            MP     DTA
 0082  2         ADS    OMEGAQ
 0083            CAE    ALPHAR
 0084            EXTEND
 0085            MP     DTA
 0086  2         ADS    OMEGAR
 0087  2         TCF    RESUME
 0088   DTW      DEC    .005
 0089  2DTA      DEC    .0025
R0090   TEST TO SEE IF TRIM GIMBAL CONTROL LAW HAS KEPT BOTH ATTITUDE ERRORS BEL
 0091  9OW THE 1 DEGREE BOUNDARY WITH THE REGION
R0092  2OF RCS CONTROL LAW DOMINANCE OR IS STILL REDUCING THE ERROR.
 0093   GTSTEST  CAF    BIT2            VERIFY THAT GTS IS STILL OPERATIVE
 0094            MASK   DAPBOOLS
 0095            CCS    A
 0096            TCF    RCSCNTRL        GTS NOT OPERATIVE
 0097            CAF    BIT1
 0098   LOOPTEST TS     QRCNTR
 0099            INDEX  QRCNTR
 0100            CCS    QDIFF           SCALED AT PI.
 0101            AD     -TGBND+1        -2 DEG SCALED AT PI, + 1 BIT.
 0102            TCF     +2
 0103            AD     -TGBND+1
 0104            EXTEND
 0105            BZMF    +2             IS ERROR MAG LESS,EQUAL 2 DEG.
 0106            TCF    RCSCNTRL        NO.   GO TO JETS.
 0107            CA     QRCNTR          YES.  TRY RATE MAGNITUDE.
 0108            DOUBLE
 0109            INDEX  A
 0110            CCS    OMEGAQ          SCALED AT PI/4.
 0111            AD     -RATBD+1        -.65 DEG/SEC SCALED AT PI/4  + 1 BIT
 0112            TCF     +2
 0113            AD     -RATBD+1
 0114            EXTEND
 0115            BZMF    +2             IS RATE MAG LESS,EQUAL .65 DEG/SEC.
 0116            TCF    RCSCNTRL        NO.    GO TO JETS.
 0117            CCS    QRCNTR          YES.  THIS AXIS IS FINE. ARE BOTH DONE.
 0118            TCF    LOOPTEST        TRY THE Q AXIS NOW.
 0119            TCF    GTSRAXIS        USE TRIM GIMBAL CONTROL.
 0120   -TGBND+1 OCT    77512           -2 DEG SCALED AT PI, + 1 BIT.
 0121   -RATBD+1 OCT    77423           -.65 DEG/SEC SCALED AT PI/4  + 1 BIT
R0126   ATTITUDE ERROR IS BEYOND TRIM GIMBAL CONTROL LAW RANGE.  SET UP FOR RCS
 0127  9CONTROL LAW (Q,R-AXIS) AND CALCULATE
R0128  2TIMES TO TURN OFF THE GIMBAL DRIVES.
 0129   RCSCNTRL CAF    POSTQRFL        CHANGE LOCATION OF NEXT T5RUPT FROM
 0130  2         TS     T5ADR           FILTER TO FILDUMMY
 0131            CAF    QRJPFILT        SET UP POST P-AXIS T5RUPT TO GO TO
 0132  2         TS     PFILTADR        DUMMYFIL INSTEAD OF FILTER
R0133   *** PLACEHOLDER FOR REV 12 DELETION ***
R0134   *** PLACEHOLDER FOR REV 12 DELETION ***
 0135            EXTEND                 PREPARE FOR SEQUENCED RESUMPTION OF
 0136            DCA    CDUY            Q,R-AXIS RCS CONTROL RATE DERIVATION
 0137  2         DXCH   OLDYFORQ        BY PROVIDING OLD CDU READINGS
 0138            EXTEND                 MOVE FILTERED AND TRANSFORMED ATTITUDE
 0139            DCA    QDIFF           ERRORS INTO ERASABLE FOR Q,R-AXIS RCS
 0140            XCH    RERROR          CONTROL: NOTE THAT THE AXES SEEM TO BE
 0141  2         LXCH   QERROR          INTERCHANGED BUT ARE NOT CONFUSED
 0142            CAF    ONE
 0143            TC     WAITLIST
 0144            2CADR  CHEKDRIV        DO TGOFF CALCULATION IN WAITLIST TASK
 0145            EXTEND                 GO TO Q,R-AXES CONTROL IMMEDIATELY
 0146            DCA    TGENTRY
 0147  2         DTCB
R0148   *** PLACEHOLDER FOR REV 12 DELETION ***
 0149   POSTQRFL GENADR FILDUMMY
 0150   QRJPFILT GENADR DUMMYFIL
 0151  4TGENTRY  2CADR  STILLRCS
 0152   CHEKDRIV CAF    ZERO            CALCULATE Q-AXIS GIMBAL DRIVE SHUTDOWN T
 0153            TC     TGOFFCAL
 0154            TC     WAITLIST
 0155            2CADR  OFFGIMQ
 0156            CAF    TWO             CALCULATE R-AXIS GIMBAL DRIVE SHUTDOWN T
 0157            TC     TGOFFCAL
 0158            TC     WAITLIST
 0159            2CADR  OFFGIMR
 0160  2         TC     WRCHN12         SET UP NEW DRIVES AS OF NOW
 0161            TCF    TASKOVER
P0162   THE DRIVE SETTING ALGORITHM
R0163  2DEL = SGN(OMEGA.K + SGN(ALPHA)ALPHA(2)/2)    ONLY +1/-1
R0164  2NEGUSUM = ERROR.K(2) + DEL((OMEGA.K.DEL + ALPHA(2)/2)(3/2) + (OMEGA.K.DE
 0165  9L + ALPHA(2)/3)ALPHA
R0166  2DRIVE = -SGN(NEGUSUM)
 0167   -.04266  DEC    -.04266
 0168   GTSRAXIS CAF    TWO             SET INDEXER FOR R-AXIS CALCULATIONS
 0169            TS     QRCNTR
 0170  2         TCF    GTSQAXIS
 0171   GOQTRIMG CAF    ZERO            SET INDEXER FOR Q-AXIS CALCULATIONS
 0172  2         TS     QRCNTR
 0173   GTSQAXIS EXTEND
 0174            INDEX  QRCNTR          PICK UP K AND K(2) FOR THIS AXIS
 0175            DCA    KQ
 0176  2         DXCH   KCENTRAL
 0177            EXTEND
 0178            INDEX  QRCNTR          PICK UP OMEGA AND ALPHA FOR THIS AXIS
 0179            DCA    OMEGAQ
 0180  2         DXCH   WCENTRAL
 0181            CAE    QRCNTR
 0182            EXTEND
 0183            BZF     +3
 0184            CAE    RDIFF
 0185            TCF     +2
 0186  2         CAE    QDIFF
 0187            EXTEND                 RESCALE DIFFERENCE BY MULTIPLYING BY
 0188            MP     BIT7            2(6)
 0189  2         LXCH   ETHETA
 0190            CAE    KCENTRAL        TEST ON MAGNITUDE OF ACCDOT
 0191            AD     -.04266
 0192            EXTEND
 0193  2         BZMF   ACCDOTSM        BRANCH IF ACCDOT IS SMALL
 0194   ACCDOTLG CAF    BIT14           ACCDOT IS COMPARITIVELY LARGE
 0195            TS     SF1             SET UP SCALE FACTORS
 0196            CAF    BIT12
 0197  2WSFTEST  TS     SF2
 0198            CCS    WCENTRAL        TEST ON MAGNITUDE OF OMEGA
 0199            AD     -.04438
 01991           TCF     +2
 01992           AD     -.04438
 0200            EXTEND
 0201  2         BZMF   ASFTEST         IF SMALL, GO TO ALPHA TEST
 0202  2         TCF    WLARGE
 0203   ACCDOTSM CAE    KCENTRAL        RESCALE IF ACCDOT IS SMALL
 0204            EXTEND
 0205            MP     BIT5            RESCALE K BY MULTIPLYING BY 2(4)
 0206            LXCH   KCENTRAL
 0207            CAE    KCENTRAL
 0208            EXTEND
 0209            SQUARE
 0210            TS     K2CNTRAL
 0211            CAF    BIT10           SET UP VARIABLE SCALE FACTORS
 0212            TS     SF1
 0213            CAF    BIT4
 0214  2         TCF    WSFTEST         GO TEST ON MAGNITUDE OF OMEGA
 0215   ASFTEST  CCS    ACENTRAL        TEST ON MAGNITUDE OF ALPHA
 0216            AD     -.08882
 02161           TCF     +2
 02162           AD     -.08882
 0217            EXTEND
 0218            BZMF   WARESCAL        IF SMALL, GO TO W,A RESCALING
 0219  2         TCF    WLARGE          IF LARGE, DO SAME AS IF W LARGE
 0220   -.04438  DEC    -.04438
 0221  2-.08882  DEC    -.08882
 0222   WARESCAL CAE    WCENTRAL        RESCALE OMEGA BY MULTIPLYING BY 2(4)
 0223            EXTEND
 0224            MP     BIT5
 0225  2         LXCH   WCENTRAL
 0226            CAE    ACENTRAL        RESCALE ALPHA BY MULTIPLYING BY 2(3)
 0227            EXTEND
 0228            MP     BIT4
 0229  2         LXCH   ACENTRAL
 0230  2         TCF    ALGORTHM
 0231   WLARGE   CAE    SF1             RESCALE VARIABLE SCALE FACTORS
 0232            EXTEND
 0233            MP     BIT13           SF1 = SF1*2(-2)
 0234            TS     SF1
 0235            CAE    SF2
 0236            EXTEND
 0237            MP     BIT6            SF2 = SF2*2(-9)
 0238  2         TS     SF2
 0239   ALGORTHM CAE    ETHETA          GET RESCALED ERROR THETA
 0240            EXTEND
 0241            MP     K2CNTRAL        FORM K(2)*THETA IN D.P.
 0242            LXCH   K2THETA
 0243            EXTEND                 FORM K(2)*THETA*SF2 IN D.P.
 0244            MP     SF2
 0245            DXCH   K2THETA
 0246            EXTEND
 0247            MP     SF2
 0248  2         ADS    K2THETA +1
 0249            CAE    WCENTRAL        GET OMEGA
 0250            EXTEND
 0251            MP     KCENTRAL        FORM K*OMEGA IN D.P.
 0252            LXCH   OMEGA.K
 0253            EXTEND                 FORM OMEGA*K*SF1 IN D.P.
 0254            MP     SF1
 0255            DXCH   OMEGA.K
 0256            EXTEND
 0257            MP     SF1
 0258  2         ADS    OMEGA.K +1
 0259            CAE    ACENTRAL        FORM ALPHA(2) IN D.P.
 0260            EXTEND
 0261            SQUARE
 0262  2         DXCH   A2CNTRAL
 0263            CAE    ACENTRAL        GET SGN(ALPHA)
 0264            EXTEND
 0265            BZMF    +4
 0266            EXTEND
 0267            DCA    A2CNTRAL
 0268            TCF     +3
 0269            EXTEND
 0270            DCS    A2CNTRAL
 0271            DXCH   FUNCTION        SAVE AS SGN(ALPHA)ALPHA(2)
 0272            EXTEND
 0273            DCA    OMEGA.K
 0274  2         DAS    FUNCTION        FORM FUNCT1
 0275            CCS    FUNCTION        DEL = SGN(FUNCT1)
 0276            TCF    POSFNCT1
 0277            TCF     +2
 0278  2         TCF    NEGFNCT1
 0279            CCS    FUNCTION +1     USE LOW ORDER WORD SINCE HIGH IS ZERO
 0280   POSFNCT1 CAF    TWO
 0281            TCF     +2
 0282   NEGFNCT1 CAF    ZERO
 0283            AD     NEG1
 0284  2         TS     DEL
 0285            CCS    DEL             MAKE OMEGA*K REALLY DEL*OMEGA*K
 0286            TCF    FUNCT2          (NOTHING NEED BE DONE)
 0287   .66667   DEC    .66667
 0288            EXTEND
 0289            DCS    OMEGA.K
 0290  2         DXCH   OMEGA.K         CHANGE SIGN OF OMEGA*K
 0291   FUNCT2   EXTEND
 0292            DCA    OMEGA.K
 0293            DXCH   FUNCTION        DEL*OMEGA*K
 0294            EXTEND
 0295            DCA    A2CNTRAL
 0296  2         DAS    FUNCTION        DEL*OMEGA*K + SGN(ALPHA)ALPHA(2)
 0297   FUNCT3   CAE    A2CNTRAL        CALCULATE (2/3)SGN(ALPHA)ALPHA(2)
 0298            EXTEND
 0299            MP     .66667
 0300            DXCH   A2CNTRAL
 0301            XCH    L
 0302            EXTEND
 0303            MP     .66667
 0304            ADS    A2CNTRAL +1
 0305            TS     L
 0306            TCF     +2
 0307  2         AD     A2CNTRAL
 0308            DXCH   OMEGA.K         DEL*OMEGA*K+
 0309  2         DAS    A2CNTRAL        (2/3)SGN(ALPHA)ALPHA(2)=G
 0310            CAE    A2CNTRAL        G*ALPHA IN D.P.
 0311            EXTEND
 0312            MP     ACENTRAL
 0313            DXCH   A2CNTRAL
 0314            XCH    L
 0315            EXTEND
 0316            MP     ACENTRAL
 0317            ADS    A2CNTRAL +1
 0318            TS     L
 0319            TCF     +2
 0320  2         ADS    A2CNTRAL
 0321            DXCH   A2CNTRAL        FIRST AND THIRD TERMS
 0322  2         DAS    K2THETA         SUMMED IN D.P.
R0323  2THE FOLLOWING SECTION CALCULATES .707*DEL*FUNCTION(3/2) AND ADDS IT TO T
 0324  9HE OTHER TWO TERMS OF NEGUSUM.
 0325            CCS    FUNCTION        TEST FOR HIGH ORDER WORD NON-ZERO
 0326            TCF    FMAGTEST        YES, SEE IF RESCALING IS NECESSARY
 0327            TCF     +2             NO, USE LOW ORDER WORD ONLY
 0328   .707GTS  DEC    .70711          (CCS HOLE USED FOR DATA)
 0329  2         TC     T6JOBCHK
 0330            CAE    FUNCTION +1     USE LOW ORDER WORD ONLY
 0331            TC     SPROOT          SQUARE ROOT SUBROUTINE CALL
 0332            EXTEND                         3/2
 0333            MP     FUNCTION +1     FUNCTION
 0334            EXTEND                 (NEEDS TO BE SHIFTED RIGHT 21 PLACES)
 0335            MP     BIT8
 0336            XCH    L
 0337            CAF    ZERO                         3/2
 0338            DXCH   FUNCTION        SAVE FUNCTION    IN FUNCTION LOCATION
 0339  2         TCF    DELTEST
 0340   SQRESCAL CAE    FUNCTION        HIGH ORDER WORD OF FUNCTION NEEDS TO BE
 0341            EXTEND                 RESCALED FOR ACCURACY, SO MULTIPLY D.P.
 0342            MP     BIT7            VALUE BY 2(6)
 0343            LXCH   FUNCTION
 0344            CAF    ZERO
 0345            XCH    FUNCTION +1
 0346            EXTEND
 0347            MP     BIT7
 0348  2         DAS    FUNCTION
 0349            CAF    ZERO            SET FLAG TO GO TO RESCALE, AND GO TO DO
 0350            TS     MULTFLAG        SQUARE ROOT AND FUNCTION(3/2)
 0351  2         TCF    DOSPROOT        CALCULATION
 0352   DELTEST  CS     POSMAX          SET FLAG TO GO TO NEGUSUM
 0353            TS     MULTFLAG
 0354            CCS    DEL             GET DEL*.707
 0355            CAF    .707GTS
 0356            TCF     +2
 0357            CS     .707GTS
 0358  2         TCF    SPDPMULT        GO TO MULTIPLY ROUTINE
 0359   RESHIFT  CAF    POSMAX          SET FLAG TO GO TO DELTEST
 0360            TS     MULTFLAG
 0361            CAF    BIT6
 0362  2         TCF    SPDPMULT        GO TO MULTIPLY ROUTINE
 0363   FMAGTEST AD     63/64+1         IF MAGNITUDE OF HIGH ORDER WORD IS LESS
 0364            OVSK                   THAN 1/64 RESCALE WHOLE D.P. WORD
 0365  2         TCF    SQRESCAL
 0366            CAF    POSMAX
 0367  2         TS     MULTFLAG
 0368   DOSPROOT CAE    FUNCTION        USE HIGH ORDER WORD ONLY
 0369  2         TC     SPROOT          SQUARE ROOT SUBROUTINE CALL
 0370   SPDPMULT XCH    FUNCTION        THIS IS AN OPEN SUBROUTINE WHICH USES
 0371            EXTEND                 MULTFLAG AS A RETURN SWITCH.
 0372            MP     FUNCTION        IT MULTIPLIES FUNCTION (D.P.) BY C(A)
 0373            DXCH   FUNCTION        AND LEAVES THE RESULT IN FUNCTION (D.P.)
 0374            EXTEND                 IT IS USED FOR-
 0375            MP     L               1) F(1/2)*F
 0376            ADS    FUNCTION +1     2) (.707*DEL)*F
 0377            TS     L               3) 2(-9)*F
 0378            TCF     +2
 0379  2         ADS    FUNCTION
 0380            CCS    MULTFLAG        POSMAX MEANS GO TO DELTEST
 0381            TCF    DELTEST         ZERO   MEANS GO TO RESHIFT
 0382  2         TCF    RESHIFT         NEGMAX MEANS GO TO NEGUSUM
 0383   NEGUSUM  EXTEND                 FORM FINAL SUM FOR NEGUSUM
 0384            DCA    FUNCTION
 0385  2         DAS    K2THETA
 0386            CCS    K2THETA         TEST FOR ZERO HIGH ORDER PART
 0387            TCF    NEGDRIVE
 0388            TCF     +2
 0389  2         TCF    POSDRIVE
 0390            CCS    K2THETA +1      SIGN TEST ON LOW ORDER PART
 0391   NEGDRIVE CAF    TWO
 0392            TCF     +2
 0393   POSDRIVE CAF    ZERO
 0394            AD     NEG1
 0395            INDEX  ITEMP6          SET NEGUQ,R TO NEG DRIVE
 0396  2         TS     NEGUQ
 0397            COM
 0398            EXTEND                 SEND BACK JERK TERM
 0399            INDEX  ITEMP6
 0400            MP     ACCDOTQ
 0401            INDEX  ITEMP6
 0402  2         LXCH   QACCDOT
 0403            CCS    QRCNTR          LOOP COUNTER
 0404  2         TCF    GOQTRIMG
R0405  2TRANSFORM JERKS BACK TO GIMBAL AXES.
 0406            CAE    QACCDOT         SCALED AT PI/2(7)
 0407            EXTEND
 0408            MP     MR12            SCALED AT 2
 0409            TS     Y3DOT
 0410            CAE    RACCDOT         SCALED AT PI/2(7)
 0411            EXTEND
 0412            MP     MR13            SCALED AT 2
 0413            ADS    Y3DOT
 0414  2         ADS    Y3DOT           SCALED AT PI/2(7)
 0415            CAE    QACCDOT         SCALED AT PI/2(7)
 0416            EXTEND
 0417            MP     MR22            SCALED AT 1
 0418            TS     Z3DOT
 0419            CAE    RACCDOT         SCALED AT PI/2(7)
 0420            EXTEND
 0421            MP     MR23            SCALED AT 1
 0422  2         ADS    Z3DOT           SCALED AT PI/2(7)
 0423            TC     WRCHN12         SEND GIMBAL DRIVES TO SERVOS
 0424  2         TCF    RESUME          WAIT UNTIL NEXT TRIM GIMBAL RUPT
R0425  2WAITLIST TASKS TO SET TRIM GIMBAL TURN OFF BITS.
 0426   OFFGIMQ  CAF    ZERO            SET Q-AXIS FLAG TO ZERO
 0427            TS     NEGUQ
 0428            TCF     +3
 0429   OFFGIMR  CAF    ZERO            SET R-AXIS FLAG TO ZERO
 0430            TS     NEGUR
 0431            TC     WRCHN12         FLAGS TO CHANNEL BITS
 0432  2         TCF    TASKOVER
R0433   THE WRCHN12 SUBROUTINE SETS BITS 9,10,11,12 OF CHANNEL 12 ON THE BASIS O
 0434  9F THE CONTENTS OF NEGUQ,NEGUR WHICH ARE
R0435  2THE NEGATIVES OF THE TRIM GIMBAL DESIRED DRIVES.
 0436   BGIM     OCTAL  07400
 0437  2CHNL12   EQUALS ITEMP6
 0438   WRCHN12  CS     BGIM            SAVE THE REST OF CHANNEL 12 DURING TESTS
 0439            EXTEND
 0440            RAND   12
 0441  2         TS     CHNL12          (TEMPORARY STORAGE)
 0442            CCS    NEGUQ
 0443            CAF    BIT9
 0444            TCF     +2
 0445            CAF    BIT10
 0446  2         ADS    CHNL12
 0447            CCS    NEGUR
 0448            CAF    BIT11
 0449            TCF     +2
 0450            CAF    BIT12
 0451            ADS    CHNL12          (STORED RESULT NOT USED AT PRESENT)
 0452            EXTEND
 0453  2         WRITE  12
 0454  2         TC     Q               SIMPLE RETURN ALWAYS
R0455   Q,R-TRANSF TRANSFORMS A Y,Z GIMBAL COORDINATE VARIABLE PAIR (IN A,L) TO
 0456  9PILOT COORDINATES (Q/R), RETURNED IN A.
R0457  2(THE MATRIX M FROM GIMBAL TO PILOT AXES IS ASSUMED TO BE DONE BY T4RUPT
 0458  9AND SCALED AT +1.)
 0459  2QRERAS   EQUALS ITEMP6
 0460   QTRANSF  LXCH   QRERAS          SAVE Z-AXIS VARIABLE
 0461            EXTEND
 0462            MP     M21             (Y-AXIS)*M21
 0463            XCH    QRERAS          SAVE, GET Z-AXIS VARIABLE
 0464            EXTEND
 0465            MP     M22             (Z-AXIS)*M22
 0466            AD     QRERAS          SUM = (Y-AXIS)*M21 + (Z-AXIS)*M22
 0467  2         TC     Q               RETURN WITH SUM IN A
 0468   RTRANSF  LXCH   QRERAS          SAVE Z-AXIS VARIABLE
 0469            EXTEND
 0470            MP     M31             (Y-AXIS)*M31
 0471            XCH    QRERAS          SAVE, GET Z-AXIS VARIABLE
 0472            EXTEND
 0473            MP     M32             (Z-AXIS)*M32
 0474            AD     QRERAS          SUM = (Y-AXIS)*M31 + (Z-AXIS)*M32
 0475  2         TC     Q               RETURN WITH SUM IN A
 0476   (2/3)    DEC    0.66667
P0478  2SUBROUTINE: TGOFFCAL            MOD. NO. 1  DATE: AUGUST 22, 1966
R0479  2PROGRAM DESIGN BY: RICHARD D. GOSS (MIT/IL)
R0480  2PROGRAM IMPLEMENTATION BY: JONATHAN D. ADDELSTON (ADAMS ASSOCIATES)
R0481   THIS SUBROUTINE CALCULATES THE TRIM GIMBAL SHUTDOWN TIME FOR EITHER THE
 0482  9Q OR THE R AXIS (DEPENDING ON THE
R0483   CALLING SEQUENCE).  THIS TIME IS SCALED FOR IMMEDIATE USE BY A WAITLIST
 0484  9CALL AS SHOWN IN THE CALLING SEQUENCES.
R0485   IF THE TIME-TO-GO IS MORE THAN TWO MINUTES, IT IS LIMITED TO TWO MINUTES
 0486  9 DUE TO THE WAITLIST SPECIFICATION.  IF
R0487   THE TIME-TO-GO IS LESS THAN TEN MILLISECONDS, THE SHUTDOWN IS PERFORMED
 0488  9IMMEDIATELY AND THE WAITLIST CALL IS
R0489   BY-PASSED.  FINALLY, IF THE TRIM GIMBAL SHOULD HAPPEN TO BE MOVING IN A
 0490  9DIRECTION WHICH INCREASES THE ANGULAR
R0491   ACCELERATION ABOUT THE GIVEN AXIS, THEN THE NEGATIVE GIMBAL DRIVE FLAG I
 0492  9S IMMEDIATELY COMPLEMENTED AND THE
R0493  2NORMAL CALCULATIONS ARE RESUMED.
R0494   THESE TIME-TO-GO CALCULATIONS ARE DESIGNED TO DRIVE THE TRIM GIMBAL TO A
 0495  9 POSITION WHERE THE DESCENT ENGINE WILL
R0496   CAUSE NO ANGULAR ACCELERATION.  THIS SUBROUTINE IS CALLED ONLY FROM THE
 0497  9WAITLIST TASK CHEKDRIV WHICH IS
R0498   INITIATED ONLY WHEN THE TRIM GIMBAL CONTROL LAW HAS LOST CONTROL OF THE
 0499  9LEM VEHICLE ATTITUDE AND MUST RETURN TO
R0500  2THE USE OF REACTION CONTROL SYSTEM JETS.
R0501  2CALLING SEQUENCES:
R0502                       26,1000  3 7657 1            CAF    ZERO
 0503  9Q-AXIS INDEXER
R0504                       26,1001  0 $$$$ $            TC     TGOFFCAL
 0505  9CALL TGOFFCAL (*** REPLACE $S ***)
R0506                       26,1002  0 4511 0            TC     WAITLIST
 0507  9CALL WAITLIST WITH CALCULATED TIME
R0508                       26,1003   0$$$$ $            2CADR  OFFGIMQ
 0509  92CADR OF Q-AXIS SHUTDOWN PROGRAM
R0510  2                    26,1004   54006 1
R0511                       26,1005  3 7657 1            CAF    TWO
 0512  9R-AXIS INDEXER
R0513                       26,1006  0 $$$$ $            TC     TGOFFCAL
 0514  9CALL TGOFFCAL (*** REPLACE $S ***)
R0515                       26,1007  0 4511 0            TC     WAITLIST
 0516  9CALL WAITLIST WITH CALCULATED TIME
R0517                       26,1010   0$$$$ $            2CADR  OFFGIMR
 0518  92CADR OF R-AXIS SHUTDOWN PROGRAM
R0519  2                    26,1011   54006 1
R0520  2SUBROUTINES CALLED: NONE, BUT WRCHNL12 IS CALLED AFTER BOTH TGOFFCALL CA
 0521  9LLS.
R0522  2NORMAL EXITS: TO WAITLIST CALL OR BEYOND 2CADR IN CALLING SEQUENCE AS SP
 0523  9ECIFIED ABOVE.
R0524  2ALARM OR ABORT EXIT MODES: NONE
R0525   INPUT: 1. THE AXIS INDEXER: 0 FOR Q, 2 FOR R (SEE CALLING SEQUENCES)
R0526          2. THE SIGNED TIME DERIVATIVE OF ACCELERATION (QACCDOT OR RACCDOT
 0527  9) SCALED AT PI/2(7) RAD/SEC(3).
R0528          3. THE ACCELERATION APPROXIMATION FROM THE DESCENT KALMAN FILTER
 0529  9TRANSFORMED TO PILOT AXES (ALPHAQ OR
R0530   ALPHAR) SCALED AT PI/8 RAD/SEC(2).
R0531          4. THE NEGATIVE GIMBAL DRIVE FLAG (NEGUQ AND NEGUR) WHERE +1 BIT
 0532  9INDICATES A GIMBAL DRIVE DIRECTION WHICH
R0533   DECREASES THE SIGNED GIMBAL ANGLE, WHERE -1 BIT INDICATES A GIMBAL DRIVE
 0534  9 DIRECTION WHICH INCREASES THE SIGNED
R0535   GIMBAL ANGLE, AND WHERE ZERO INDICATES NO DRIVE.
R0536  2       5. CHANNEL 12 CONTAINS THE TRIM GIMBAL DRIVES AND OTHER BITS.
R0537  2ERASABLE STORAGE CONFIGURATION (NEEDED BY THE INDEXING METHODS):
A0538   NEGUQ    ERASE   +2             NEGATIVE OF Q-AXIS GIMBAL DRIVE
A0539   (SPWORD) EQUALS NEGUQ +1        ANY S.P. ERASABLE NUMBER, NOW THRSTCMD
A0540  2NEGUR    EQUALS NEGUQ +2        NEGATIVE OF R-AXIS GIMBAL DRIVE
A0541   QACCDOT  ERASE   +2             Q-JERK SCALED AT PI/2(7) RAD/SEC(3) +SGN
A0542   (SPWORD) EQUALS QACCDOT +1      ANY S.P. ERASABLE NUMBER, NOW ACCDOTR
A0543   RACCDOT  EQUALS QACCDOT +2      R-JERK SCALED AT PI/2(7) RAD/SEC(3) +SGN
A0544  2                                NOTE: NOW ACCDOTQ MUST PRECEDE QACCDOT
A0545   ALPHAQ   ERASE   +2             Q-AXIS ACCELERATION SCALED AT PI/8 R/S2
A0546   (SPWORD) EQUALS ALPHAQ +1       ANY S.P. ERASABLE NUMBER, NOW OMEGAR
A0547   ALPHAR   EQUALS ALPHAQ +2       R-AXIS ACCELERATION SCALED AT PI/8 R/S2
A0548  2                                NOTE: NOW OMEGAP,OMEGAQ PRECEDE ALPHAQ
R0549  4DEBRIS: L, Q, ITEMP1, ITEMP2, ITEMP6
 0550   TGOFFCAL TS     QRNDXER         Q OR R AXIS INDEXER
 0551            INDEX  QRNDXER         GET SIGNED JERK TERM SCALED AT PI/2(7)
 0552            CAE    QACCDOT         IN RADIANS/SECOND(3)
 0553            EXTEND                 IF THETA TRIPLE-DOT IS ZERO, THEN RESET
 0554            BZF    TGOFFNOW        DRIVE TO ZERO (SHOULD BE REDUNDANT)
 0555            TS     NZACCDOT        SAVE NON-ZERO JERK FOR DENOMINATOR
 0556            EXTEND                 TEST FOR REDUCING ACCELERATION IS SAME
 0557            INDEX  QRNDXER         AS TEST FOR SAME SIGN IN -ACC AND ACCDOT
 0558            MP     ALPHAQ          IF POSITIVE PRODUCT, THEN GIMBAL DRIVE
 0559            CCS    A               SHOULD BE REVERSED: NOTE THAT A SIMPLE
 0560            TCF    NEGTIME         BZMF TEST WILL NOT WORK WHEN THE MP
 0561            TCF    NEGTIME         INSTRUCTION RESULTS IN ZERO IN A
 0562            TCF    POSTIME         AT POSTIME IT IS INSURED THAT A POSITIVE
 0563  2         TCF    POSTIME         TIME WILL RESULT AND ACC WILL GO TO ZERO
 0564   NEGTIME  INDEX  QRNDXER         COMPLEMENT THE DRIVE DIRECTION FLAG
 0565            CS     NEGUQ
 0566            INDEX  QRNDXER
 0567            TS     NEGUQ
 0568            CS     NZACCDOT        COMPLEMENT ACCDOT TO GET A GUARANTEED
 0569  2         TS     NZACCDOT        POSITIVE TIME FROM QUOTIENT
 0570   POSTIME  INDEX  QRNDXER         TIME = -ACC/ACCDOT (POSITIVE VALUE)
 0571            CS     ALPHAQ          SCALED AT PI/8 RADIANS/SECOND(2)
 0572            EXTEND                 MULTIPLY BY 1/16
 0573            MP     BIT11           TO CHANGE SCALING TO 2PI RAD/SEC(2)
 0574            EXTEND                 ACCDOT SCALED AT PI/2(7) IN DENOMINATOR
 0575            DV     NZACCDOT        YIELDS TIME SCALED AT 256 SECONDS
 0576            AD     -2MIN256        COMPARE WITH MAXIMUM 2 MINUTE DELAY OF
 0577            CCS    A               WAITLIST ACTION (TIMES AT 256 SECONDS)
 0578            CS     -2MINWL         MORE THAN TWO MINUTES, USE 2 MINUTES
 0579            TC     Q               RETURN WL CALL WITH 2 MIN AT 1BIT=10MS
 0580            AD     ONE             (CORRECT FOR CCS BIT)
 0581            EXTEND                 CALCULATE DT = ABS(T-2MIN)
 0582            MP     128/164         AND RESCALE DT TO WAITLIST SCALING
 0583            DDOUBL
 0584            AD     -2MINWL         -T = DT + 2MIN (IN WAITLIST SCALING)
 0585            COM                    MAKE T POSITIVE FOR WAITLIST
 0586            EXTEND                 MAKE FINAL CHECK TO INSURE T .G. 10 MS
 0587            BZMF   TGOFFNOW        DO SHUTDOWN NOW (COULD USE BZF)
 0588  2         TC     Q               RETURN TO WAITLIST CALL WITH WL TIME
 0589   TGOFFNOW CAF    ZERO            MAKE SURE PLUS ZERO FOR DRIVE FLAG
 0590            INDEX  QRNDXER         TURN OFF DRIVE FLAG NOW
 0591            TS     NEGUQ
 0592            INDEX  Q
 0593  4         TC     3               SKIP WAITLIST CALL AND 2CADR
 0594   QRNDXER  EQUALS ITEMP1          INDEXER FOR Q OR R AXIS
 0595   NZACCDOT EQUALS ITEMP2          TEMPORARY STORAGE FOR NON-ZERO ACCDOT
 0596   -2MINWL  DEC    -12000          - 2 MINUTES SCALED FOR WAITLIST
 0597   -2MIN256 DEC    -.46875         - 2 MINUTES SCALED AT 256
 0598   128/164  OCTAL  31000           128/163.84 CONVERTING 256 TO WAITLIST/2
 0599   ENDDAP26 EQUALS
L       AOSTASK
 0001            BANK   25
 0002  2         EBANK= AOSQ
 0003   AOSTASK  CAF    BIT8            TEST POWERED ASCENT FLAG (BIT8/DAPBOOLS)
 0004            MASK   DAPBOOLS        0- NOT POWERED ASCENT
 0005            EXTEND                 1- POWERED ASCENT
 0006  2         BZF    COASTASC        END CYCLE OF TASKS DURING ASCENT COAST
 0007            CAE    KCOEFCTR        TEST KCOEFCTR FOR INITIAL PASS
 0008            EXTEND
 0009  2         BZF    ZEROCOEF        DISCONTINUITY SECTION FOR COEFFA
 0010            AD     DEC-399         TEST KCOEFCTR FOR CONSTANT RANGE
 0011            EXTEND                 ON BOTH K AND COEFFA
 0012            BZMF    +2
 00121 2         TCF    KONENOW
 001215          CAF    0.00125         COEFFA = 0.00125(T) + 0.25
 00122           EXTEND
 00123           MP     KCOEFCTR
 00124           CAF    BIT13
 00125           AD     L
 00126 2COEFFA   TS     ITEMP2
 0013            CAF    0.0014          K = 0.0014(T) + 0.44
 0014            EXTEND
 0015            MP     KCOEFCTR
 0016            CAF    0.44
 0017            AD     L
 0018            TS     ITEMP1
 0019            COM                    (1-K),QR SCALED AT 1
 0020            AD     POSMAX          (1 BIT ERROR DOES NOT COMPOUND)
 0022  2         TS     (1-K)QR
 0023            EXTEND                 (1-K)/8 IS (1-K) SCALED AT 8
 0024            MP     BIT12
 0025  2         TS     (1-K)/8
 00251           CAE    ITEMP1          WFORQR = K/DT SCALED AT 16
 00252           EXTEND
 00253           MP     10AT16WL        DT = .1 SECS
 00254 2         TS     WFORQR
 0026            CS     ITEMP1          FORM (.1-.05K) FROM K SCALED AT 1
 0027            EXTEND                 WHICH IS USED AS IS BUT SINCE THE SUM
 0028            MP     .05AT.5         IS TO BE SCALED AT 1/2, THE TWO
 0029            AD     .1AT.5          CONSTANTS REFLECT THAT SCALE FACTOR
 0030  2         TS     ITEMP1
 0040   COEFFA1  CAE    ITEMP2          FORM COEFFA(AOSQ)
 0041            EXTEND
 0042            MP     AOSQ
 0043  2         TS     AOSQ            FIRST TERM OF NEW AOSQ, SCALED AT PI/2
 0044            CAE    ITEMP2          FORM COEFFA(AOSR)
 0045            EXTEND
 0046            MP     AOSR
 0047  2         TS     AOSR            FIRST TERM OF NEW AOSR, SCALED AT PI/2
 0048            CS     ITEMP2          FORM .5(1-COEFFA) SCALED AT 2
 00481           EXTEND                 FROM COEFFA SCALED AT 1 WHICH IS THE
 00482           MP     BIT13           SAME AS 2(COEFFA) SCALED AT 2
 0049            AD     BIT13           SO MULTIPLY BY 1/4 TO GET .5(COEFFA)
 0050  2         TS     ITEMP2          AND 1/4 IS 1/2 WHEN SCALED AT 2
 0051            CS     OMEGAQ          SAVE PRESENT OMEGAQ FOR NEXT PASS
 0052            XCH    OLDWFORQ        GET -(LAST OMEGAQ)
 0053            EXTEND
 0054            SU     SUMRATEQ        FORM- W - W(OLD) - SUMRATE = SUM
 0055            AD     OMEGAQ          SCALED AT PI/4 RADIANS/SECOND
 0056            EXTEND
 0057            MP     ITEMP2          AOSQ = COEFFA(AOSQ)+.5(1-COEFFA)(SUM)
 0058  2         ADS    AOSQ            SCALED AT PI/2 RADIANS/SECOND(2)
 0059            CS     OMEGAR          SAVE PRESENT OMEGAQ FOR NEXT PASS
 0060            XCH    OLDWFORR        GET -(LAST OMEGAR)
 0061            EXTEND
 0062            SU     SUMRATER        FORM- W - W(OLD) - SUMRATE = SUM
 0063            AD     OMEGAR          SCALED AT PI/4 RADIANS/SECOND
 0064            EXTEND
 0065            MP     ITEMP2          AOSR = COEFFA(AOSR)+.5(1-COEFFA)(SUM)
 0066  2         ADS    AOSR            SCALED AT PI/2 RADIANS/SECOND(2)
 00661           CAE    ITEMP1
 00662           EXTEND                 FORM TERM FOR RATE DERIVATION
 00663           MP     AOSQ            (.1-.05K)AOSQ
 00664 2         TS     AOSQTERM        SCALED AT PI/4 RADIANS/SECOND
 0067            CAE    ITEMP1
 0068            EXTEND                 FORM TERM FOR RATE DERIVATION
 0069            MP     AOSR            (.1-.05K)AOSR
 0070  2         TS     AOSRTERM        SCALED AT PI/4 RADIANS/SECOND
 0071            CAE    AOSQ            FORM AOS FOR U-AXIS
 0072            AD     AOSR
 0073            EXTEND
 0074            MP     .707WL
 0075  2         TS     AOSU            SCALED AT PI/2 RADIANS/SECOND(2)
 0076            CS     AOSQ            FORM AOS FOR V-AXIS
 0077            AD     AOSR
 0078            EXTEND
 0079            MP     .707WL
 0080  2         TS     AOSV            SCALED AT PI/2 RADIANS/SECOND(2)
 0081            CAF    THREE           SET UP LOOP FOR Q,R,U,V-AXES
 0082  2         TS     AXISCNTR
 0083   ALLAXES  INDEX  AXISCNTR
 0084            CCS    AOSQ            FORM ABSOLUTE VALUE OF AOS
 0085            AD     ONE
 0086            TCF     +2
 0087            AD     ONE
 0088            INDEX  AXISCNTR        SAVE IN ITEMP REGISTER (3-6)
 0089            TS     ABVLAOSQ        SCALED AT PI/2 RADIANS/SECOND(2)
 0090            AD     -.02R/S2        -.02 RADIANS/SECOND(2) SCALED AT PI/2
 0091            EXTEND
 0092            BZMF   CONSTMIN        USE 1/(.02) SEC(2)/RAD AS 1/AMIN
 00955           AD     +.02R/S2
 0096            TS     ITEMP2
 0098            CAF    BIT7
 0099            ZL                     SCALE FACTOR FOR .5ACCMIN.
 00995           EXTEND
 0100            DV     ITEMP2
 0101   ACCMINVL INDEX  AXISCNTR
 0102  2         TS     .5ACCMNQ        SCALED AT 2(+8)/PI
 0103            CAF    -.02R/S2        CALCULATE ONE OF THE FOLLOWING (4) SUMS:
 0104            EXTEND                 2JETAC(Q,R)-ABAOS(Q,R)-.02RAD/SEC(2) OR
 0105            INDEX  AXISCNTR        1JETAC(U,V)-ABAOS(1,V)-.02RAD/SEC(2)
 0106            SU     ABVLAOSQ        EACH SUM HAS EACH TERM SCALED AT PI/2
 0107            INDEX  AXISCNTR        THE "OUTER LOOP" IS DEFINED TO CALCULATE
 0108            AD     1JACCQ          THE VALUES 1JACCQ, 1JACCR SCALED AT PI/4
 0109            EXTEND                 AND 1JACCU, 1JACCV SCALED AT PI/2 WHERE
 0110            BZMF   DEMANDAC        1JACCU = 2(.707)(1JACCQ+1JACCR) AND
 0111            CAF    ZERO            1JACCV = 2(.707)(1JACCQ+1JACCR)
 0112            INDEX  AXISCNTR        WHERE THE CALCULATIONS USE THE FACT THAT
 0113            TS     QMANDACC        1JACC(Q,R) AT PI/4 = 2JACC(Q,R) AT PI/2
 0114            INDEX  AXISCNTR        MANDACC(Q,R)=1 MEANS USE 4 JETS, 0 FOR 2
 0115            CAE    1/2JTSQ         MANDACC(U,V)=1 MEANS USE 2 JETS, 0 FOR 1
 01151           EXTEND
 01152           MP     BIT14
 0116   AXISLOOP INDEX  AXISCNTR        SET UP 1/NJTSX TO 1/2JTSX FOR URGENCY
 0117  2         TS     1/NJTSQ         (DOES NOT COUNT FOR U,V-AXES)
 0118            CCS    AXISCNTR        DECREMENT LOOP COUNTER AND TEST FOR END
 0119            TCF     +2
 0120  2         TCF    NEXTCALL        FINISHED LOOP
 0121            TS     AXISCNTR
 0122  2         TCF    ALLAXES         CONTINUE LOOP
 0123   CONSTMIN CAF    AMINCNST        1/AMIN = 1/(.02) SEC(2)/RAD AT 2(8)/PI
 0124  2         TCF    ACCMINVL
 0125   DEMANDAC CAF    POSMAX          SET MANDATORY HIGH ACCELERATION FLAG TO
 0126            INDEX  AXISCNTR        OVER-RIDE 2 JET DECISION FOR Q,R-AXES OR
 0127            TS     QMANDACC        2 JET OPTIONAL DECISION FOR U,V-AXES
 0128            INDEX  AXISCNTR        FORM 1/4JTSX VALUE FOR USE IN URGENCY
 0129            CAE    1/2JTSQ         FROM 1/2JTSX
 0130            EXTEND                 (DOES NOT COUNT FOR U,V-AXES)
 0131            MP     BIT13
 0134  2         TCF    AXISLOOP
 0135   ZEROCOEF CAF    TWO             INITIALIZE TIME SETTING
 01351           TS     KCOEFCTR
 01352           CAF    ZERO
 0136  2         TCF    COEFFA
 0146   KONENOW  CAF    ZERO            K=1, SO 1-K AT EITHER SCALING IS ZERO
 01461           ZL                     EXTEND, DCA DPZERO IS FASTER BUT WASTES
 01462           DXCH   (1-K)QR         STORAGE IN SWITCHED FIXED UNLESS IN FF
 01463           CAF    10AT16WL        WFORQR = K/DT = 10K = 10
 01464           TS     WFORQR          SCALED AT 16
 01465           CAF    .05AT.5         SAVE (.1-.05K) SCALED AT 1/2
 01466           TS     ITEMP1          FOR AOSTERMS
 01467           CAF    .75             SET COEFFA = .75
 014675          TS     ITEMP2
 01468           TCF    COEFFA1
 0149   NEXTCALL CAF    2SECSAOS        SET UP WAITLIST CALL FOR TWO SECS
 0150            TC     WAITLIST
 0151            2CADR  AOSTASK
 01511           CAF    TWO             INCREMENT TIME COUNTER
 01512           ADS    KCOEFCTR
 0152            CAF    ZERO            ZERO SUMMED RATES
 0153            TS     SUMRATEQ
 0154            TS     SUMRATER
 0155  2         TCF    TASKOVER
 0156   COASTASC CAF    0.3125WL
 0157            TS     WFORQR
 0158            EXTEND
 0159            DCA    (1-K)S
 0160            DXCH   (1-K)QR
 0161            CAF    BIT3
 0162            MASK   DAPBOOLS
 0163            AD     BIT3
 0164            TS     DAPBOOLS
 0165            CAF    0.30680
 0166            TS     .5ACCMNE
 01661           TS     .5ACCMNQ
 01662           TS     .5ACCMNR
 01663           TS     .5ACCMNU
 01664           TS     .5ACCMNV
 0167            EXTEND
 0168            DCA    1/2JTSQ
 0169            DXCH   1/NJTSQ
 0170            EXTEND
 0171            DCA    1/2JETSU
 0172            DXCH   1/NJTSU
 0173            CAF    0.00167A
 0174            TS     MINIMPDB
 01741           TS     DBMINIMP
 0175            CAF    ZERO
 0176            TS     AOSQ
 0177            TS     AOSR
 0178            TS     AOSQTERM
 0179            TS     AOSRTERM
 0180            TS     QMANDACC
 0181            TS     RMANDACC
 0182            TS     UMANDACC
 0183            TS     VMANDACC
 0184  2         TCF    TASKOVER
 0185   AXISCNTR EQUALS ITEMP1
 0186   DEC-399  DEC    -399            BOUND FOR CONSTANT RANGE: T.GE.400 SECS.
 0187   0.0012   DEC    0.0012
 0188   0.52     DEC    0.52
 0189   DEC-160  DEC    -160
 0190   0.0024   DEC    0.0024
 0191   0.366    DEC    0.366
 0192   .05AT.5  DEC    0.1
 0193   .1AT.5   DEC    0.2
 0194   .707WL   DEC    0.70711
 0195   -.02R/S2 DEC    -.01273
 01951  .04R/S2  DEC    0.02546
 0196   0.30680  DEC    0.30680
 0197   10AT16WL DEC    0.625
 0198   .75      DEC    0.75
 0199   AMINCNST EQUALS 0.30680
 0200   2SECSAOS DEC    200
 0201   0.3125WL DEC    0.3125
 0202   0.00167A DEC    0.00167
 02021  0.00125  DEC    0.00125
 02022  0.0014   DEC    0.0014
 02023  0.44     DEC    0.44
 02024  +.02R/S2 DEC    0.01273
 0203   (1-K)S   DEC    0.5
 0204            DEC    0.0625
L       RCS FAILURE MONITOR
 07575           BANK   12
P0758  2FAILURE MONITOR FOR LEM RCS JETS (4 TIMES/SECOND)
R0759  2*** FAILSW CAPABILITY FOR CHECKOUT ONLY ***
 0760   RCSMONIT CCS    FAILSW
 0761  2         TCF    ENDRCSFL        DO NOTHING IF POSITIVE
 0762            CA     LASTFAIL        LAST FAILURE CHANNEL VALUE
 0763            EXTEND
 0764            RXOR   32
 0765            MASK   LOW8
 0766            EXTEND
 0767  2         BZF    NOSTCHG         NO STATUS CHANGE, FINISHED
 0768            EXTEND
 0769            DCA    MNTRCS
 0770            DTCB
 0771   MNTRCS   2CADR  RCSMNTR
 0772  4ENDT4S   EQUALS
 0773            BANK   25
 0774   RCSMNTR  CA     ZERO            THERE IS A DIFFERENCE,CLEAR MASKS
 1711            TS     CH5MASK
 1712  2         TS     CH6MASK
 1713            EXTEND                 READ PRESENT FAILURES
 1714            READ   32
 1715  2         TS     LASTFAIL        SAVE FOR NEXT PASS
 1716            COM                    FAILURES NOW ONES
 1717            EXTEND
 1718            MP     BIT7            SHIFT TO TEST LOW 8 BITS
 1719            CA     ZERO
 1720            TS     FAILCTR         INITIALIZE COUNTER
 1721            CA     L
 1722  2         TCF    NXTRCSPR +1
 1723    -1      AD     BIT1
 1724   NXTRCSPR INCR   FAILCTR
 17245   +1      DOUBLE
 1725            TS     FAILTEMP        OVERFLOW CHECK
 1726  2         TCF    NXTRCSPR
 1727            INDEX  FAILCTR
 1728  2         TC     RCSFJUMP        GO THROUGH JUMP TABLE
 1729            CCS    FAILTEMP
 1730  2         TCF    NXTRCSPR -1     FINISH EARLY, OR MORE TO DO
 1731            TCF    ENDRCSFL
 1732   RCSFJUMP TCF    FM10/11
 1733            TCF    FM9/12
 1734            TCF    FM13/15
 1735            TCF    FM14/16
 1736            TCF    FM6/7
 1737            TCF    FM1/3
 1738            TCF    FM5/8
 1739  2         TCF    FM2/4
 1740   FM10/11  CA     BIT6
 1741            ADS    CH5MASK
 1742            CA     BIT4
 1743            ADS    CH6MASK
 1744  2         TC     Q
 1745   FM9/12   CA     BIT5
 1746            ADS    CH5MASK
 1747            CA     BIT5
 1748            ADS    CH6MASK
 1749  2         TC     Q
 1750   FM13/15  CA     BIT7
 1751            ADS    CH5MASK
 1752            CA     BIT3
 1753            ADS    CH6MASK
 1754  2         TC     Q
 1755   FM14/16  CA     BIT8
 1756            ADS    CH5MASK
 1757            CA     BIT8
 1758            ADS    CH6MASK
 1759  2         TC     Q
 1760   FM6/7    CA     BIT4
 1761            ADS    CH5MASK
 1762            CA     BIT1
 1763            ADS    CH6MASK
 1764  2         TC     Q
 1765   FM1/3    CA     BIT1
 1766            ADS    CH5MASK
 1767            CA     BIT2
 1768            ADS    CH6MASK
 1769  2         TC     Q
 1770   FM5/8    CA     BIT3
 1771            ADS    CH5MASK
 1772            CA     BIT6
 1773            ADS    CH6MASK
 1774  2         TC     Q
 1775   FM2/4    CA     BIT2
 1776            ADS    CH5MASK
 1777            CA     BIT7
 1778            ADS    CH6MASK
 1779  2         TC     Q
 1780   ENDRCSFL EQUALS RESUME
 1781   NOSTCHG  EQUALS RESUME
L      2ASCENT INERTIA UPDATER
 0001  2IXXTASK  TC     JACCESTP
 0002  2         TC     ASCENGON
 0003            EXTEND
 0004            DIM    IXX
 0005            CAF    IXXTIME
 0006            TC     WAITLIST
 0007            2CADR  IXXTASK
 0008  2         TCF    TASKOVER
 0009  2IYYTASK  TC     JACCESTQ
 0010  2         TC     ASCENGON
 0011            EXTEND
 0012            DIM    IYY
 0013            CAF    IYYTIME
 0014            TC     WAITLIST
 0015            2CADR  IYYTASK
 0016  2         TCF    TASKOVER
 0017  2IZZTASK  TC     JACCESTR
 0018  2         TC     ASCENGON
 0019            EXTEND
 0020            DIM    IZZ
 0021            CAF    IZZTIME
 0022            TC     WAITLIST
 0023            2CADR  IZZTASK
 0024  2         TCF    TASKOVER
 0025   IXXTIME  DEC    200
 0026   IYYTIME  DEC    1300
 0027  2IZZTIME  DEC    180
 0028   ASCENGON CAF    BIT8
 0029            MASK   DAPBOOLS
 0030            CCS    A
 0031            TC     Q
 0032  2         TCF    TASKOVER
 0033   JACCESTP CAE    IXX
 0034            ZL
 0035            EXTEND
 0036            DV     4JETTORK
 0037            DOUBLE
 0038  2         TS     1/2JTSP
 0039            CAF    JETTORK
 0040            ZL
 0041            EXTEND
 0042            DV     IXX
 0043  2         TS     1JACC
 0044  2         TC     Q
 0045   JACCESTQ CAE    IYY
 0046            ZL
 0047            EXTEND
 0048            DV     JETTORK4
 0049  2         TS     1/NJTSQ
 0050            DOUBLE
 0051  2         TS     1/2JTSQ
 0052            CAF    JETTORK1
 0053            ZL
 0054            EXTEND
 0055            DV     IYY
 0056  2         TS     1JACCQ
 0057            TC     Q
 0058   JACCESTR CAE    IZZ
 0059            ZL
 0060            EXTEND
 0061            DV     JETTORK4
 0062  2         TS     1/NJTSR
 0063            DOUBLE
 0064  2         TS     1/2JTSR
 0065            CAF    JETTORK1
 0066            ZL
 0067            EXTEND
 0068            DV     IZZ
 0069  2         TS     1JACCR
 0070   COMMONQR CAE    1/2JTSQ
 0071            AD     1/2JTSR
 0072            EXTEND
 0073            MP     .707WL
 0074  2         TS     1/2JETSU        TEMP
 0075            CAE    1/2JTSQ
 0076            EXTEND
 0077            MP     1/2JTSR
 0078            EXTEND
 0079            DV     1/2JETSU        TEMP
 0080            TS     1/2JETSU
 0081  2         TS     1/2JETSV
 00811           CAE    1JACCQ
 00812           AD     1JACCR
 00813           EXTEND
 00814           MP     0.35356
 00815           TS     1JACCU
 00816 2         TS     1JACCV
 0082  2         TC     Q
 0083   JETTORK  DEC    0.00243         500 FT LBS. SCALED AT PI*2(+16)
 0084   JETTORK1 DEC    0.00267         550 FT LBS. SCALED AT PI*2(+16)
 00841  0.35356  DEC    0.35356
 0085   ENDDAP25 EQUALS
L      2SUM CHECK END OF BANK MARKERS
 0001            SETLOC ENDIMUF
 0002            TC
 0003  2         TC
 0004            SETLOC ENDINTF
 0005            TC
 0006  2         TC
 0007            SETLOC ENDINTS0
 0008            TC
 0009  2         TC
 0010            SETLOC ENDSLFS2
 0011            TC
 0012  2         TC
 0013            SETLOC ENDPINS1
 0014            TC
 0015  2         TC
 0016            SETLOC ENDPINS2
 0017            TC
 0018  2         TC
 0019            BANK   06
 0020            TC
 0021  2         TC
 0022            BANK   07
 0023            TC
 0024  2         TC
 0025            SETLOC ENDRTSTS
 0026            TC
 0027  2         TC
 0028            SETLOC ENDCMS
 0029            TC
 0030  2         TC
 0031            SETLOC ENDT4S
 0032            TC
 0033  2         TC
 0034            SETLOC ENDAMODS
 0035            TC
 0036  2         TC
 0037            SETLOC ENDIMUS1
 0038            TC
 0039  2         TC
 0040            SETLOC ENDRTBSS
 0041            TC
 0042  2         TC
 0043            SETLOC ENDIMUS3
 0044            TC
 0045  2         TC
 0046            SETLOC ENDIMUS2
 0047            TC
 0048  2         TC
 0049            SETLOC ENDSLFS1
 0050            TC
 0051  2         TC
 0052            SETLOC ENDPREL1
 0053            TC
 0054  2         TC
 0055            SETLOC ENDDAP23
 0056            TC
 0057  2         TC
 0058            SETLOC ENDDAP24
 0059            TC
 0060  2         TC
 0061            SETLOC ENDDAP25
 0062            TC
 0063  2         TC
 0064            SETLOC ENDDAP26
 0065            TC
 0066            TC
*       ENDOFJOB
